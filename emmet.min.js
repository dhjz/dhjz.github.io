





<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://assets-cdn.github.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-hqbuBb0QOOmiWgl8a1V1N5q6TI/G0A2hVt/lCFYafR+fYsuXeRUcsdcb/yUyVEHYXktmUXl0Mx9s/BOUNZVq4w==" rel="stylesheet" href="https://assets-cdn.github.com/assets/frameworks-23c9e7262eee71bc6f67f6950190a162.css" />
  <link crossorigin="anonymous" media="all" integrity="sha512-Tmj0bzh6pGuTOzcpS9hZwZ5/OueHTn15RCG9F8UIEAA/UmUr4tc5l22L4OBmSiHSD6Uz2pZZqvJ7MSWgP9wiVg==" rel="stylesheet" href="https://assets-cdn.github.com/assets/github-f3dbefb182d184a7c6bf518633cfcb38.css" />
  
  
  
  

  <meta name="viewport" content="width=device-width">
  
  <title>textarea/emmet.min.js at master Â· emmetio/textarea</title>
    <meta name="description" content="GitHub is where people build software. More than 27 million people use GitHub to discover, fork, and contribute to over 80 million projects.">
  <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    
    <meta property="og:image" content="https://avatars3.githubusercontent.com/u/2185347?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="emmetio/textarea" /><meta property="og:url" content="https://github.com/emmetio/textarea" /><meta property="og:description" content="Emmet plugin for &lt;textarea&gt;" />

  <link rel="assets" href="https://assets-cdn.github.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6Mjc2NTE0OTUzOjFmODcxZDM3MWMyZmFiMzg5NjEzZGQ5YzFlYTE3MmQ2ODQ2NmM2YTViZDI3MDZmOWRlNjVkZGQ0MmJhYWFjZWQ=--0168f0f160385d2f60940ae4911eb28528cf4a89">
  <meta name="pjax-timeout" content="1000">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="4D4C:71C6:26A7EB:386877:5AFAA32B" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

    <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
  <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
  <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">
    <meta name="google-analytics" content="UA-3769691-2">

<meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="4D4C:71C6:26A7EB:386877:5AFAA32B" /><meta name="octolytics-dimension-region_edge" content="ap-southeast-1" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-actor-id" content="35137457" /><meta name="octolytics-actor-login" content="dhjz" /><meta name="octolytics-actor-hash" content="e5eba1658f4f8eca1dfd440cc1301103e5e5b347324f02ddcf405a0f5cb95021" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />




  <meta class="js-ga-set" name="dimension1" content="Logged In">


  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="dhjz">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="OTkwNzVmNDM4YzEyNmFhOWEwN2M0NzQ3ZTNjOTY3Mjg4OGFmZWYwMTE4OTkzNzEwZDY0NTA0ZTVlNGUwNzcyOHx7InJlbW90ZV9hZGRyZXNzIjoiMTI1Ljg0LjE4Ny4xNTAiLCJyZXF1ZXN0X2lkIjoiNEQ0Qzo3MUM2OjI2QTdFQjozODY4Nzc6NUFGQUEzMkIiLCJ0aW1lc3RhbXAiOjE1MjYzNzUyMTQsImhvc3QiOiJnaXRodWIuY29tIn0=">

    <meta name="enabled-features" content="UNIVERSE_BANNER,FREE_TRIALS,MARKETPLACE_INSIGHTS,MARKETPLACE_SELF_SERVE,MARKETPLACE_FREE_APPS,MARKETPLACE_INSIGHTS_CONVERSION_PERCENTAGES">

  <meta name="html-safe-nonce" content="35bdb6a6d24c9f32fbc683a8a12cfd3d124c36d7">

  <meta http-equiv="x-pjax-version" content="44ad0442049b4ddf618360e3642c18de">
  

      <link href="https://github.com/emmetio/textarea/commits/master.atom" rel="alternate" title="Recent Commits to textarea:master" type="application/atom+xml">

  <meta name="description" content="Emmet plugin for &lt;textarea&gt;">
  <meta name="go-import" content="github.com/emmetio/textarea git https://github.com/emmetio/textarea.git">

  <meta name="octolytics-dimension-user_id" content="2185347" /><meta name="octolytics-dimension-user_login" content="emmetio" /><meta name="octolytics-dimension-repository_id" content="8322968" /><meta name="octolytics-dimension-repository_nwo" content="emmetio/textarea" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="8322968" /><meta name="octolytics-dimension-repository_network_root_nwo" content="emmetio/textarea" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/emmetio/textarea/blob/master/emmet.min.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://assets-cdn.github.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://assets-cdn.github.com/favicon.ico">

<meta name="theme-color" content="#1e2327">


  <meta name="u2f-support" content="true">

<link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="p-3 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <div id="js-pjax-loader-bar" class="pjax-loader-bar"><div class="progress"></div></div>

    
    
    <div class="unsupported-browser">
  <div class="container clearfix">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/site/dismiss_unsupported_browser" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="373vLSxTr6fZ36USIW3xpEzd8fXYuMBjLL+jpN59vGDH7lGawI6elKnqWrRq1XRP62X99x2U7tnM48VO+J5Z0Q==" />
      <button type="submit" class="btn btn-danger">Ignore</button>
</form>    <a href="https://help.github.com/articles/supported-browsers" class="btn">Learn more</a>

      <h5>Please note that GitHub no longer supports your web browser.</h5>
      <p>We recommend upgrading to the latest <a href="https://chrome.google.com">Google Chrome</a> or <a href="https://mozilla.org/firefox/">Firefox</a>.</p>
  </div>
</div>




        
<header class="Header  f5" role="banner">
  <div class="d-flex flex-justify-between px-3 container-lg">
    <div class="d-flex flex-justify-between ">
      <div class="">
        <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg height="32" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

      </div>

    </div>

    <div class="HeaderMenu d-flex flex-justify-between flex-auto">
      <div class="d-flex">
            <div class="">
              <div class="header-search scoped-search site-scoped-search js-site-search" role="search">
  <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" data-scope-type="Repository" data-scope-id="8322968" data-scoped-search-url="/emmetio/textarea/search" data-unscoped-search-url="/search" action="/emmetio/textarea/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
    <label class="form-control header-search-wrapper  js-chromeless-input-container">
          <a class="header-search-scope no-underline" href="/emmetio/textarea/blob/master/emmet.min.js">This repository</a>
      <input type="text"
        class="form-control header-search-input  js-site-search-focus js-site-search-field is-clearable"
        data-hotkey="s,/"
        name="q"
        value=""
        placeholder="Search"
        aria-label="Search this repository"
        data-unscoped-placeholder="Search GitHub"
        data-scoped-placeholder="Search"
        autocapitalize="off"
        >
        <input type="hidden" class="js-site-search-type-field" name="type" >
    </label>
</form></div>

            </div>

          <ul class="d-flex pl-2 flex-items-center text-bold list-style-none" role="navigation">
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
                Pull requests
</a>            </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
                Issues
</a>            </li>
                <li>
                  <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar, group:" data-selected-links=" /marketplace" href="/marketplace">
                    Marketplace
</a>                </li>
            <li>
              <a class="js-selected-navigation-item HeaderNavlink px-2" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
                Explore
</a>            </li>
          </ul>
      </div>

      <div class="d-flex">
        
<ul class="user-nav d-flex flex-items-center list-style-none" id="user-links">
  <li class="dropdown js-menu-container">
    <span class="d-inline-block  px-2">
      
    <a aria-label="You have no unread notifications" class="notification-indicator tooltipped tooltipped-s  js-socket-channel js-notification-indicator" data-hotkey="g n" data-ga-click="Header, go to notifications, icon:read" data-channel="notification-changed:35137457" href="/notifications">
        <span class="mail-status "></span>
        <svg class="octicon octicon-bell" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M13.99 11.991v1H0v-1l.73-.58c.769-.769.809-2.547 1.189-4.416.77-3.767 4.077-4.996 4.077-4.996 0-.55.45-1 .999-1 .55 0 1 .45 1 1 0 0 3.387 1.229 4.156 4.996.38 1.879.42 3.657 1.19 4.417l.659.58h-.01zM6.995 15.99c1.11 0 1.999-.89 1.999-1.999H4.996c0 1.11.89 1.999 1.999 1.999z"/></svg>
</a>
    </span>
  </li>

  <li class="dropdown js-menu-container">
    <details class="dropdown-details details-reset js-dropdown-details d-flex px-2 flex-items-center">
      <summary class="HeaderNavlink"
         aria-label="Create newâ¦"
         data-ga-click="Header, create new, icon:add">
        <svg class="octicon octicon-plus float-left mr-1 mt-1" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5v2z"/></svg>
        <span class="dropdown-caret mt-1"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        
<a class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>



  <div class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="emmetio/textarea">This repository</span>
  </div>
    <a class="dropdown-item" href="/emmetio/textarea/issues/new" data-ga-click="Header, create new issue">
      New issue
    </a>

      </ul>
    </details>
  </li>

  <li class="dropdown js-menu-container">

    <details class="dropdown-details details-reset js-dropdown-details d-flex pl-2 flex-items-center">
      <summary class="HeaderNavlink name mt-1"
        aria-label="View profile and more"
        data-ga-click="Header, show menu, icon:avatar">
        <img alt="@dhjz" class="avatar float-left mr-1" src="https://avatars0.githubusercontent.com/u/35137457?s=40&amp;v=4" height="20" width="20">
        <span class="dropdown-caret"></span>
      </summary>

      <ul class="dropdown-menu dropdown-menu-sw">
        <li class="dropdown-header header-nav-current-user css-truncate">
          Signed in as <strong class="css-truncate-target">dhjz</strong>
        </li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="/dhjz" data-ga-click="Header, go to profile, text:your profile">
          Your profile
        </a></li>
        <li><a class="dropdown-item" href="/dhjz?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">
          Your stars
        </a></li>
          <li><a class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, your gists, text:your gists">Your gists</a></li>

        <li class="dropdown-divider"></li>

        <li><a class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">
          Help
        </a></li>

        <li><a class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">
          Settings
        </a></li>

        <li><!-- '"` --><!-- </textarea></xmp> --></option></form><form class="logout-form" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="GFxufc0bPpHjfpcrOkroGBreE9gGF7QB1CdO7b0BpIjZITApGsK4GjSJirnIZm3ilsnKZb5IwBhsLodyynPe2g==" />
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
        </form></li>
      </ul>
    </details>
  </li>
</ul>



        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="sr-only right-0" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="+jyJJi/cjMz6D0HVLZY6Fu8QdsLwBZ1F/pMYYfy7M5o7Qddy+AUKRy34XEffur/sYwevf0ha6VxGmtH+i8lJyA==" />
          <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout">
            Sign out
          </button>
</form>      </div>
    </div>
  </div>
</header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>

    <div id="js-flash-container">
</div>



  <div role="main" class="application-main ">
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <div id="js-repo-pjax-container" data-pjax-container >
      





  



  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav  ">
    <div class="repohead-details-container clearfix container">

      <ul class="pagehead-actions">
  <li>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-autosubmit="true" data-remote="true" class="js-social-container" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="DYrC9BV3415D2EzijRsjLEXmpmVHNKC29lzZ5D2jM3YBRIBCnvUtQEsHJLPkpIHnXreHmmtV/2m6/o0RGD3HXA==" />      <input type="hidden" name="repository_id" id="repository_id" value="8322968" class="form-control" />

        <div class="select-menu js-menu-container js-select-menu">
          <a href="/emmetio/textarea/subscription"
            class="btn btn-sm btn-with-count select-menu-button js-menu-target"
            role="button"
            aria-haspopup="true"
            aria-expanded="false"
            aria-label="Toggle repository notifications menu"
            data-ga-click="Repository, click Watch settings, action:blob#show">
            <span class="js-select-button">
                <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                Watch
            </span>
          </a>
          <a class="social-count js-social-count"
            href="/emmetio/textarea/watchers"
            aria-label="8 users are watching this repository">
            8
          </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content">
            <div class="select-menu-header js-navigation-enable" tabindex="-1">
              <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
              <span class="select-menu-title">Notifications</span>
            </div>

              <div class="select-menu-list js-navigation-container" role="menu">

                <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_included" value="included" checked="checked" />
                    <span class="select-menu-item-heading">Not watching</span>
                    <span class="description">Be notified when participating or @mentioned.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                      Watch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_subscribed" value="subscribed" />
                    <span class="select-menu-item-heading">Watching</span>
                    <span class="description">Be notified of all conversations.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-eye" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                        Unwatch
                    </span>
                  </div>
                </div>

                <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                  <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
                  <div class="select-menu-item-text">
                    <input type="radio" name="do" id="do_ignore" value="ignore" />
                    <span class="select-menu-item-heading">Ignoring</span>
                    <span class="description">Never be notified.</span>
                    <span class="js-select-button-text hidden-select-button-text">
                      <svg class="octicon octicon-mute" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                        Stop ignoring
                    </span>
                  </div>
                </div>

              </div>

            </div>
          </div>
        </div>
</form>
  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container on">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="starred js-social-form" action="/emmetio/textarea/unstar" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="qEmefjrqn6Weo1YYzMRBr8ypCDutqC3P1IPmplMDpnPzJ6rTp0yCLBtAvlmOsPyYcN/qAZhOvrnrHQXCcNPGKw==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar emmetio/textarea"
        data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">
        <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/emmetio/textarea/stargazers"
           aria-label="97 users starred this repository">
          97
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="unstarred js-social-form" action="/emmetio/textarea/star" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="1Beyz91l6t4fBk5sB8hOlDA8P08Qk6NQ9u5i5hjKPnxfpyzV+vtRX7xmFyrhZfDgM8UfbRS6Bo0A2W03WujD9g==" />
      <input type="hidden" name="context" value="repository"></input>
      <button
        type="submit"
        class="btn btn-sm btn-with-count js-toggler-target"
        aria-label="Star this repository" title="Star emmetio/textarea"
        data-ga-click="Repository, click star button, action:blob#show; text:Star">
        <svg class="octicon octicon-star" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Star
      </button>
        <a class="social-count js-social-count" href="/emmetio/textarea/stargazers"
           aria-label="97 users starred this repository">
          97
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="btn-with-count" action="/emmetio/textarea/fork" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="NgaRfFUUgZFcOfx3KNABIDImuPaw78/YbB7ddzZTAN5DqjR1xYlTWcqPf2OCa5e8ynz2BePBKCWvXEUDbhWXsA==" />
            <button
                type="submit"
                class="btn btn-sm btn-with-count"
                data-ga-click="Repository, show fork modal, action:blob#show; text:Fork"
                title="Fork your own copy of emmetio/textarea to your account"
                aria-label="Fork your own copy of emmetio/textarea to your account">
              <svg class="octicon octicon-repo-forked" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 0 0-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 0 0 2 1a1.993 1.993 0 0 0-1 3.72V6.5l3 3v1.78A1.993 1.993 0 0 0 5 15a1.993 1.993 0 0 0 1-3.72V9.5l3-3V4.72A1.993 1.993 0 0 0 8 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
            </button>
</form>
    <a href="/emmetio/textarea/network" class="social-count"
       aria-label="29 users forked this repository">
      29
    </a>
  </li>
</ul>

      <h1 class="public ">
  <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" href="/emmetio">emmetio</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/emmetio/textarea">textarea</a></strong>

</h1>

    </div>
    
<nav class="reponav js-repo-nav js-sidenav-container-pjax container"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
     role="navigation"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /emmetio/textarea" href="/emmetio/textarea">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /emmetio/textarea/issues" href="/emmetio/textarea/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">4</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /emmetio/textarea/pulls" href="/emmetio/textarea/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0 0 10 15a1.993 1.993 0 0 0 1-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v6.56A1.993 1.993 0 0 0 2 15a1.993 1.993 0 0 0 1-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">0</span>
      <meta itemprop="position" content="3">
</a>  </span>

    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /emmetio/textarea/projects" href="/emmetio/textarea/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h13a1 1 0 0 0 1-1V1a1 1 0 0 0-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>
    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /emmetio/textarea/wiki" href="/emmetio/textarea/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>

  <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse /emmetio/textarea/pulse" href="/emmetio/textarea/pulse">
    <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
    Insights
</a>

</nav>


  </div>

<div class="container new-discussion-timeline experiment-repo-nav  ">
  <div class="repository-content ">

    
  <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/emmetio/textarea/blob/a2caeeb63ec01a52a57a282bbb55a99dd4c21186/emmet.min.js">Permalink</a>

  <!-- blob contrib key: blob_contributors:v21:1bdd97d83a049ebdd8614ab1d7f5827c -->

  <div class="file-navigation">
    
<div class="select-menu branch-select-menu js-menu-container js-select-menu float-left">
  <button class=" btn btn-sm select-menu-button js-menu-target css-truncate" data-hotkey="w"
    
    type="button" aria-label="Switch branches or tags" aria-expanded="false" aria-haspopup="true">
      <i>Branch:</i>
      <span class="js-select-button css-truncate-target">master</span>
  </button>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <svg class="octicon octicon-x js-menu-close" role="img" aria-label="Close" viewBox="0 0 12 16" version="1.1" width="12" height="16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
        <span class="select-menu-title">Switch branches/tags</span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="form-control js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab" role="tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab" role="tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches" role="menu">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/emmetio/textarea/blob/master/emmet.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <span class="select-menu-item-text css-truncate-target js-select-menu-filter-text">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

    <div class="BtnGroup float-right">
      <a href="/emmetio/textarea/find/master"
            class="js-pjax-capture-input btn btn-sm BtnGroup-item"
            data-pjax
            data-hotkey="t">
        Find file
      </a>
      <clipboard-copy for="blob-path" class="btn btn-sm BtnGroup-item">
        Copy path
      </clipboard-copy>
    </div>
    <div id="blob-path" class="breadcrumb">
      <span class="repo-root js-repo-root"><span class="js-path-segment"><a data-pjax="true" href="/emmetio/textarea"><span>textarea</span></a></span></span><span class="separator">/</span><strong class="final-path">emmet.min.js</strong>
    </div>
  </div>


  <include-fragment src="/emmetio/textarea/contributors/master/emmet.min.js" class="commit-tease">
    <div>
      Fetching contributors&hellip;
    </div>

    <div class="commit-tease-contributors">
      <img alt="" class="loader-loading float-left" src="https://assets-cdn.github.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" height="16" />
      <span class="loader-error">Cannot retrieve contributors at this time</span>
    </div>
</include-fragment>


  <div class="file">
    <div class="file-header">
  <div class="file-actions">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/emmetio/textarea/raw/master/emmet.min.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/emmetio/textarea/blame/master/emmet.min.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/emmetio/textarea/commits/master/emmet.min.js">History</a>
    </div>

        <a class="btn-octicon tooltipped tooltipped-nw"
           href="https://desktop.github.com"
           aria-label="Open this file in GitHub Desktop"
           data-ga-click="Repository, open with desktop, type:windows">
            <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
        </a>

          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/emmetio/textarea/edit/master/emmet.min.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="Dcon2wFn3QpvWTWNAM1vSZiav0tjzx8qcDRYnvkN8nP9f48lp6dXf+XLWund30bdkBCZ2f5cDmK9D8iznXVdjg==" />
            <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
              <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 0 1 1.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
            </button>
</form>
        <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/emmetio/textarea/delete/master/emmet.min.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="ZMLpSus5NY5I+kNXsqef9jZJlCFrG8nky0U3ABdDB9GquU3l+wk3KHm3h+tCfhIbVzK30JVaC39isnSsHnZq+g==" />
          <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
            aria-label="Fork this project and delete the file" data-disable-with>
            <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
          </button>
</form>  </div>

  <div class="file-info">
      336 lines (336 sloc)
      <span class="file-info-divider"></span>
    162 KB
  </div>
</div>

    

  <div itemprop="text" class="blob-wrapper data type-javascript">
      <table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">_</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">===</span>b)<span class="pl-k">return</span> a<span class="pl-k">!==</span><span class="pl-c1">0</span><span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">/</span>a<span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">/</span>b;<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">||</span>b<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> a<span class="pl-k">===</span>b;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_chain</span>)a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">_wrapped</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">_chain</span>)b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">_wrapped</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isEqual</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(<span class="pl-smi">a</span>.<span class="pl-smi">isEqual</span>))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">isEqual</span>(b);<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isEqual</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(<span class="pl-smi">b</span>.<span class="pl-smi">isEqual</span>))<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">isEqual</span>(a);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a);<span class="pl-k">if</span>(g<span class="pl-k">!=</span><span class="pl-smi">f</span>.<span class="pl-c1">call</span>(b))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">switch</span>(g){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object String]<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> a<span class="pl-k">==</span><span class="pl-c1">String</span>(b);<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object Number]<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> a<span class="pl-k">!=</span><span class="pl-k">+</span>a<span class="pl-k">?</span>b<span class="pl-k">!=</span><span class="pl-k">+</span>b<span class="pl-k">:</span>a<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">/</span>a<span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">/</span>b<span class="pl-k">:</span>a<span class="pl-k">==</span><span class="pl-k">+</span>b;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object Date]<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object Boolean]<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span><span class="pl-k">+</span>a<span class="pl-k">==</span><span class="pl-k">+</span>b;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[object RegExp]<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">source</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">source</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">global</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-smi">global</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">multiline</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">multiline</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">ignoreCase</span><span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">ignoreCase</span>}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-k">typeof</span> b<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>;d<span class="pl-k">--</span>;)<span class="pl-k">if</span>(c[d]<span class="pl-k">==</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,j<span class="pl-k">=</span>d<span class="pl-k">==</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(;d<span class="pl-k">--</span>;)<span class="pl-k">if</span>(<span class="pl-k">!</span>(j<span class="pl-k">=</span>d <span class="pl-k">in</span> a<span class="pl-k">==</span>d <span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(a[d],b[d],c)))<span class="pl-k">break</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>constructor<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>constructor<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">constructor</span><span class="pl-k">!=</span><span class="pl-smi">b</span>.<span class="pl-c1">constructor</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> l <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">has</span>(a,l)<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">++</span>,<span class="pl-k">!</span>(j<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-c1">has</span>(b,l)<span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(a[l],b[l],c))))<span class="pl-k">break</span>;<span class="pl-k">if</span>(j){<span class="pl-k">for</span>(l <span class="pl-k">in</span> b)<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">has</span>(b,l)<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">--</span>)<span class="pl-k">break</span>;</td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">=</span><span class="pl-k">!</span>d}}<span class="pl-smi">c</span>.<span class="pl-c1">pop</span>();<span class="pl-k">return</span> j}<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">_</span>,i<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>,c<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-c1">prototype</span>,a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">slice</span>,g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">unshift</span>,f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">toString</span>,j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">hasOwnProperty</span>,l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">forEach</span>,n<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">map</span>,m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">reduce</span>,o<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">reduceRight</span>,p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">filter</span>,r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">every</span>,q<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">some</span>,u<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">indexOf</span>,s<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lastIndexOf</span>,c<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-smi">isArray</span>,v<span class="pl-k">=</span><span class="pl-c1">Object</span>.<span class="pl-smi">keys</span>,w<span class="pl-k">=</span><span class="pl-c1">Function</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">bind</span>,<span class="pl-en">k</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">x</span>(a)};<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span>)<span class="pl-c1">exports</span><span class="pl-k">=</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>k;<span class="pl-c1">exports</span>.<span class="pl-smi">_</span><span class="pl-k">=</span>k}<span class="pl-k">else</span> <span class="pl-smi">d</span>.<span class="pl-smi">_</span><span class="pl-k">=</span>k;<span class="pl-smi">k</span>.<span class="pl-c1">VERSION</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>1.3.3<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> t<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">each</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">forEach</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">forEach</span><span class="pl-k">===</span>l)<span class="pl-smi">a</span>.<span class="pl-c1">forEach</span>(b,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>d;f<span class="pl-k">++</span>){<span class="pl-k">if</span>(f <span class="pl-k">in</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a[f],f,a)<span class="pl-k">===</span>i)<span class="pl-k">break</span>}<span class="pl-k">else</span> <span class="pl-k">for</span>(f <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">has</span>(a,f)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a[f],f,a)<span class="pl-k">===</span>i)<span class="pl-k">break</span>};<span class="pl-smi">k</span>.<span class="pl-smi">map</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">collect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>[];<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> f;<span class="pl-k">if</span>(n<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">map</span><span class="pl-k">===</span>n)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">map</span>(b,c);<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){f[<span class="pl-smi">f</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)});<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">===</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-smi">reduce</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">foldl</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">inject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">2</span>;a<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">if</span>(m<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">reduce</span><span class="pl-k">===</span>m)<span class="pl-k">return</span> f<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">bind</span>(b,f)),d<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">reduce</span>(b,c)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">reduce</span>(b);<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">g</span>,<span class="pl-smi">k</span>){d<span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(f,c,a,g,k)<span class="pl-k">:</span>(c<span class="pl-k">=</span>a,d<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>)});<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Reduce of empty array with no initial value<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> c};<span class="pl-smi">k</span>.<span class="pl-smi">reduceRight</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">foldr</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">2</span>;a<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>[]);<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">reduceRight</span><span class="pl-k">===</span>o)<span class="pl-k">return</span> f<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">bind</span>(b,f)),d<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">reduceRight</span>(b,c)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">reduceRight</span>(b);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">toArray</span>(a).<span class="pl-c1">reverse</span>();f<span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">bind</span>(b,f));<span class="pl-k">return</span> d<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">reduce</span>(g,b,c,f)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">reduce</span>(g,b)};<span class="pl-smi">k</span>.<span class="pl-smi">find</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">detect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f;</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-en">D</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g))<span class="pl-k">return</span> f<span class="pl-k">=</span>a,<span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-smi">filter</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">select</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>[];<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> f;<span class="pl-k">if</span>(p<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">filter</span><span class="pl-k">===</span>p)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">filter</span>(b,c);<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)<span class="pl-k">&amp;&amp;</span>(f[<span class="pl-smi">f</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>a)});<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-en">reject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span>[];<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> f;<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)<span class="pl-k">||</span>(f[<span class="pl-smi">f</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>a)});<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-smi">every</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">all</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> f;<span class="pl-k">if</span>(r<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">every</span><span class="pl-k">===</span>r)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">every</span>(b,c);<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(f<span class="pl-k">=</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)))<span class="pl-k">return</span> i});</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-k">!!</span>f};<span class="pl-k">var</span> <span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">some</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">any</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">identity</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> f;<span class="pl-k">if</span>(q<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">some</span><span class="pl-k">===</span>q)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">some</span>(b,c);<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(f<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)))<span class="pl-k">return</span> i});<span class="pl-k">return</span><span class="pl-k">!!</span>f};<span class="pl-smi">k</span>.<span class="pl-smi">include</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">contains</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> a<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">?</span>c<span class="pl-k">:</span>u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">indexOf</span><span class="pl-k">===</span>u<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(b)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-en">D</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span>b})};<span class="pl-smi">k</span>.<span class="pl-en">invoke</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">map</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(c)<span class="pl-k">?</span>c<span class="pl-k">||</span>a<span class="pl-k">:</span>a[c]).<span class="pl-c1">apply</span>(a,f)})};<span class="pl-smi">k</span>.<span class="pl-en">pluck</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">map</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a[b]})};</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">max</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">&amp;&amp;</span>a[<span class="pl-c1">0</span>]<span class="pl-k">===</span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>])<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-smi">max</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">Math</span>,a);<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isEmpty</span>(a))<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span>{computed<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">Infinity</span>};<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){d<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)<span class="pl-k">:</span>a;d<span class="pl-k">&gt;=</span><span class="pl-smi">f</span>.<span class="pl-smi">computed</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>{value<span class="pl-k">:</span>a,computed<span class="pl-k">:</span>d})});<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">value</span>};<span class="pl-smi">k</span>.<span class="pl-en">min</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">&amp;&amp;</span>a[<span class="pl-c1">0</span>]<span class="pl-k">===</span><span class="pl-k">+</span>a[<span class="pl-c1">0</span>])<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-smi">min</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">Math</span>,a);<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isEmpty</span>(a))<span class="pl-k">return</span> <span class="pl-c1">Infinity</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span>{computed<span class="pl-k">:</span><span class="pl-c1">Infinity</span>};<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>,<span class="pl-smi">g</span>){d<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,a,d,g)<span class="pl-k">:</span>a;d<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-smi">computed</span><span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>{value<span class="pl-k">:</span>a,computed<span class="pl-k">:</span>d})});<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">value</span>};<span class="pl-smi">k</span>.<span class="pl-smi">shuffle</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c;<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>){c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">*</span>(f<span class="pl-k">+</span><span class="pl-c1">1</span>));b[f]<span class="pl-k">=</span>b[c];b[c]<span class="pl-k">=</span>a});<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">sortBy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(b)<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a[b]};<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">pluck</span>(<span class="pl-smi">k</span>.<span class="pl-en">map</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>{value<span class="pl-k">:</span>a,criteria<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">call</span>(c,a,b,d)}}).<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">criteria</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">criteria</span>;<span class="pl-k">return</span> c<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>f<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>c<span class="pl-k">&lt;</span>f<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span>c<span class="pl-k">&gt;</span>f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>}),<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">k</span>.<span class="pl-en">groupBy</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{},f<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(b)<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a[b]};<span class="pl-en">t</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">f</span>(a,b);(c[d]<span class="pl-k">||</span>(c[d]<span class="pl-k">=</span>[])).<span class="pl-c1">push</span>(a)});</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> c};<span class="pl-smi">k</span>.<span class="pl-en">sortedIndex</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">identity</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>d;){<span class="pl-k">var</span> g<span class="pl-k">=</span>f<span class="pl-k">+</span>d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>;<span class="pl-en">c</span>(a[g])<span class="pl-k">&lt;</span><span class="pl-en">c</span>(b)<span class="pl-k">?</span>f<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">:</span>d<span class="pl-k">=</span>g}<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-en">toArray</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-k">!</span>b<span class="pl-k">?</span>[]<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(b)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b)<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">isArguments</span>(b)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">toArray</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(<span class="pl-smi">b</span>.<span class="pl-smi">toArray</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">toArray</span>()<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">values</span>(b)};<span class="pl-smi">k</span>.<span class="pl-en">size</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-c1">keys</span>(a).<span class="pl-c1">length</span>};<span class="pl-smi">k</span>.<span class="pl-smi">first</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">head</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">take</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> c<span class="pl-k">!=</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;!</span>f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">0</span>,c)<span class="pl-k">:</span>b[<span class="pl-c1">0</span>]};<span class="pl-smi">k</span>.<span class="pl-en">initial</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>(c<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">||</span>f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>c))};<span class="pl-smi">k</span>.<span class="pl-en">last</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> c<span class="pl-k">!=</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;!</span>f<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span>c,<span class="pl-c1">0</span>))<span class="pl-k">:</span>b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]};<span class="pl-smi">k</span>.<span class="pl-smi">rest</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">tail</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b,c<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">||</span>f<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span>c)};<span class="pl-smi">k</span>.<span class="pl-en">compact</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">filter</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>a})};<span class="pl-smi">k</span>.<span class="pl-en">flatten</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">reduce</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(c))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(b<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">flatten</span>(c));a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>c;<span class="pl-k">return</span> a},[])};<span class="pl-smi">k</span>.<span class="pl-en">without</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">difference</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>))};<span class="pl-smi">k</span>.<span class="pl-smi">uniq</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">unique</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">map</span>(a,c)<span class="pl-k">:</span>a,f<span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">k</span>.<span class="pl-en">reduce</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>){<span class="pl-k">if</span>(b<span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-en">last</span>(c)<span class="pl-k">!==</span>d<span class="pl-k">||!</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-en">include</span>(c,d))<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(d),<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(a[g]);<span class="pl-k">return</span> c},[]);<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-en">union</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">uniq</span>(<span class="pl-smi">k</span>.<span class="pl-en">flatten</span>(<span class="pl-c1">arguments</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))};<span class="pl-smi">k</span>.<span class="pl-smi">intersection</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">intersect</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">filter</span>(<span class="pl-smi">k</span>.<span class="pl-en">uniq</span>(b),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">every</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">indexOf</span>(b,a)<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>})})};<span class="pl-smi">k</span>.<span class="pl-en">difference</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">flatten</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">filter</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-en">include</span>(c,a)})};<span class="pl-smi">k</span>.<span class="pl-en">zip</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>),c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">max</span>(<span class="pl-smi">k</span>.<span class="pl-en">pluck</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>length<span class="pl-pds">&quot;</span></span>)),</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-c1">Array</span>(c),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)f[d]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">pluck</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d);<span class="pl-k">return</span> f};<span class="pl-smi">k</span>.<span class="pl-en">indexOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> f;<span class="pl-k">if</span>(c)<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">sortedIndex</span>(a,b),a[c]<span class="pl-k">===</span>b<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(u<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">indexOf</span><span class="pl-k">===</span>u)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(b);c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>f;c<span class="pl-k">++</span>)<span class="pl-k">if</span>(c <span class="pl-k">in</span> a<span class="pl-k">&amp;&amp;</span>a[c]<span class="pl-k">===</span>b)<span class="pl-k">return</span> c;<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-smi">k</span>.<span class="pl-en">lastIndexOf</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(s<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">lastIndexOf</span><span class="pl-k">===</span>s)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">lastIndexOf</span>(b);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;c<span class="pl-k">--</span>;)<span class="pl-k">if</span>(c <span class="pl-k">in</span> a<span class="pl-k">&amp;&amp;</span>a[c]<span class="pl-k">===</span>b)<span class="pl-k">return</span> c;<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-smi">k</span>.<span class="pl-en">range</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;=</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>a<span class="pl-k">||</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">1</span>,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>((b<span class="pl-k">-</span>a)<span class="pl-k">/</span>c),<span class="pl-c1">0</span>),d<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">Array</span>(f);d<span class="pl-k">&lt;</span>f;)g[d<span class="pl-k">++</span>]<span class="pl-k">=</span>a,a<span class="pl-k">+=</span>c;<span class="pl-k">return</span> g};<span class="pl-k">var</span> <span class="pl-en">E</span><span class="pl-k">=</span><span class="pl-k">function</span>(){};<span class="pl-smi">k</span>.<span class="pl-en">bind</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f,d;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">bind</span><span class="pl-k">===</span>w<span class="pl-k">&amp;&amp;</span>w)<span class="pl-k">return</span> <span class="pl-smi">w</span>.<span class="pl-c1">apply</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(b))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>;d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-en">f</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">this</span> <span class="pl-k">instanceof</span> f))<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(c,<span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>)));<span class="pl-c1">E</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">prototype</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">E</span>,k<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(g,<span class="pl-smi">d</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>)));<span class="pl-k">return</span> <span class="pl-c1">Object</span>(k)<span class="pl-k">===</span>k<span class="pl-k">?</span>k<span class="pl-k">:</span>g}};<span class="pl-smi">k</span>.<span class="pl-en">bindAll</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>);<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">functions</span>(b));</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line"><span class="pl-en">t</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b[a]<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">bind</span>(b[a],b)});<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">memoize</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-smi">identity</span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>);<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">has</span>(c,f)<span class="pl-k">?</span>c[f]<span class="pl-k">:</span>c[f]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)}};<span class="pl-smi">k</span>.<span class="pl-en">delay</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,f)},c)};<span class="pl-smi">k</span>.<span class="pl-en">defer</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-smi">delay</span>.<span class="pl-c1">apply</span>(k,[b,<span class="pl-c1">1</span>].<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>)))};<span class="pl-smi">k</span>.<span class="pl-en">throttle</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c,f,d,g,j,l,e<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">debounce</span>(<span class="pl-k">function</span>(){j<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},b);<span class="pl-k">return</span> <span class="pl-k">function</span>(){c<span class="pl-k">=</span><span class="pl-c1">this</span>;f<span class="pl-k">=</span><span class="pl-c1">arguments</span>;<span class="pl-k">var</span> k;</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">||</span>(d<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){d<span class="pl-k">=</span><span class="pl-c1">null</span>;j<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(c,f);<span class="pl-en">e</span>()},b));g<span class="pl-k">?</span>j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span>l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(c,f);<span class="pl-en">e</span>();g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> l}};<span class="pl-smi">k</span>.<span class="pl-en">debounce</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>,g<span class="pl-k">=</span><span class="pl-c1">arguments</span>;c<span class="pl-k">&amp;&amp;!</span>f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(d,g);<span class="pl-c1">clearTimeout</span>(f);f<span class="pl-k">=</span><span class="pl-c1">setTimeout</span>(<span class="pl-k">function</span>(){f<span class="pl-k">=</span><span class="pl-c1">null</span>;c<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(d,g)},b)}};<span class="pl-smi">k</span>.<span class="pl-en">once</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c;<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">if</span>(b)<span class="pl-k">return</span> c;b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)}};<span class="pl-smi">k</span>.<span class="pl-en">wrap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">var</span> f<span class="pl-k">=</span>[b].<span class="pl-c1">concat</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">0</span>));<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,f)}};<span class="pl-smi">k</span>.<span class="pl-en">compose</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">arguments</span>;</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">arguments</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;c<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;c<span class="pl-k">--</span>)b<span class="pl-k">=</span>[a[c].<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,b)];<span class="pl-k">return</span> b[<span class="pl-c1">0</span>]}};<span class="pl-smi">k</span>.<span class="pl-en">after</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">&lt;=</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-en">b</span>()<span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">--</span>a<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)}};<span class="pl-smi">k</span>.<span class="pl-smi">keys</span><span class="pl-k">=</span>v<span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">!==</span><span class="pl-c1">Object</span>(a))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Invalid object<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-smi">k</span>.<span class="pl-c1">has</span>(a,c)<span class="pl-k">&amp;&amp;</span>(b[<span class="pl-smi">b</span>.<span class="pl-c1">length</span>]<span class="pl-k">=</span>c);<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">values</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">map</span>(a,<span class="pl-smi">k</span>.<span class="pl-smi">identity</span>)};<span class="pl-smi">k</span>.<span class="pl-smi">functions</span><span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">methods</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> a)<span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(a[c])<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">sort</span>()};<span class="pl-smi">k</span>.<span class="pl-en">extend</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)b[c]<span class="pl-k">=</span>a[c]});<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">pick</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-en">t</span>(<span class="pl-smi">k</span>.<span class="pl-en">flatten</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>)),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a <span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span>(c[a]<span class="pl-k">=</span>b[a])});<span class="pl-k">return</span> c};<span class="pl-smi">k</span>.<span class="pl-en">defaults</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">t</span>(<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c <span class="pl-k">in</span> a)b[c]<span class="pl-k">==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(b[c]<span class="pl-k">=</span>a[c])});<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">clone</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-en">isObject</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">slice</span>()<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-en">extend</span>({},a)};<span class="pl-smi">k</span>.<span class="pl-en">tap</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">b</span>(a);<span class="pl-k">return</span> a};<span class="pl-smi">k</span>.<span class="pl-en">isEqual</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(a,b,[])};<span class="pl-smi">k</span>.<span class="pl-en">isEmpty</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">||</span><span class="pl-smi">k</span>.<span class="pl-en">isString</span>(a))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b <span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-smi">k</span>.<span class="pl-c1">has</span>(a,b))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">k</span>.<span class="pl-en">isElement</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>(a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">nodeType</span><span class="pl-k">==</span><span class="pl-c1">1</span>)};<span class="pl-smi">k</span>.<span class="pl-smi">isArray</span><span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Array]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-c1">Object</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">isArguments</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Arguments]<span class="pl-pds">&quot;</span></span>};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-en">isArguments</span>(<span class="pl-c1">arguments</span>))<span class="pl-smi">k</span>.<span class="pl-en">isArguments</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!</span>(<span class="pl-k">!</span>a<span class="pl-k">||!</span><span class="pl-smi">k</span>.<span class="pl-c1">has</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>callee<span class="pl-pds">&quot;</span></span>))};<span class="pl-smi">k</span>.<span class="pl-en">isFunction</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Function]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isString</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object String]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isNumber</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>[object Number]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isFinite</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">isNumber</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">isFinite</span>(a)};<span class="pl-smi">k</span>.<span class="pl-en">isNaN</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">!==</span>a};<span class="pl-smi">k</span>.<span class="pl-en">isBoolean</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Boolean]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isDate</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object Date]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isRegExp</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[object RegExp]<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">k</span>.<span class="pl-en">isNull</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-c1">null</span>};<span class="pl-smi">k</span>.<span class="pl-en">isUndefined</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span><span class="pl-k">void</span> <span class="pl-c1">0</span>};<span class="pl-smi">k</span>.<span class="pl-en">has</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">j</span>.<span class="pl-c1">call</span>(a,b)};<span class="pl-smi">k</span>.<span class="pl-en">noConflict</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">d</span>.<span class="pl-smi">_</span><span class="pl-k">=</span>h;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">k</span>.<span class="pl-en">identity</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a};</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-en">times</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>a;f<span class="pl-k">++</span>)<span class="pl-smi">b</span>.<span class="pl-c1">call</span>(c,f)};<span class="pl-smi">k</span>.<span class="pl-en">escape</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&amp;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;amp;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;lt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&gt;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;gt;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&quot;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;quot;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&#39;<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#x27;<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\/</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;#x2F;<span class="pl-pds">&quot;</span></span>)};<span class="pl-smi">k</span>.<span class="pl-en">result</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b];<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-en">isFunction</span>(c)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">call</span>(a)<span class="pl-k">:</span>c};<span class="pl-smi">k</span>.<span class="pl-en">mixin</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">t</span>(<span class="pl-smi">k</span>.<span class="pl-en">functions</span>(a),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">F</span>(b,k[b]<span class="pl-k">=</span>a[b])})};<span class="pl-k">var</span> <span class="pl-c1">G</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">k</span>.<span class="pl-en">uniqueId</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">G</span><span class="pl-k">++</span>;<span class="pl-k">return</span> a<span class="pl-k">?</span>a<span class="pl-k">+</span>b<span class="pl-k">:</span>b};<span class="pl-smi">k</span>.<span class="pl-smi">templateSettings</span><span class="pl-k">=</span>{evaluate<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;%(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">+?</span>)%&gt;<span class="pl-pds">/</span>g</span>,interpolate<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;%=(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">+?</span>)%&gt;<span class="pl-pds">/</span>g</span>,</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">escape<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;%-(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">+?</span>)%&gt;<span class="pl-pds">/</span>g</span>};<span class="pl-k">var</span> z<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">.</span><span class="pl-k">^</span><span class="pl-pds">/</span></span>,y<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>,n<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,t<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,u2028<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2028</span><span class="pl-pds">&quot;</span></span>,u2029<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2029</span><span class="pl-pds">&quot;</span></span>},<span class="pl-c1">A</span>;<span class="pl-k">for</span>(<span class="pl-c1">A</span> <span class="pl-k">in</span> y)y[y[<span class="pl-c1">A</span>]]<span class="pl-k">=</span><span class="pl-c1">A</span>;<span class="pl-k">var</span> <span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span><span class="pl-k">|</span>&#39;<span class="pl-k">|</span><span class="pl-c1">\r</span><span class="pl-k">|</span><span class="pl-c1">\n</span><span class="pl-k">|</span><span class="pl-c1">\t</span><span class="pl-k">|</span><span class="pl-c1">\u2028</span><span class="pl-k">|</span><span class="pl-c1">\u2029</span><span class="pl-pds">/</span>g</span>,<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>(<span class="pl-cce">\\</span><span class="pl-k">|</span>&#39;<span class="pl-k">|</span>r<span class="pl-k">|</span>n<span class="pl-k">|</span>t<span class="pl-k">|</span>u2028<span class="pl-k">|</span>u2029)<span class="pl-pds">/</span>g</span>,<span class="pl-en">B</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">I</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> y[b]})};<span class="pl-smi">k</span>.<span class="pl-en">template</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-smi">k</span>.<span class="pl-en">defaults</span>(c<span class="pl-k">||</span>{},<span class="pl-smi">k</span>.<span class="pl-smi">templateSettings</span>);a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>__p+=&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">H</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>y[a]}).<span class="pl-c1">replace</span>(<span class="pl-smi">c</span>.<span class="pl-smi">escape</span><span class="pl-k">||</span>z,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;+<span class="pl-cce">\n</span>_.escape(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">B</span>(b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)+<span class="pl-cce">\n</span>&#39;<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">replace</span>(<span class="pl-smi">c</span>.<span class="pl-smi">interpolate</span><span class="pl-k">||</span>z,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;+<span class="pl-cce">\n</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line"><span class="pl-en">B</span>(b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)+<span class="pl-cce">\n</span>&#39;<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">replace</span>(<span class="pl-smi">c</span>.<span class="pl-smi">evaluate</span><span class="pl-k">||</span>z,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">B</span>(b)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span>;__p+=&#39;<span class="pl-pds">&quot;</span></span>})<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-smi">variable</span><span class="pl-k">||</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>with(obj||{}){<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>var __p=&#39;&#39;;var print=function(){__p+=Array.prototype.join.call(arguments, &#39;&#39;)};<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>return __p;<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-smi">c</span>.<span class="pl-smi">variable</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>obj<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">if</span>(b)<span class="pl-k">return</span> <span class="pl-en">f</span>(b,k);<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,a,k)};<span class="pl-smi">b</span>.<span class="pl-c1">source</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">c</span>.<span class="pl-smi">variable</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>obj<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>){<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> b};<span class="pl-smi">k</span>.<span class="pl-en">chain</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">k</span>(a).<span class="pl-en">chain</span>()};<span class="pl-k">var</span> <span class="pl-en">x</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_wrapped</span><span class="pl-k">=</span>a};<span class="pl-smi">k</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>;</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">C</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">?</span><span class="pl-en">k</span>(a).<span class="pl-en">chain</span>()<span class="pl-k">:</span>a},<span class="pl-en">F</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>[b]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>);<span class="pl-smi">g</span>.<span class="pl-c1">call</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">_wrapped</span>);<span class="pl-k">return</span> <span class="pl-en">C</span>(<span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(k,b),<span class="pl-c1">this</span>.<span class="pl-smi">_chain</span>)}};<span class="pl-smi">k</span>.<span class="pl-en">mixin</span>(k);<span class="pl-en">t</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>pop<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>push<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>reverse<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sort<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>unshift<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[a];<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>[a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_wrapped</span>;<span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(b,<span class="pl-c1">arguments</span>);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;(a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>splice<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>f<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> b[<span class="pl-c1">0</span>];<span class="pl-k">return</span> <span class="pl-en">C</span>(b,<span class="pl-c1">this</span>.<span class="pl-smi">_chain</span>)}});<span class="pl-en">t</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>concat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>join<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>slice<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[a];<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>[a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">C</span>(<span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_wrapped</span>,</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">arguments</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_chain</span>)}});<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">chain</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_chain</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">x</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">value</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_wrapped</span>};<span class="pl-k">return</span> k}.<span class="pl-c1">call</span>({}),<span class="pl-en">emmet</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> l;l<span class="pl-k">=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>constructor<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">constructor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">a</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)};<span class="pl-smi">_</span>.<span class="pl-en">extend</span>(l,a);<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>;<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">c</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">_</span>.<span class="pl-en">extend</span>(<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span>,b);d<span class="pl-k">&amp;&amp;</span><span class="pl-smi">_</span>.<span class="pl-en">extend</span>(l,d);<span class="pl-smi">l</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span>l;<span class="pl-smi">l</span>.<span class="pl-smi">__super__</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>;<span class="pl-k">return</span> l}function h(c){!(c in b)&amp;&amp;a&amp;&amp;a(c);return b[c]}if(typeof _==&quot;undefined&quot;)try{_=</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>underscore<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">catch</span>(i){}<span class="pl-k">if</span>(<span class="pl-k">typeof</span> _<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Cannot access to Underscore.js lib<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>{_<span class="pl-k">:</span>_},<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(){},a<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span>{<span class="pl-en">define</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){a <span class="pl-k">in</span> b<span class="pl-k">||</span>(b[a]<span class="pl-k">=</span><span class="pl-smi">_</span>.<span class="pl-en">isFunction</span>(c)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">exec</span>(c)<span class="pl-k">:</span>c)},require<span class="pl-k">:</span>h,<span class="pl-en">exec</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">call</span>(b<span class="pl-k">||</span>e,<span class="pl-smi">_</span>.<span class="pl-en">bind</span>(h,<span class="pl-c1">this</span>),_,<span class="pl-c1">this</span>)},<span class="pl-en">extend</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-c1">this</span>,a,b);<span class="pl-smi">c</span>.<span class="pl-smi">extend</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">extend</span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toString<span class="pl-pds">&quot;</span></span>))<span class="pl-smi">c</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">toString</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">toString</span>;<span class="pl-k">return</span> c},<span class="pl-en">expandAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line"><span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(c,b);<span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>).<span class="pl-en">resetTabstopIndex</span>();a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">extractFromAbbreviation</span>(a);d<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">parse</span>(a[<span class="pl-c1">0</span>],{syntax<span class="pl-k">:</span>b,contextNode<span class="pl-k">:</span>d});b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-en">composeList</span>(b,c,a[<span class="pl-c1">1</span>]);<span class="pl-smi">e</span>.<span class="pl-c1">apply</span>(d,b,c);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">toString</span>()},<span class="pl-en">defaultSyntax</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>},<span class="pl-en">defaultProfile</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>plain<span class="pl-pds">&quot;</span></span>},<span class="pl-en">log</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-smi">e</span>.<span class="pl-smi">console</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">console</span>.<span class="pl-smi">log</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">console</span>.<span class="pl-smi">log</span>.<span class="pl-c1">apply</span>(<span class="pl-smi">e</span>.<span class="pl-smi">console</span>,<span class="pl-c1">arguments</span>)},<span class="pl-en">setModuleLoader</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){a<span class="pl-k">=</span>b}}}(<span class="pl-c1">this</span>);</td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-c1">exports</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span>)<span class="pl-c1">exports</span><span class="pl-k">=</span><span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>emmet;<span class="pl-c1">exports</span>.<span class="pl-smi">emmet</span><span class="pl-k">=</span>emmet}<span class="pl-k">typeof</span> define<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">define</span>(emmet);</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-c1">this</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">children</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">abbreviation</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">counter</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_text</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">hasImplicitRepeat</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">padding</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}function i(a){return a.substring(1,a.length-1)}function b(a){for(var a=e(&quot;utils&quot;).trim(a),c=new h,f=c.addChild(),g,j=e(&quot;stringStream&quot;).create(a),a=1E3,l;!j.eol()&amp;&amp;--a&gt;0;)switch(g=j.peek(),g){case &quot;(&quot;:j.start=j.pos;</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-en">skipToPair</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>))g<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-en">i</span>(<span class="pl-smi">j</span>.<span class="pl-c1">current</span>())),(l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-pds">/</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">_setRepeat</span>(l[<span class="pl-c1">1</span>]),<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">g</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">f</span>.<span class="pl-en">addChild</span>(a)});<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>Invalid abbreviation: mo matching &quot;)&quot; found for character at <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>;<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">addChild</span>();<span class="pl-smi">j</span>.<span class="pl-c1">next</span>();<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">parent</span>.<span class="pl-en">addChild</span>();<span class="pl-smi">j</span>.<span class="pl-c1">next</span>();<span class="pl-k">break</span>;case <span class="pl-s"><span class="pl-pds">&quot;</span>^<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">parent</span><span class="pl-k">||</span>f;f<span class="pl-k">=</span>(<span class="pl-smi">g</span>.<span class="pl-c1">parent</span><span class="pl-k">||</span>g).<span class="pl-en">addChild</span>();<span class="pl-smi">j</span>.<span class="pl-c1">next</span>();<span class="pl-k">break</span>;default<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">j</span>.<span class="pl-en">eatWhile</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-en">skipToPair</span>(a,p[a]))<span class="pl-k">return</span> <span class="pl-smi">j</span>.<span class="pl-en">backUp</span>(<span class="pl-c1">1</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>Invalid abbreviation: mo matching &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">p[a]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; found for character at <span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>;}<span class="pl-k">return</span> a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">j</span>.<span class="pl-c1">next</span>(),a<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">eol</span>()<span class="pl-k">||</span><span class="pl-k">~</span><span class="pl-s"><span class="pl-pds">&quot;</span>+&gt;^*<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">j</span>.<span class="pl-en">peek</span>()),<span class="pl-smi">j</span>.<span class="pl-en">backUp</span>(<span class="pl-c1">1</span>),a)<span class="pl-k">:</span>a<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">n</span>(a)}),<span class="pl-smi">f</span>.<span class="pl-en">setAbbreviation</span>(<span class="pl-smi">j</span>.<span class="pl-c1">current</span>()),<span class="pl-smi">j</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>}<span class="pl-k">if</span>(a<span class="pl-k">&lt;</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Endless loop detected<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> c}function c(a){var a=e(&quot;utils&quot;).trim(a),b=[],a=e(&quot;stringStream&quot;).create(a);for(a.eatSpace();!a.eol();)if(a.start=a.pos,a.eatWhile(o)){var c=a.current(),f=&quot;&quot;;if(a.peek()==&quot;=&quot;){a.next();a.start=a.pos;var d=a.peek();if(d==&#39;&quot;&#39;||d==&quot;&#39;&quot;){a.next();a:{for(var f=a,g=void 0;g=f.next();)if(g===</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">d){f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span> a}f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">if</span>(f)f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">current</span>(),f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid attribute value<span class="pl-pds">&quot;</span></span>;}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-cce">\]</span>]</span><span class="pl-pds">/</span></span>))f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">current</span>();<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid attribute value<span class="pl-pds">&quot;</span></span>;}<span class="pl-smi">b</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>c,value<span class="pl-k">:</span>f});<span class="pl-smi">a</span>.<span class="pl-en">eatSpace</span>()}<span class="pl-k">else</span> <span class="pl-k">break</span>;<span class="pl-k">return</span> b}function a(a){for(var b=[],f={&quot;#&quot;:&quot;id&quot;,&quot;.&quot;:&quot;class&quot;},d=null,j=e(&quot;stringStream&quot;).create(a);!j.eol();)switch(j.peek()){case &quot;#&quot;:case &quot;.&quot;:if(d===null)d=j.pos;var l=f[j.peek()];j.next();j.start=j.pos;j.eatWhile(o);b.push({name:l,value:j.current()});break;case &quot;[&quot;:if(d===</td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>)d<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>;<span class="pl-smi">j</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">pos</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">j</span>.<span class="pl-en">skipToPair</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>))<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid attribute set definition<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-en">c</span>(<span class="pl-en">i</span>(<span class="pl-smi">j</span>.<span class="pl-c1">current</span>())));<span class="pl-k">break</span>;default<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-c1">next</span>()}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>{element<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,d),attributes<span class="pl-k">:</span><span class="pl-en">g</span>(b)}}function g(a){var a=d.map(a,function(a){return d.clone(a)}),b={};return d.filter(a,function(a){if(!(a.name in b))return b[a.name]=a;var c=b[a.name];a.name.toLowerCase()==&quot;class&quot;?c.value+=(c.value.length?&quot; &quot;:&quot;&quot;)+a.value:c.value=a.value;return!1})}function f(a){if(!~a.indexOf(&quot;{&quot;))return null;</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(a);<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-en">eol</span>();)<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-en">peek</span>()){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>:<span class="pl-smi">b</span>.<span class="pl-en">skipToPair</span>(<span class="pl-smi">b</span>.<span class="pl-en">peek</span>(),p[<span class="pl-smi">b</span>.<span class="pl-en">peek</span>()]);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">b</span>.<span class="pl-en">skipToPair</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>),{element<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">start</span>),text<span class="pl-k">:</span><span class="pl-en">i</span>(<span class="pl-smi">b</span>.<span class="pl-c1">current</span>())};<span class="pl-k">default</span>:<span class="pl-smi">b</span>.<span class="pl-c1">next</span>()}}function j(a){for(var b=a.children.length-1,c,f,g;b&gt;=0;b--)if(f=a.children[b],f.isRepeating()){g=c=f.repeatCount;f.repeatCount=1;f.updateProperty(&quot;counter&quot;,1);for(f.updateProperty(&quot;maxCount&quot;,g);--c&gt;0;)f.parent.addChild(f.clone(),b+1).updateProperty(&quot;counter&quot;,</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">+</span><span class="pl-c1">1</span>).<span class="pl-en">updateProperty</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>maxCount<span class="pl-pds">&quot;</span></span>,g)}<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,j);<span class="pl-k">return</span> a}function l(a){for(var b=a.children.length-1;b&gt;=0;b--){var c=a.children[b];c.isGroup()?c.replace(l(c).children):c.isEmpty()&amp;&amp;c.remove()}d.each(a.children,l);return a}function n(a){var b=a.charCodeAt(0);return b&gt;64&amp;&amp;b&lt;91||b&gt;96&amp;&amp;b&lt;123||b&gt;47&amp;&amp;b&lt;58||&quot;#.*:$-_!@|%&quot;.indexOf(a)!=-1}var m=/^[\w\-\$\:@\!%]+\+?$/i,o=/[\w\-:\$@]/,p={&quot;[&quot;:&quot;]&quot;,&quot;(&quot;:&quot;)&quot;,&quot;{&quot;:&quot;}&quot;},r=Array.prototype.splice,q=[],u=[],s=[];h.prototype={addChild:function(a,b){a=a||new h;a.parent=</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>;<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(b)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">push</span>(a)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">splice</span>(b,<span class="pl-c1">0</span>,a);<span class="pl-k">return</span> a},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">h</span>;<span class="pl-smi">d</span>.<span class="pl-en">each</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>counter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_name<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_text<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>repeatCount<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>hasImplicitRepeat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>content<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>padding<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){a[b]<span class="pl-k">=</span><span class="pl-c1">this</span>[b]},<span class="pl-c1">this</span>);<span class="pl-smi">a</span>.<span class="pl-smi">_attributes</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">clone</span>(a)});<span class="pl-smi">a</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clone</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_data</span>);<span class="pl-smi">a</span>.<span class="pl-smi">children</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">clone</span>();<span class="pl-smi">b</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> b});<span class="pl-k">return</span> a},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>)<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">children</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">children</span>,</td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">replace</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">parent</span>,b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,<span class="pl-c1">this</span>),c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">flatten</span>(<span class="pl-c1">arguments</span>);<span class="pl-smi">r</span>.<span class="pl-c1">apply</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,[b,<span class="pl-c1">1</span>].<span class="pl-c1">concat</span>(c));<span class="pl-smi">d</span>.<span class="pl-en">each</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>a})},<span class="pl-en">updateProperty</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>[a]<span class="pl-k">=</span>b;<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-en">updateProperty</span>(a,b)});<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">find</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">findAll</span>(a)[<span class="pl-c1">0</span>]},<span class="pl-en">findAll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(a))<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>(),<span class="pl-en">a</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">name</span>().<span class="pl-c1">toLowerCase</span>()<span class="pl-k">==</span>b};<span class="pl-k">var</span> c<span class="pl-k">=</span>[];<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-en">a</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b);c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-en">findAll</span>(a))});<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">compact</span>(c)},<span class="pl-en">data</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[a]<span class="pl-k">=</span>b,a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>resource<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">is</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">data</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_text</span>)))<span class="pl-c1">this</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">insertChildContent</span>(<span class="pl-smi">b</span>.<span class="pl-c1">data</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_text</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>[a]},<span class="pl-en">name</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">matchedResource</span>();<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">is</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>element<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">_name</span>},<span class="pl-en">attributeList</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span>[],b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">matchedResource</span>();<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">is</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>element<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(<span class="pl-smi">b</span>.<span class="pl-c1">attributes</span>)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-smi">b</span>.<span class="pl-c1">attributes</span>));<span class="pl-k">return</span> <span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">concat</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span>))},<span class="pl-en">attribute</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">2</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">d</span>.<span class="pl-en">pluck</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>());<span class="pl-k">~</span>c<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span>[c].<span class="pl-c1">value</span><span class="pl-k">=</span>b<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>a,value<span class="pl-k">:</span>b})}<span class="pl-k">return</span>(<span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-en">attributeList</span>(),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">name</span><span class="pl-k">==</span>a})<span class="pl-k">||</span>{}).<span class="pl-c1">value</span>},<span class="pl-en">matchedResource</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resource<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">index</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">parent</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">children</span>,<span class="pl-c1">this</span>)<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">_setRepeat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">parseInt</span>(a,<span class="pl-c1">10</span>)<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">hasImplicitRepeat</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">setAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-c1">this</span>.<span class="pl-smi">abbreviation</span><span class="pl-k">=</span>b<span class="pl-k">=</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\*</span>(<span class="pl-c1">\d</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">c</span>.<span class="pl-en">_setRepeat</span>(b);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">f</span>(b);<span class="pl-k">if</span>(d)b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>,<span class="pl-c1">this</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_text</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">text</span>;<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-en">a</span>(b))b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">element</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_attributes</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">attributes</span>;<span class="pl-k">if</span>((<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span>b)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">m</span>.<span class="pl-c1">test</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_name</span>))<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid abbreviation<span class="pl-pds">&quot;</span></span>;},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">start</span>,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">end</span>,f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">content</span>,g<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">d</span>.<span class="pl-en">each</span>(s,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-en">a</span>(b,g,<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>);f<span class="pl-k">=</span><span class="pl-en">a</span>(f,g,<span class="pl-s"><span class="pl-pds">&quot;</span>content<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span><span class="pl-en">a</span>(c,g,</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>)});<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()}).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">insertChildContent</span>(f,j,{keepVariable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">return</span> b<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">padString</span>(f,<span class="pl-c1">this</span>.<span class="pl-smi">padding</span>)<span class="pl-k">+</span>c},<span class="pl-en">hasEmptyChildren</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">isEmpty</span>()})},<span class="pl-en">hasImplicitName</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">isTextNode</span>()},<span class="pl-en">isGroup</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">abbreviation</span>},<span class="pl-en">isEmpty</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">abbreviation</span><span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>},<span class="pl-en">isRepeating</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-smi">hasImplicitRepeat</span>},<span class="pl-en">isTextNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-c1">name</span>()<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">attributeList</span>().<span class="pl-c1">length</span>},<span class="pl-en">isElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-en">isEmpty</span>()<span class="pl-k">&amp;&amp;!</span><span class="pl-c1">this</span>.<span class="pl-en">isTextNode</span>()},<span class="pl-en">deepestChild</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>;<span class="pl-smi">a</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>;)a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>);<span class="pl-k">return</span> a}};<span class="pl-smi">s</span>.<span class="pl-c1">push</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">replaceCounter</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">counter</span>,<span class="pl-smi">b</span>.<span class="pl-smi">maxCount</span>)});<span class="pl-k">return</span>{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span>{},f<span class="pl-k">=</span><span class="pl-en">b</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">contextNode</span>){<span class="pl-smi">f</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">contextNode</span>.<span class="pl-c1">name</span>;<span class="pl-k">var</span> g<span class="pl-k">=</span>{};<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">f</span>.<span class="pl-smi">_attributes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){g[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">a});<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">c</span>.<span class="pl-smi">contextNode</span>.<span class="pl-c1">attributes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">name</span> <span class="pl-k">in</span> g<span class="pl-k">?</span>g[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>].<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span><span class="pl-k">:</span>(a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">clone</span>(a),<span class="pl-smi">f</span>.<span class="pl-smi">_attributes</span>.<span class="pl-c1">push</span>(a),g[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>]<span class="pl-k">=</span>a)})}<span class="pl-smi">d</span>.<span class="pl-en">each</span>(q,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(f,c)});f<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-en">j</span>(f));<span class="pl-smi">d</span>.<span class="pl-en">each</span>(u,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(f,c)});<span class="pl-k">return</span> f},AbbreviationNode<span class="pl-k">:</span>h,<span class="pl-en">addPreprocessor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">include</span>(q,a)<span class="pl-k">||</span><span class="pl-smi">q</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">removeFilter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){preprocessor<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(q,a)},<span class="pl-en">addPostprocessor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">include</span>(u,a)<span class="pl-k">||</span><span class="pl-smi">u</span>.<span class="pl-c1">push</span>(a)},<span class="pl-en">removePostprocessor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(u,a)},<span class="pl-en">addOutputProcessor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">include</span>(s,a)<span class="pl-k">||</span><span class="pl-smi">s</span>.<span class="pl-c1">push</span>(a)},</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line"><span class="pl-en">removeOutputProcessor</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){s<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(s,a)},<span class="pl-en">isAllowedChar</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">String</span>(a);<span class="pl-k">return</span> <span class="pl-en">n</span>(a)<span class="pl-k">||</span><span class="pl-k">~</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;+^[](){}<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(a)}}});</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">i</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">d</span>.<span class="pl-en">clone</span>(<span class="pl-smi">i</span>.<span class="pl-smi">children</span>),<span class="pl-k">function</span>(<span class="pl-smi">f</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getMatchedResource</span>(f,b);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(j))<span class="pl-smi">f</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resource<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">create</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>,j));<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">is</span>(j,<span class="pl-s"><span class="pl-pds">&quot;</span>reference<span class="pl-pds">&quot;</span></span>)){j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">j</span>.<span class="pl-c1">data</span>,{syntax<span class="pl-k">:</span>b});<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">findAll</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">hasImplicitRepeat</span>});<span class="pl-smi">d</span>.<span class="pl-en">each</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">repeatCount</span>;<span class="pl-smi">a</span>.<span class="pl-smi">hasImplicitRepeat</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>})}<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">deepestChild</span>();i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">f</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">i</span>.<span class="pl-en">addChild</span>(a)});</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">j</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">f</span>.<span class="pl-en">attributeList</span>(),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-en">attribute</span>(<span class="pl-smi">b</span>.<span class="pl-c1">name</span>,<span class="pl-smi">b</span>.<span class="pl-c1">value</span>)})});<span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-smi">j</span>.<span class="pl-smi">children</span>)}<span class="pl-k">else</span> <span class="pl-smi">f</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resource<span class="pl-pds">&quot;</span></span>,j);<span class="pl-en">h</span>(f,b)})}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addPreprocessor</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">syntax</span><span class="pl-k">||</span><span class="pl-smi">emmet</span>.<span class="pl-en">defaultSyntax</span>();<span class="pl-en">h</span>(d,c)})});</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>[],a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(a);<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-en">eol</span>();){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">peek</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-c1">next</span>();<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">pos</span>,<span class="pl-smi">a</span>.<span class="pl-c1">match</span>(g,<span class="pl-k">!</span><span class="pl-c1">0</span>)){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-en">create</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span>,g));<span class="pl-k">continue</span>}<span class="pl-smi">a</span>.<span class="pl-c1">next</span>()}<span class="pl-k">return</span> c}function i(a,b){var c=e(&quot;utils&quot;),g=h(a);g.reverse();d.each(g,function(d){a=c.replaceSubstring(a,b,d)});return a}function b(a){return h(a.content).length?!0:!!d.find(a.attributeList(),function(a){return!!h(a.value).length})}function c(a,c,g){var h=a.findAll(function(a){return b(a)});</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">unshift</span>(a);<span class="pl-smi">h</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">each</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>,c);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_attributes</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-smi">a</span>.<span class="pl-c1">value</span>,c)})})<span class="pl-k">:</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">deepestChild</span>()<span class="pl-k">||</span>a,<span class="pl-smi">a</span>.<span class="pl-c1">content</span><span class="pl-k">=</span>g<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">insertChildContent</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>,c))}<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>$#<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">addPreprocessor</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pastedContent</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">c</span>.<span class="pl-en">splitByLines</span>(<span class="pl-smi">b</span>.<span class="pl-smi">pastedContent</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">c</span>.<span class="pl-smi">trim</span>);<span class="pl-smi">a</span>.<span class="pl-en">findAll</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">hasImplicitRepeat</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,g),<span class="pl-smi">a</span>.<span class="pl-smi">repeatCount</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>})}});<span class="pl-smi">a</span>.<span class="pl-en">addPostprocessor</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-en">findAll</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(b)<span class="pl-k">?</span>f<span class="pl-k">=</span>b[<span class="pl-smi">a</span>.<span class="pl-smi">counter</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(b)<span class="pl-k">?</span>f<span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-smi">a</span>.<span class="pl-smi">counter</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">a</span>.<span class="pl-c1">content</span>)<span class="pl-k">:</span>b<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=</span>b);f<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(a,f,<span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pasteOverwrites<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">a</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">null</span>);<span class="pl-k">return</span><span class="pl-k">!!</span>b}).<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">pastedContent</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(a,<span class="pl-smi">b</span>.<span class="pl-smi">pastedContent</span>)})});<span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">i</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tagName<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">i</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-en">hasImplicitName</span>()<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>forceNameResolving<span class="pl-pds">&quot;</span></span>))<span class="pl-smi">c</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">resolve</span>(<span class="pl-smi">c</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">name</span>());<span class="pl-en">h</span>(c)});<span class="pl-k">return</span> i}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addPostprocessor</span>(h)});</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssParser<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-k">typeof</span> a<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span>}function i(){return{&quot;char&quot;:f.chnum,line:f.linenum}}function b(a,b,c){var d=f,c=c||{};j.push({charstart:h(c[&quot;char&quot;])?c[&quot;char&quot;]:d.chnum,charend:h(c.charend)?c.charend:d.chnum,linestart:h(c.line)?c.line:d.linenum,lineend:h(c.lineend)?c.lineend:d.linenum,value:a,type:b||a})}function c(a,b){var c=f,d=b||{},g=h(d[&quot;char&quot;])?d[&quot;char&quot;]:c.chnum,d=h(d.line)?d.line:c.linenum;return{name:&quot;ParseError&quot;,message:a+&quot; at line &quot;+(d+1)+</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span> char <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(g<span class="pl-k">+</span><span class="pl-c1">1</span>),walker<span class="pl-k">:</span>c,tokens<span class="pl-k">:</span>j}}function a(a){var c=f,d=c.ch,g=i(),j=a?a+d:d,d=c.nextChar();for(a&amp;&amp;(g[&quot;char&quot;]-=a.length);n(d)||m(d);)j+=d,d=c.nextChar();b(j,&quot;identifier&quot;,g)}function g(){var d=f.ch;if(d===&quot; &quot;||d===&quot;\t&quot;){for(var g=f.ch,j=&quot;&quot;,e=i();g===&quot; &quot;||g===&quot;\t&quot;;)j+=g,g=f.nextChar();b(j,&quot;white&quot;,e)}else{if(d===&quot;/&quot;){var g=f,d=e=g.ch,h,s=i();h=g.nextChar();if(h!==&quot;*&quot;)s.charend=s[&quot;char&quot;],s.lineend=s.line,j=b(d,d,s);else{for(;!(e===&quot;*&quot;&amp;&amp;h===&quot;/&quot;);)d+=h,e=h,h=g.nextChar();d+=h;g.nextChar();b(d,&quot;comment&quot;,</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">s)}<span class="pl-k">return</span> j}<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>){g<span class="pl-k">=</span>f;d<span class="pl-k">=</span>e<span class="pl-k">=</span>j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">ch</span>;s<span class="pl-k">=</span><span class="pl-en">i</span>();<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>();j<span class="pl-k">!==</span>e;){<span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>(),h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>)d<span class="pl-k">+=</span>j<span class="pl-k">+</span>h;<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unterminated string<span class="pl-pds">&quot;</span></span>,s);<span class="pl-k">else</span> d<span class="pl-k">+=</span>j<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>j<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>()<span class="pl-k">:</span>j;j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>()}d<span class="pl-k">+=</span>j;<span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>();<span class="pl-en">b</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,s)}<span class="pl-k">else</span> <span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>){g<span class="pl-k">=</span>f;j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">ch</span>;e<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">=</span>j;h<span class="pl-k">=</span><span class="pl-en">i</span>();<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>();j<span class="pl-k">!==</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span>e;){<span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>)e<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)e<span class="pl-k">--</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">throw</span> <span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unterminated brace<span class="pl-pds">&quot;</span></span>,h);d<span class="pl-k">+=</span>j;j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>()}d<span class="pl-k">+=</span>j;<span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>();<span class="pl-en">b</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>brace<span class="pl-pds">&quot;</span></span>,h)}<span class="pl-k">else</span>{<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-en">m</span>(d)){j<span class="pl-k">=</span>f;e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">ch</span>;</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">=</span><span class="pl-en">i</span>();h<span class="pl-k">=</span>e;<span class="pl-k">var</span> s<span class="pl-k">=</span>h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,v,e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">nextChar</span>();v<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-en">m</span>(e);<span class="pl-k">if</span>(s<span class="pl-k">&amp;&amp;</span>v)<span class="pl-smi">d</span>.<span class="pl-smi">charend</span><span class="pl-k">=</span>d[<span class="pl-s"><span class="pl-pds">&quot;</span>char<span class="pl-pds">&quot;</span></span>],<span class="pl-smi">d</span>.<span class="pl-smi">lineend</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">line</span>,g<span class="pl-k">=</span><span class="pl-en">b</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,d);<span class="pl-k">else</span> <span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>v)g<span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span>{<span class="pl-k">for</span>(;e<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">m</span>(e)<span class="pl-k">||!</span>s<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);)e<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(s<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),h<span class="pl-k">+=</span>e,e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">nextChar</span>();<span class="pl-en">b</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,d)}<span class="pl-k">return</span> g}<span class="pl-k">if</span>(<span class="pl-en">n</span>(d))<span class="pl-k">return</span> <span class="pl-en">a</span>();<span class="pl-k">if</span>(<span class="pl-en">l</span>(d))<span class="pl-k">return</span> g<span class="pl-k">=</span>f,d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">ch</span>,j<span class="pl-k">=</span><span class="pl-en">i</span>(),h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>(),h<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">l</span>(d,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>(d<span class="pl-k">+=</span>h,<span class="pl-en">b</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>match<span class="pl-pds">&quot;</span></span>,j),<span class="pl-smi">g</span>.<span class="pl-en">nextChar</span>(),e<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>)<span class="pl-k">:</span>(<span class="pl-smi">j</span>.<span class="pl-smi">charend</span><span class="pl-k">=</span>j[<span class="pl-s"><span class="pl-pds">&quot;</span>char<span class="pl-pds">&quot;</span></span>]<span class="pl-k">+</span><span class="pl-c1">1</span>,<span class="pl-smi">j</span>.<span class="pl-smi">lineend</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">line</span>,<span class="pl-en">b</span>(d,d,j)),e;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">f</span>.<span class="pl-en">nextChar</span>();<span class="pl-k">else</span> <span class="pl-k">throw</span> <span class="pl-en">c</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unrecognized character<span class="pl-pds">&quot;</span></span>);}}}<span class="pl-k">var</span> f,j<span class="pl-k">=</span>[],</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">l,n,m;f<span class="pl-k">=</span>{lines<span class="pl-k">:</span><span class="pl-c1">null</span>,total_lines<span class="pl-k">:</span><span class="pl-c1">0</span>,linenum<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,line<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,ch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,chnum<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-en">init</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>f;<span class="pl-smi">b</span>.<span class="pl-smi">lines</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\r\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\r</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-smi">total_lines</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">lines</span>.<span class="pl-c1">length</span>;<span class="pl-smi">b</span>.<span class="pl-smi">chnum</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">linenum</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-c1">ch</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">b</span>.<span class="pl-smi">line</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">b</span>.<span class="pl-en">nextLine</span>();<span class="pl-smi">b</span>.<span class="pl-en">nextChar</span>()},<span class="pl-en">nextLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">linenum</span><span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">line</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">total_lines</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">linenum</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">lines</span>[<span class="pl-c1">this</span>.<span class="pl-smi">linenum</span>];<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span><span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">line</span>},<span class="pl-en">nextChar</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span><span class="pl-k">+=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">nextLine</span>()<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">ch</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">ch</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">ch</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span>)},<span class="pl-en">peek</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">line</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">chnum</span><span class="pl-k">+</span><span class="pl-c1">1</span>)}};<span class="pl-en">n</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>z<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>a<span class="pl-k">&gt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>A<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>Z<span class="pl-pds">&quot;</span></span>};<span class="pl-en">m</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&gt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&lt;=</span><span class="pl-s"><span class="pl-pds">&quot;</span>9<span class="pl-pds">&quot;</span></span>};<span class="pl-en">l</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{}[]()+*=.,;:&gt;~|<span class="pl-cce">\\</span>%$#@^!<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>*^|$~<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>{},d<span class="pl-k">=</span>{},f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;f<span class="pl-k">+=</span><span class="pl-c1">1</span>)c[a[f]]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;f<span class="pl-k">+=</span><span class="pl-c1">1</span>)d[b[f]]<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">?</span><span class="pl-k">!!</span>d[a]<span class="pl-k">:</span><span class="pl-k">!!</span>c[a]}}();<span class="pl-k">return</span>{<span class="pl-en">lex</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">f</span>.<span class="pl-en">init</span>(a);</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(j<span class="pl-k">=</span>[];<span class="pl-smi">f</span>.<span class="pl-c1">ch</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>;)<span class="pl-en">g</span>();<span class="pl-k">return</span> j},<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-en">lex</span>(a),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">c</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b);<span class="pl-k">return</span>{type<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span>,start<span class="pl-k">:</span>b,end<span class="pl-k">:</span>b<span class="pl-k">+=</span><span class="pl-smi">c</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>}})},<span class="pl-en">toSource</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,d,f<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">+=</span><span class="pl-c1">1</span>)d<span class="pl-k">=</span>a[b],f<span class="pl-k">+=</span><span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>;<span class="pl-k">return</span> f}}});</td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlParser<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">f</span>(<span class="pl-smi">b</span>){<span class="pl-smi">d</span>.<span class="pl-smi">tokenize</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-en">b</span>(a,d)}<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">next</span>();<span class="pl-k">if</span>(g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>CDATA[<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>atom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>]]<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>comment<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">match</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>DOCTYPE<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\.</span>_<span class="pl-cce">\-</span>]</span><span class="pl-pds">/</span></span>),<span class="pl-en">f</span>(<span class="pl-en">c</span>(<span class="pl-c1">1</span>)))<span class="pl-k">:</span><span class="pl-c1">null</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>?<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\.</span>_<span class="pl-cce">\-</span>]</span><span class="pl-pds">/</span></span>),<span class="pl-smi">d</span>.<span class="pl-smi">tokenize</span><span class="pl-k">=</span><span class="pl-en">b</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>meta<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>?&gt;<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>meta<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span>{w<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>closeTag<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>openTag<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">a</span>.<span class="pl-en">eatSpace</span>();<span class="pl-k">for</span>(v<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-c1">\u00a0</span>=&lt;&gt;<span class="pl-cce">\&quot;\&#39;\/</span>?]</span><span class="pl-pds">/</span></span>);)v<span class="pl-k">+=</span>g;<span class="pl-smi">d</span>.<span class="pl-smi">tokenize</span><span class="pl-k">=</span>h;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>}<span class="pl-k">else</span> <span class="pl-k">return</span> g<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">a-fA-F</span><span class="pl-c1">\d</span>]</span><span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\d</span>]</span><span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\.</span><span class="pl-c1">\-:</span>]</span><span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">eat</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>))<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>atom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span>(<span class="pl-smi">a</span>.<span class="pl-en">eatWhile</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-k">^</span>&amp;&lt;]</span><span class="pl-pds">/</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>text<span class="pl-pds">&quot;</span></span>)}function h(a,b){var c=a.next();return c==&quot;&gt;&quot;||c==&quot;/&quot;&amp;&amp;a.eat(&quot;&gt;&quot;)?(b.tokenize=d,w=c==&quot;&gt;&quot;?&quot;endTag&quot;:&quot;selfcloseTag&quot;,&quot;tag&quot;):c==&quot;=&quot;?(w=&quot;equals&quot;,null):/[\&#39;\&quot;]/.test(c)?(b.tokenize=i(c),b.tokenize(a,b)):(a.eatWhile(/[^\s\u00a0=&lt;&gt;\&quot;\&#39;\/?]/),&quot;word&quot;)}function i(a){return function(b,c){for(;!b.eol();)if(b.next()==a){c.tokenize=h;break}return&quot;string&quot;}}</td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">for</span>(;<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-en">eol</span>();){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">match</span>(b)){<span class="pl-smi">f</span>.<span class="pl-smi">tokenize</span><span class="pl-k">=</span>d;<span class="pl-k">break</span>}<span class="pl-smi">c</span>.<span class="pl-c1">next</span>()}<span class="pl-k">return</span> a}}function c(a){return function(b,f){for(var g;(g=b.next())!=null;)if(g==&quot;&lt;&quot;)return f.tokenize=c(a+1),f.tokenize(b,f);else if(g==&quot;&gt;&quot;)if(a==1){f.tokenize=d;break}else return f.tokenize=c(a-1),f.tokenize(b,f);return&quot;meta&quot;}}function a(){for(var a=arguments.length-1;a&gt;=0;a--)k.cc.push(arguments[a])}function g(){a.apply(null,arguments);return!0}function f(){if(k.context)k.context=k.context.prev}function j(a){if(a==</td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>openTag<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-smi">k</span>.<span class="pl-c1">tagName</span><span class="pl-k">=</span>v,<span class="pl-en">g</span>(o,<span class="pl-en">l</span>(<span class="pl-smi">k</span>.<span class="pl-smi">startOfLine</span>));<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>closeTag<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-smi">k</span>.<span class="pl-smi">context</span><span class="pl-k">?</span><span class="pl-smi">k</span>.<span class="pl-smi">context</span>.<span class="pl-c1">tagName</span><span class="pl-k">!=</span>v<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">s</span>.<span class="pl-smi">implicitlyClosed</span>.<span class="pl-en">hasOwnProperty</span>(<span class="pl-smi">k</span>.<span class="pl-smi">context</span>.<span class="pl-c1">tagName</span>.<span class="pl-c1">toLowerCase</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-en">f</span>(),a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-smi">k</span>.<span class="pl-smi">context</span><span class="pl-k">||</span><span class="pl-smi">k</span>.<span class="pl-smi">context</span>.<span class="pl-c1">tagName</span><span class="pl-k">!=</span>v)<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,a<span class="pl-k">&amp;&amp;</span>(t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>),<span class="pl-en">g</span>(<span class="pl-en">n</span>(a));<span class="pl-k">return</span> <span class="pl-en">g</span>()}function l(a){return function(b){if(b==&quot;selfcloseTag&quot;||b==&quot;endTag&quot;&amp;&amp;s.autoSelfClosers.hasOwnProperty(k.tagName.toLowerCase()))return m(k.tagName.toLowerCase()),g();if(b==&quot;endTag&quot;){m(k.tagName.toLowerCase());var b=k.tagName,c=s.doNotIndent.hasOwnProperty(b)||</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">k</span>.<span class="pl-smi">context</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">context</span>.<span class="pl-smi">noIndent</span>;<span class="pl-smi">k</span>.<span class="pl-smi">context</span><span class="pl-k">=</span>{prev<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-smi">context</span>,tagName<span class="pl-k">:</span>b,indent<span class="pl-k">:</span><span class="pl-smi">k</span>.<span class="pl-smi">indented</span>,startOfLine<span class="pl-k">:</span>a,noIndent<span class="pl-k">:</span>c}}<span class="pl-k">return</span> <span class="pl-en">g</span>()}}function n(a){return function(b){a&amp;&amp;(t=&quot;error&quot;);if(b==&quot;endTag&quot;)return f(),g();t=&quot;error&quot;;return g(arguments.callee)}}function m(a){for(var b;;){if(!k.context)break;b=k.context.tagName.toLowerCase();if(!s.contextGrabbers.hasOwnProperty(b)||!s.contextGrabbers[b].hasOwnProperty(a))break;f()}}function o(b){if(b==&quot;word&quot;)return t=&quot;attribute&quot;,g(p,o);if(b==&quot;endTag&quot;||b==&quot;selfcloseTag&quot;)return a();</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">t<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-en">g</span>(o)}function p(b){if(b==&quot;equals&quot;)return g(r,o);s.allowMissing||(t=&quot;error&quot;);return b==&quot;endTag&quot;||b==&quot;selfcloseTag&quot;?a():g()}function r(b){if(b==&quot;string&quot;)return g(q);if(b==&quot;word&quot;&amp;&amp;s.allowUnquoted)return t=&quot;string&quot;,g();t=&quot;error&quot;;return b==&quot;endTag&quot;||b==&quot;selfCloseTag&quot;?a():g()}function q(b){return b==&quot;string&quot;?g(q):a()}function u(a,b){if(a.sol())b.startOfLine=!0,b.indented=0;if(a.eatSpace())return null;t=w=v=null;var c=b.tokenize(a,b);b.type=w;if((c||w)&amp;&amp;c!=&quot;comment&quot;)for(k=b;;)if((b.cc.pop()||</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">j)(w<span class="pl-k">||</span>c))<span class="pl-k">break</span>;<span class="pl-smi">b</span>.<span class="pl-smi">startOfLine</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> t<span class="pl-k">||</span>c}<span class="pl-k">var</span> s<span class="pl-k">=</span>{autoSelfClosers<span class="pl-k">:</span>{},implicitlyClosed<span class="pl-k">:</span>{},contextGrabbers<span class="pl-k">:</span>{},doNotIndent<span class="pl-k">:</span>{},allowUnquoted<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,allowMissing<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},v<span class="pl-k">=</span><span class="pl-c1">null</span>,w<span class="pl-k">=</span><span class="pl-c1">null</span>,k<span class="pl-k">=</span><span class="pl-c1">null</span>,t;<span class="pl-k">return</span>{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span>{tokenize<span class="pl-k">:</span>d,cc<span class="pl-k">:</span>[],indented<span class="pl-k">:</span><span class="pl-c1">0</span>,startOfLine<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,tagName<span class="pl-k">:</span><span class="pl-c1">null</span>,context<span class="pl-k">:</span><span class="pl-c1">null</span>},f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(a),g<span class="pl-k">=</span>[];<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">eol</span>();)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-en">u</span>(f,c),start<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">+</span>b,end<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span><span class="pl-k">+</span>b}),<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>;<span class="pl-k">return</span> g}}});</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string-score<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">score</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">if</span>(e<span class="pl-k">==</span>d)<span class="pl-k">return</span> <span class="pl-c1">1</span>;<span class="pl-k">if</span>(d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>,a,g<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>,j,l,n,m;f<span class="pl-k">&lt;</span>b;<span class="pl-k">++</span>f){n<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">charAt</span>(f);j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">n</span>.<span class="pl-c1">toLowerCase</span>());l<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">n</span>.<span class="pl-c1">toUpperCase</span>());m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(j,l);l<span class="pl-k">=</span>m<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>m<span class="pl-k">:</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(j,l);<span class="pl-k">if</span>(l<span class="pl-k">===</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">if</span>(h){g<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">-</span>h;<span class="pl-k">continue</span>}<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">else</span> j<span class="pl-k">=</span><span class="pl-c1">0.1</span>;e[l]<span class="pl-k">===</span>n<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">+=</span><span class="pl-c1">0.1</span>);l<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">?</span>(j<span class="pl-k">+=</span><span class="pl-c1">0.6</span>,f<span class="pl-k">===</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">1</span>))<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(l<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">+=</span><span class="pl-c1">0.8</span>);e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">substring</span>(l<span class="pl-k">+</span><span class="pl-c1">1</span>,c);i<span class="pl-k">+=</span>j}e<span class="pl-k">=</span>i<span class="pl-k">/</span>b;b<span class="pl-k">=</span>(e<span class="pl-k">*</span>(b<span class="pl-k">/</span>c)<span class="pl-k">+</span>e)<span class="pl-k">/</span><span class="pl-c1">2</span>;b<span class="pl-k">/=</span>g;a<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">+</span><span class="pl-c1">0.15</span><span class="pl-k">&lt;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-c1">0.15</span>);<span class="pl-k">return</span> b}}});</td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_data</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-c1">append</span>(b)}<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>${0}<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">append</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_data</span>.<span class="pl-c1">push</span>(b);<span class="pl-c1">this</span>.<span class="pl-c1">length</span><span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_data</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">valueOf</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">toString</span>()}};<span class="pl-k">return</span>{reTag<span class="pl-k">:</span><span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-cce">\/</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">\w</span>:<span class="pl-cce">\-</span>]</span><span class="pl-k">+</span>(?:<span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-c1">\-:</span>]</span><span class="pl-k">+</span>(?:<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(?:(?:&quot;<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">*</span>&quot;)<span class="pl-k">|</span>(?:&#39;<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">*</span>&#39;)<span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span>&gt;<span class="pl-c1">\s</span>]</span><span class="pl-k">+</span>))<span class="pl-k">?</span>)<span class="pl-k">*</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\/</span><span class="pl-k">?</span>)&gt;<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-en">endsWithTag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">reTag</span>.<span class="pl-c1">test</span>(b)},<span class="pl-en">isNumeric</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">typeof</span> b<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>));<span class="pl-k">return</span> b<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;</span><span class="pl-c1">47</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">&lt;</span><span class="pl-c1">58</span>},<span class="pl-en">trim</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">|</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">getNewline</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>newline<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isString</span>(b)<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">setNewline</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-en">setVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>newline<span class="pl-pds">&quot;</span></span>,b);<span class="pl-smi">c</span>.<span class="pl-en">setVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>nl<span class="pl-pds">&quot;</span></span>,b)},<span class="pl-en">splitByLines</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNewline</span>(),a<span class="pl-k">=</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\r\n</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n\r</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\r</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\n</span><span class="pl-pds">/</span>g</span>,a).<span class="pl-c1">split</span>(a);c<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">filter</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!!</span><span class="pl-c1">this</span>.<span class="pl-en">trim</span>(a)},<span class="pl-c1">this</span>));<span class="pl-k">return</span> a},</td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line"><span class="pl-en">normalizeNewline</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">splitByLines</span>(b).<span class="pl-c1">join</span>(<span class="pl-c1">this</span>.<span class="pl-en">getNewline</span>())},<span class="pl-en">repeatString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>[],d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">getStringsPads</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-k">+</span>a}),c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">max</span>(b);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span>c<span class="pl-k">-</span>a)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">repeatString</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-c1">this</span>)},<span class="pl-en">padString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">repeatString</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">:</span>c,g<span class="pl-k">=</span>[],f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">splitByLines</span>(b),j<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getNewline</span>();</td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(f[<span class="pl-c1">0</span>]);<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">1</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(j<span class="pl-k">+</span>a<span class="pl-k">+</span>f[h]);<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">zeroPadString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&gt;</span>d<span class="pl-k">++</span>;)a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> a<span class="pl-k">+</span>b},<span class="pl-en">unindentString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">splitByLines</span>(b),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>)a[d].<span class="pl-c1">search</span>(c)<span class="pl-k">==</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(a[d]<span class="pl-k">=</span>a[d].<span class="pl-c1">substr</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>));<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-c1">this</span>.<span class="pl-en">getNewline</span>())},<span class="pl-en">replaceUnescapedSymbol</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>f;)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(g)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>)g<span class="pl-k">+=</span>j<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(g,j)<span class="pl-k">==</span>c){<span class="pl-k">var</span> h<span class="pl-k">=</span>j;e<span class="pl-k">++</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(a))(i<span class="pl-k">=</span><span class="pl-en">a</span>(b,c,g,</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">e))<span class="pl-k">?</span>(h<span class="pl-k">=</span>i[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>,i<span class="pl-k">=</span>i[<span class="pl-c1">1</span>])<span class="pl-k">:</span>i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;i<span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">?</span>g<span class="pl-k">++</span><span class="pl-k">:</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,g)<span class="pl-k">+</span>i<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(g<span class="pl-k">+</span>h),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,g<span class="pl-k">+=</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>)}<span class="pl-k">else</span> g<span class="pl-k">++</span>;<span class="pl-k">return</span> b},<span class="pl-en">replaceVariables</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span>{},a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(c)<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> b <span class="pl-k">in</span> c<span class="pl-k">?</span>c[b]<span class="pl-k">:</span><span class="pl-c1">null</span>},g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>).<span class="pl-en">processText</span>(b,{<span class="pl-en">variable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">a</span>(<span class="pl-smi">b</span>.<span class="pl-smi">token</span>,<span class="pl-smi">b</span>.<span class="pl-c1">name</span>,b);c<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getVariable</span>(<span class="pl-smi">b</span>.<span class="pl-c1">name</span>));<span class="pl-k">if</span>(c<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(c))c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">token</span>;<span class="pl-k">return</span> c}})},<span class="pl-en">replaceCounter</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-c1">String</span>(b);c<span class="pl-k">=</span><span class="pl-c1">String</span>(c);<span class="pl-k">/</span><span class="pl-k">^</span>\<span class="pl-k">-</span><span class="pl-k">?</span>\d<span class="pl-k">+</span>$<span class="pl-k">/</span>.<span class="pl-c1">test</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-k">+</span>c);<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">replaceUnescapedSymbol</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">j</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-en">isNumeric</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(e<span class="pl-k">+</span><span class="pl-c1">1</span>)))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(j<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(j)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(j<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>;)j<span class="pl-k">++</span>;<span class="pl-k">var</span> h<span class="pl-k">=</span>j<span class="pl-k">-</span>e,i<span class="pl-k">=</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,p;<span class="pl-k">if</span>(p<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(j).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>@(<span class="pl-cce">\-</span><span class="pl-k">?</span>)(<span class="pl-c1">\d</span><span class="pl-k">*</span>)<span class="pl-pds">/</span></span>))j<span class="pl-k">+=</span>p[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>,p[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>),i<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(p[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">1</span>)<span class="pl-k">-</span><span class="pl-c1">1</span>;o<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>a<span class="pl-k">-</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>);c<span class="pl-k">+=</span>i;<span class="pl-k">return</span>[<span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(e,j),<span class="pl-smi">g</span>.<span class="pl-en">zeroPadString</span>(c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,h)]})},matchesTag<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">reTag</span>.<span class="pl-c1">test</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">escapeText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-cce">\$\\</span>]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$1<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">unescapeText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span>(<span class="pl-c1">.</span>)<span class="pl-pds">/</span>g</span>,</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>$1<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">getCaretPlaceholder</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(i)<span class="pl-k">?</span><span class="pl-smi">i</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)<span class="pl-k">:</span>i},<span class="pl-en">setCaretPlaceholder</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){i<span class="pl-k">=</span>b},<span class="pl-en">getLinePadding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span>(<span class="pl-smi">b</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">\s</span><span class="pl-k">+</span>)<span class="pl-pds">/</span></span>)<span class="pl-k">||</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>])[<span class="pl-c1">0</span>]},<span class="pl-en">getLinePaddingFromPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getLinePadding</span>(<span class="pl-c1">this</span>.<span class="pl-en">findNewlineBounds</span>(b,c).<span class="pl-c1">substring</span>(b))},<span class="pl-en">escapeForRegexp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>[.*+?|()<span class="pl-cce">\\</span>[<span class="pl-cce">\\</span>]{}<span class="pl-cce">\\\\</span>]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>$&amp;<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">prettifyNumber</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">toFixed</span>(<span class="pl-k">typeof</span> c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span>c).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span><span class="pl-k">?</span>0<span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">stringBuilder</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">h</span>(b)},</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-en">replaceSubstring</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a)g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>;<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>);<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>a);<span class="pl-k">return</span> a<span class="pl-k">&lt;</span><span class="pl-c1">0</span><span class="pl-k">||</span>a<span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,a)<span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(g)},<span class="pl-en">narrowToNonSpace</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(c,a);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\s\n\r</span><span class="pl-c1">\u00a0</span>]</span><span class="pl-pds">/</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">&lt;</span><span class="pl-smi">c</span>.<span class="pl-smi">end</span>;){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span>)))<span class="pl-k">break</span>;<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">++</span>}<span class="pl-k">for</span>(;<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">&gt;</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>;)<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">--</span>,<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">c</span>.<span class="pl-smi">end</span>))){<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">++</span>;<span class="pl-k">break</span>}<span class="pl-k">return</span> c},<span class="pl-en">findNewlineBounds</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>a<span class="pl-k">-</span><span class="pl-c1">1</span>,j<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>;j<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;j<span class="pl-k">--</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(j);<span class="pl-k">if</span>(h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>){d<span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}}<span class="pl-k">for</span>(j<span class="pl-k">=</span>c;j<span class="pl-k">&lt;</span>a;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(j),h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>){f<span class="pl-k">=</span>j;<span class="pl-k">break</span>}<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(d,f<span class="pl-k">-</span>d)},<span class="pl-en">deepMerge</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b,c,a,g,f,j<span class="pl-k">=</span><span class="pl-c1">arguments</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span>{},e<span class="pl-k">=</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span>;<span class="pl-k">for</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(j)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-en">isFunction</span>(j)<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span>{});e<span class="pl-k">&lt;</span>h;e<span class="pl-k">++</span>)<span class="pl-k">if</span>((b<span class="pl-k">=</span><span class="pl-c1">arguments</span>[e])<span class="pl-k">!=</span><span class="pl-c1">null</span>)<span class="pl-k">for</span>(c <span class="pl-k">in</span> b)a<span class="pl-k">=</span>j[c],g<span class="pl-k">=</span>b[c],j<span class="pl-k">!==</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(g)<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(g)))<span class="pl-k">?</span>(f<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>[])<span class="pl-k">:</span>a<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(a)<span class="pl-k">?</span>a<span class="pl-k">:</span>{},j[c]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">deepMerge</span>(a,g))<span class="pl-k">:</span>g<span class="pl-k">!==</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(j[c]<span class="pl-k">=</span>g));<span class="pl-k">return</span> j}}});</td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>eq<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>==<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">===</span>c;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>lt<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">&lt;</span>c;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&lt;=<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">&lt;=</span>c;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>gt<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">&gt;</span>c;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>gte<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;=<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> b<span class="pl-k">&gt;=</span>c}}function i(b,c){d.isObject(b)&amp;&amp;&quot;start&quot;in b?(this.start=Math.min(b.start,b.end),this.end=Math.max(b.start,b.end)):d.isArray(b)?(this.start=b[0],this.end=b[1]):(c=d.isString(c)?c.length:+c,this.start=b,this.end=b+c)}i.prototype={length:function(){return Math.abs(this.end-this.start)},</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-en">equal</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">cmp</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>eq<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eq<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">shift</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">end</span><span class="pl-k">+=</span>b;<span class="pl-k">return</span> <span class="pl-c1">this</span>},<span class="pl-en">overlap</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">&lt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">end</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-c1">start</span>},<span class="pl-en">intersection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">overlap</span>(b)){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-c1">start</span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">i</span>(c,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-smi">end</span>,<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)<span class="pl-k">-</span>c)}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">union</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">overlap</span>(b)){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-c1">start</span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">i</span>(c,<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">b</span>.<span class="pl-smi">end</span>,<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)<span class="pl-k">-</span>c)}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">inside</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">cmp</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gt<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">contains</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">cmp</span>(b,</td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>lt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gt<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">include</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">cmp</span>(loc,<span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gte<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">cmp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> d;b <span class="pl-k">instanceof</span> i<span class="pl-k">?</span>(d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span>)<span class="pl-k">:</span>d<span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-en">h</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,d,c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;=<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-c1">this</span>.<span class="pl-smi">end</span>,b,a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">substring</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">length</span>()<span class="pl-k">&gt;</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-smi">end</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">clone</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">i</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-c1">length</span>())},<span class="pl-en">toArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span>[<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-smi">end</span>]},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">length</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>}};<span class="pl-k">return</span>{<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(b)<span class="pl-k">||</span>b<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(b <span class="pl-k">instanceof</span> i)<span class="pl-k">return</span> b;<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> b)c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">i</span>(b,c)},<span class="pl-en">create2</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">-=</span>b);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">create</span>(b,c)}}});</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>handlerList<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_list</span><span class="pl-k">=</span>[]}<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_list</span>.<span class="pl-c1">push</span>(<span class="pl-smi">d</span>.<span class="pl-en">extend</span>({order<span class="pl-k">:</span><span class="pl-c1">0</span>},b<span class="pl-k">||</span>{},{fn<span class="pl-k">:</span>e}))},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-c1">this</span>.<span class="pl-smi">_list</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_list</span>,<span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_list</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">fn</span><span class="pl-k">===</span>e}))},<span class="pl-en">list</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">sortBy</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_list</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>order<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">reverse</span>()},<span class="pl-en">listFn</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">pluck</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>fn<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">exec</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>b<span class="pl-k">||</span>[],c<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fn</span>.<span class="pl-c1">apply</span>(a,b);<span class="pl-k">if</span>(c<span class="pl-k">!==</span>e)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">return</span> c}};<span class="pl-k">return</span>{<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">h</span>}}});</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tokenIterator<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">tokens</span><span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-smi">_position</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-c1">reset</span>()}<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">next</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">hasNext</span>()){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>[<span class="pl-k">++</span><span class="pl-c1">this</span>.<span class="pl-smi">_i</span>];<span class="pl-c1">this</span>.<span class="pl-smi">_position</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">start</span>;<span class="pl-k">return</span> d}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">current</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_i</span>]},<span class="pl-en">position</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_position</span>},<span class="pl-en">hasNext</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_i</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">_il</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">_i</span><span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_il</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>.<span class="pl-c1">length</span>},<span class="pl-en">item</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_i</span>]},<span class="pl-en">itemNext</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_i</span><span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>]},<span class="pl-en">itemPrev</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">tokens</span>[<span class="pl-c1">this</span>.<span class="pl-smi">_i</span><span class="pl-k">-</span><span class="pl-c1">1</span>]},<span class="pl-en">nextUntil</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c,a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(e)<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">==</span>e}<span class="pl-k">:</span>e;c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">next</span>();)<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,c),<span class="pl-smi">a</span>.<span class="pl-c1">call</span>(<span class="pl-c1">this</span>,c))<span class="pl-k">break</span>}};<span class="pl-k">return</span>{<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">h</span>(d)}}});</td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">e</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">this</span>.<span class="pl-smi">string</span><span class="pl-k">=</span>d}<span class="pl-smi">e</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">eol</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">&gt;=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">length</span>},<span class="pl-en">sol</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">==</span><span class="pl-c1">0</span>},<span class="pl-en">peek</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>)},<span class="pl-en">next</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">&lt;</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">++</span>)},<span class="pl-en">eat</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>);<span class="pl-k">if</span>(<span class="pl-k">typeof</span> d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>e<span class="pl-k">==</span>d<span class="pl-k">:</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">d</span>.<span class="pl-smi">test</span><span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">test</span>(e)<span class="pl-k">:</span><span class="pl-en">d</span>(e)))<span class="pl-k">return</span><span class="pl-k">++</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>,e},<span class="pl-en">eatWhile</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>;<span class="pl-c1">this</span>.<span class="pl-en">eat</span>(d););</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">&gt;</span>e},<span class="pl-en">eatSpace</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>;<span class="pl-k">/</span>[\s\u00a0]<span class="pl-k">/</span>.<span class="pl-c1">test</span>(<span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>));)<span class="pl-k">++</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">&gt;</span>d},<span class="pl-en">skipToEnd</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">length</span>},<span class="pl-en">skipTo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">indexOf</span>(d,<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>);<span class="pl-k">if</span>(d<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span>d,<span class="pl-k">!</span><span class="pl-c1">0</span>},<span class="pl-en">skipToPair</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">0</span>,b,c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">length</span>;c<span class="pl-k">&lt;</span>a;)<span class="pl-k">if</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">charAt</span>(c<span class="pl-k">++</span>),b<span class="pl-k">==</span>d)i<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(b<span class="pl-k">==</span>e<span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">--</span>,i<span class="pl-k">&lt;</span><span class="pl-c1">1</span>))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">=</span>c,<span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">backUp</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">-=</span>d},<span class="pl-en">match</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">i</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> d<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(i<span class="pl-k">=</span>i<span class="pl-k">?</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()}<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> b},<span class="pl-en">i</span>(<span class="pl-c1">this</span>.<span class="pl-smi">string</span>).<span class="pl-c1">indexOf</span>(<span class="pl-en">i</span>(d),<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>)<span class="pl-k">==</span><span class="pl-c1">this</span>.<span class="pl-smi">pos</span>)<span class="pl-k">return</span> e<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">+=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">return</span>(d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>).<span class="pl-c1">match</span>(d))<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-smi">pos</span><span class="pl-k">+=</span>d[<span class="pl-c1">0</span>].<span class="pl-c1">length</span>),d},<span class="pl-en">current</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">string</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">this</span>.<span class="pl-c1">start</span>,<span class="pl-c1">this</span>.<span class="pl-smi">pos</span>)}};<span class="pl-k">return</span>{<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">e</span>(d)}}});</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">replaceUnescapedSymbol</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">g</span>.<span class="pl-en">getCaretPlaceholder</span>());<span class="pl-k">if</span>(d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>snippets<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>,c);<span class="pl-k">if</span>(d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>abbreviations<span class="pl-pds">&quot;</span></span>){d<span class="pl-k">=</span>c;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(a);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>),h;<span class="pl-k">return</span>(h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">exec</span>(d))<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">create</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>element<span class="pl-pds">&quot;</span></span>,h[<span class="pl-c1">1</span>],h[<span class="pl-c1">2</span>],h[<span class="pl-c1">4</span>]<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">create</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>reference<span class="pl-pds">&quot;</span></span>,d)}}<span class="pl-k">var</span> i<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;(<span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-cce">\:</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\-</span>]</span><span class="pl-k">*</span>)((?:<span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\:\-</span>]</span><span class="pl-k">+</span><span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[&#39;&quot;]</span>)<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-k">\3</span>)<span class="pl-k">*</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\/</span><span class="pl-k">?</span>)&gt;<span class="pl-pds">/</span></span>,c<span class="pl-k">=</span>{},a<span class="pl-k">=</span>{},g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>handlerList<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>();<span class="pl-k">return</span>{<span class="pl-en">setVocabulary</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){i<span class="pl-k">=</span>{};d<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>system<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c<span class="pl-k">=</span>b<span class="pl-k">:</span>a<span class="pl-k">=</span>b},<span class="pl-en">getVocabulary</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> b<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>system<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>c<span class="pl-k">:</span>a},<span class="pl-en">getMatchedResource</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-c1">exec</span>(<span class="pl-c1">null</span>,<span class="pl-smi">d</span>.<span class="pl-en">toArray</span>(<span class="pl-c1">arguments</span>))<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">findSnippet</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">name</span>())},<span class="pl-en">getVariable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(<span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>variables<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>{})[a]},<span class="pl-en">setVariable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getVocabulary</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>variables<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c))<span class="pl-smi">c</span>.<span class="pl-smi">variables</span><span class="pl-k">=</span>{};<span class="pl-smi">c</span>.<span class="pl-smi">variables</span>[a]<span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-en">setVocabulary</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">hasSyntax</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-en">getVocabulary</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>user<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-en">getVocabulary</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>system<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">addResolver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-smi">g</span>.<span class="pl-c1">add</span>(a,b)},<span class="pl-en">removeResolver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">g</span>.<span class="pl-c1">remove</span>(a)},<span class="pl-en">getSection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span> <span class="pl-c1">null</span>;b <span class="pl-k">in</span> i<span class="pl-k">||</span>(i[b]<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">deepMerge</span>({},c[b],a[b]));<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span>i[b],h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">rest</span>(<span class="pl-c1">arguments</span>),n;g<span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">shift</span>());)<span class="pl-k">if</span>(n <span class="pl-k">in</span> g)g<span class="pl-k">=</span>g[n];<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">return</span> g},<span class="pl-en">findItem</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(a);c;){<span class="pl-k">if</span>(b <span class="pl-k">in</span> c)<span class="pl-k">return</span> c[b];c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(c[<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span>])}},<span class="pl-en">findSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">||!</span>b)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span>[],g<span class="pl-k">=</span>[b];<span class="pl-k">~</span><span class="pl-smi">b</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">push</span>(<span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\-</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(a),i<span class="pl-k">=</span><span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">find</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>snippets<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviations<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(a,b);<span class="pl-k">if</span>(c)<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">find</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(c[a])<span class="pl-k">return</span> i<span class="pl-k">=</span><span class="pl-en">h</span>(a,c[a],b)})},<span class="pl-c1">this</span>);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span><span class="pl-k">!</span>i<span class="pl-k">&amp;&amp;</span>e[<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span>]<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(c,e[<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span>])<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">findSnippet</span>(e[<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span>],b,c)<span class="pl-k">:</span>i},<span class="pl-en">fuzzyFindSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">0.3</span>,a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getAllSnippets</span>(a),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string-score<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>:<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>:<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span>{key<span class="pl-k">:</span>c,score<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-en">score</span>(<span class="pl-smi">a</span>.<span class="pl-smi">nk</span>,b,<span class="pl-c1">0.1</span>)}});<span class="pl-k">if</span>((h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(<span class="pl-smi">d</span>.<span class="pl-en">sortBy</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span>score<span class="pl-pds">&quot;</span></span>)))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">score</span><span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span> a[<span class="pl-smi">h</span>.<span class="pl-smi">key</span>].<span class="pl-smi">parsedValue</span>},</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getAllSnippets</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>all-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span>i[b]){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],g<span class="pl-k">=</span>[];<span class="pl-k">do</span>{<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSection</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">break</span>;<span class="pl-smi">d</span>.<span class="pl-en">each</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>snippets<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviations<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{};<span class="pl-smi">d</span>.<span class="pl-en">each</span>(e[a]<span class="pl-k">||</span><span class="pl-c1">null</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){b[d]<span class="pl-k">=</span>{nk<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>:<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>:<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>),value<span class="pl-k">:</span>c,parsedValue<span class="pl-k">:</span><span class="pl-en">h</span>(d,c,a),type<span class="pl-k">:</span>a}});<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(b)});<span class="pl-smi">g</span>.<span class="pl-c1">push</span>(a);a<span class="pl-k">=</span>e[<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span>]}<span class="pl-k">while</span>(a<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(g,a));i[b]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">extend</span>.<span class="pl-c1">apply</span>(d,<span class="pl-smi">c</span>.<span class="pl-c1">reverse</span>())}<span class="pl-k">return</span> i[b]}}});</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>).<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>_<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-pds">/</span>g</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>).<span class="pl-c1">toUpperCase</span>()}))}<span class="pl-k">var</span> i<span class="pl-k">=</span>{};<span class="pl-k">return</span>{<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>();a<span class="pl-k">=</span>a<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">label</span>)<span class="pl-smi">a</span>.<span class="pl-c1">label</span><span class="pl-k">=</span><span class="pl-en">h</span>(b);i[b]<span class="pl-k">=</span>{name<span class="pl-k">:</span>b,fn<span class="pl-k">:</span>c,options<span class="pl-k">:</span>a}},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> i[<span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()]},<span class="pl-en">run</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(c)<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">rest</span>(<span class="pl-c1">arguments</span>));<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(b);<span class="pl-k">return</span> a<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">fn</span>.<span class="pl-c1">apply</span>(emmet,c)<span class="pl-k">:</span>(<span class="pl-smi">emmet</span>.<span class="pl-en">log</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Action &quot;%s&quot; is not defined<span class="pl-pds">&#39;</span></span>,b),<span class="pl-k">!</span><span class="pl-c1">1</span>)},<span class="pl-en">getAll</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> i},</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getList</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">values</span>(<span class="pl-c1">this</span>.<span class="pl-c1">getAll</span>())},<span class="pl-en">getMenu</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>[],b<span class="pl-k">=</span>b<span class="pl-k">||</span>[];<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-en">getList</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">hidden</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">name</span>)){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>),f<span class="pl-k">=</span>c;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">label</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-c1">label</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">pop</span>(),e,i;e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">shift</span>();)i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>submenu<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">==</span>e}),i<span class="pl-k">||</span>(i<span class="pl-k">=</span>{name<span class="pl-k">:</span>e,type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>submenu<span class="pl-pds">&quot;</span></span>,items<span class="pl-k">:</span>[]},<span class="pl-smi">f</span>.<span class="pl-c1">push</span>(i)),f<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">items</span>;<span class="pl-smi">f</span>.<span class="pl-c1">push</span>({type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>action<span class="pl-pds">&quot;</span></span>,name<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>,label<span class="pl-k">:</span>g})}});<span class="pl-k">return</span> c},<span class="pl-en">getActionNameForMenuTitle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">d</span>.<span class="pl-c1">find</span>(c<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">getMenu</span>(),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>action<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">label</span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span><span class="pl-k">==</span>b)<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span>}<span class="pl-k">else</span> <span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getActionNameForMenuTitle</span>(b,<span class="pl-smi">c</span>.<span class="pl-smi">items</span>)},<span class="pl-c1">this</span>);<span class="pl-k">return</span> a<span class="pl-k">||</span><span class="pl-c1">null</span>}}});</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(<span class="pl-c1">this</span>,g,a)}function i(a,b){switch(String(b||&quot;&quot;).toLowerCase()){case &quot;lower&quot;:return a.toLowerCase();case &quot;upper&quot;:return a.toUpperCase()}return a}function b(b,c){return a[b.toLowerCase()]=new h(c)}function c(){b(&quot;xhtml&quot;);b(&quot;html&quot;,{self_closing_tag:!1});b(&quot;xml&quot;,{self_closing_tag:!0,tag_nl:!0});b(&quot;plain&quot;,{tag_nl:!1,indent:!1,place_cursor:!1});b(&quot;line&quot;,{tag_nl:!1,indent:!1,extraFilters:&quot;s&quot;})}var a={},g={tag_case:&quot;asis&quot;,attr_case:&quot;asis&quot;,attr_quotes:&quot;double&quot;,</td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">tag_nl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>decide<span class="pl-pds">&quot;</span></span>,tag_nl_leaf<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,place_cursor<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,indent<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,inline_break<span class="pl-k">:</span><span class="pl-c1">3</span>,self_closing_tag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xhtml<span class="pl-pds">&quot;</span></span>,filters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,extraFilters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>};<span class="pl-smi">h</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{<span class="pl-en">tagName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">i</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">tag_case</span>)},<span class="pl-en">attributeName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">i</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">attr_case</span>)},<span class="pl-en">attributeQuote</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">attr_quotes</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>single<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>},<span class="pl-en">selfClosing</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">self_closing_tag</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>xhtml<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> /<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">self_closing_tag</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">cursor</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">place_cursor</span><span class="pl-k">?</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getCaretPlaceholder</span>()<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}};<span class="pl-en">c</span>();<span class="pl-k">return</span>{<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">==</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-en">b</span>(a,c)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">h</span>(<span class="pl-smi">d</span>.<span class="pl-en">defaults</span>(a<span class="pl-k">||</span>{},g))},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span>c){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">findItem</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>g)}<span class="pl-k">return</span><span class="pl-k">!</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">plain</span><span class="pl-k">:</span>b <span class="pl-k">instanceof</span> h<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">in</span> a<span class="pl-k">?</span>a[<span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()]<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">create</span>(b)},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();b <span class="pl-k">in</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> a[b]},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){a<span class="pl-k">=</span>{};<span class="pl-en">c</span>()},stringCase<span class="pl-k">:</span>i}});</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>{<span class="pl-en">isInsideTag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-cce">\/</span><span class="pl-k">?</span><span class="pl-c1">\w</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\:\-</span>]</span><span class="pl-k">*</span><span class="pl-c1">.</span><span class="pl-k">*?</span>&gt;<span class="pl-pds">/</span></span>,b<span class="pl-k">=</span>e;b<span class="pl-k">&gt;</span><span class="pl-k">-</span><span class="pl-c1">1</span>;){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">charAt</span>(b)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>)<span class="pl-k">break</span>;b<span class="pl-k">--</span>}<span class="pl-k">return</span> b<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(i<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">exec</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substring</span>(b)))<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;</span>b<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>b<span class="pl-k">+</span>i[<span class="pl-c1">0</span>].<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">outputInfo</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">i</span>){i<span class="pl-k">=</span>i<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">getProfileName</span>();<span class="pl-k">return</span>{syntax<span class="pl-k">:</span><span class="pl-c1">String</span>(e<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">getSyntax</span>()),profile<span class="pl-k">:</span>i<span class="pl-k">?</span><span class="pl-c1">String</span>(i)<span class="pl-k">:</span><span class="pl-c1">null</span>,content<span class="pl-k">:</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>())}},<span class="pl-en">unindent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">unindentString</span>(h,<span class="pl-c1">this</span>.<span class="pl-en">getCurrentLinePadding</span>(d))},<span class="pl-en">getCurrentLinePadding</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getLinePadding</span>(<span class="pl-smi">d</span>.<span class="pl-en">getCurrentLine</span>())}}});</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span>{mimeTypes<span class="pl-k">:</span>{gif<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>image/gif<span class="pl-pds">&quot;</span></span>,png<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>image/png<span class="pl-pds">&quot;</span></span>,jpg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>image/jpeg<span class="pl-pds">&quot;</span></span>,jpeg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>image/jpeg<span class="pl-pds">&quot;</span></span>,svg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>image/svg+xml<span class="pl-pds">&quot;</span></span>,html<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text/html<span class="pl-pds">&quot;</span></span>,htm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text/html<span class="pl-pds">&quot;</span></span>},<span class="pl-en">extractAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,i<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>);;){h<span class="pl-k">--</span>;<span class="pl-k">if</span>(h<span class="pl-k">&lt;</span><span class="pl-c1">0</span>){i<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">charAt</span>(h);<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>)c<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>c){i<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}c<span class="pl-k">--</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>)a<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>a){i<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}a<span class="pl-k">--</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>)b<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>b){i<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}b<span class="pl-k">--</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">isAllowedChar</span>(j)<span class="pl-k">||</span>j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-en">endsWithTag</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,h<span class="pl-k">+</span><span class="pl-c1">1</span>)))){i<span class="pl-k">=</span>h<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}}<span class="pl-k">return</span> i<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;!</span>a<span class="pl-k">&amp;&amp;!</span>c<span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">substring</span>(i).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-cce">\*\+\&gt;\^</span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">getImageSize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">charCodeAt</span>(i<span class="pl-k">++</span>)};<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">8</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0089</span>PNG<span class="pl-cce">\r\n\u001a\n</span><span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>IHDR<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">4</span>;<span class="pl-k">return</span>{width<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-en">e</span>(),height<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">24</span><span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">16</span><span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-en">e</span>()}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">4</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span>GIF8<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> i<span class="pl-k">=</span><span class="pl-c1">6</span>,{width<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>,height<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">|</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>};<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>)<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u00ff\u00d8</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">2</span>,b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line">b;){<span class="pl-k">if</span>(<span class="pl-en">e</span>()<span class="pl-k">!=</span><span class="pl-c1">255</span>)<span class="pl-k">break</span>;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>();<span class="pl-k">if</span>(c<span class="pl-k">==</span><span class="pl-c1">218</span>)<span class="pl-k">break</span>;<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-en">e</span>();<span class="pl-k">if</span>(c<span class="pl-k">&gt;=</span><span class="pl-c1">192</span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">&lt;=</span><span class="pl-c1">207</span><span class="pl-k">&amp;&amp;!</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">4</span>)<span class="pl-k">&amp;&amp;!</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">8</span>))<span class="pl-k">return</span> i<span class="pl-k">+=</span><span class="pl-c1">1</span>,{height<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-en">e</span>(),width<span class="pl-k">:</span><span class="pl-en">e</span>()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-en">e</span>()};<span class="pl-k">else</span> i<span class="pl-k">+=</span>a<span class="pl-k">-</span><span class="pl-c1">2</span>}},<span class="pl-en">captureContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getSyntax</span>())<span class="pl-k">in</span>{html<span class="pl-k">:</span><span class="pl-c1">1</span>,xml<span class="pl-k">:</span><span class="pl-c1">1</span>,xsl<span class="pl-k">:</span><span class="pl-c1">1</span>}){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">find</span>(h,<span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>());<span class="pl-k">if</span>(i<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-c1">\-:</span>]</span><span class="pl-k">+</span>)(?:<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(?:(?:&quot;((?:<span class="pl-cce">\\</span><span class="pl-c1">.</span><span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span>)<span class="pl-k">*</span>)&quot;)<span class="pl-k">|</span>(?:&#39;((?:<span class="pl-cce">\\</span><span class="pl-c1">.</span><span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span>)<span class="pl-k">*</span>)&#39;)<span class="pl-k">|</span>(<span class="pl-c1">[<span class="pl-k">^</span>&gt;<span class="pl-c1">\s</span>]</span><span class="pl-k">+</span>)))<span class="pl-k">?</span><span class="pl-pds">/</span>g</span>,i<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">open</span>,h<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">range</span>.<span class="pl-c1">substring</span>(h).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-c1">\-<span class="pl-cce">\:</span></span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-smi">i</span>.<span class="pl-c1">name</span>,attributes<span class="pl-k">:</span>[]},</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line">b;b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">exec</span>(h);)<span class="pl-smi">i</span>.<span class="pl-c1">attributes</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>b[<span class="pl-c1">1</span>],value<span class="pl-k">:</span>b[<span class="pl-c1">2</span>]});<span class="pl-k">return</span> i}}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">findExpressionBounds</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>()<span class="pl-k">-</span><span class="pl-c1">1</span>,a<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-c1">1</span>;c<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-smi">i</span>.<span class="pl-c1">charAt</span>(c),c,i);)c<span class="pl-k">--</span>;<span class="pl-k">for</span>(;a<span class="pl-k">&lt;</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-smi">i</span>.<span class="pl-c1">charAt</span>(a),a,i);)a<span class="pl-k">++</span>;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>([<span class="pl-k">++</span>c,a])},<span class="pl-en">compoundUpdate</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(e){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getSelectionRange</span>();<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">e</span>.<span class="pl-c1">data</span>,<span class="pl-smi">e</span>.<span class="pl-c1">start</span>,<span class="pl-smi">e</span>.<span class="pl-smi">end</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">e</span>.<span class="pl-smi">caret</span>,<span class="pl-smi">e</span>.<span class="pl-smi">caret</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-smi">i</span>.<span class="pl-c1">start</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">detectSyntax</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span>h<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">hasSyntax</span>(i)<span class="pl-k">||</span>(i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">this</span>.<span class="pl-en">isStyle</span>(d)<span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">isInlineCSS</span>(d)))i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> i},<span class="pl-en">detectProfile</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getSyntax</span>(),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">findItem</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(i)<span class="pl-k">return</span> i;<span class="pl-k">switch</span>(h){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>xsl<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-c1">this</span>.<span class="pl-en">isInlineCSS</span>(d))<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span>(i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>))<span class="pl-k">||</span>(i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">isXHTML</span>(d)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>xhtml<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>),i}<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>xhtml<span class="pl-pds">&quot;</span></span>},<span class="pl-en">isXHTML</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">search</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;!DOCTYPE<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">+</span>XHTML<span class="pl-pds">/</span>i</span>)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">isStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-k">return</span>(h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(h,d))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">open</span>.<span class="pl-c1">name</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-smi">innerRange</span>.<span class="pl-en">cmp</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gte<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">isInlineCSS</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-k">return</span>(h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlEditTree<span class="pl-pds">&quot;</span></span>).<span class="pl-en">parseFromPosition</span>(h,d,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">?</span>(h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">itemFromPosition</span>(d,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">name</span>().<span class="pl-c1">toLowerCase</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>style<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-en">valueRange</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-en">cmp</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gte<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}}});</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>{<span class="pl-en">isSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">is</span>(<span class="pl-smi">d</span>.<span class="pl-en">matchedResource</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">isUnary</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-smi">_text</span><span class="pl-k">||</span><span class="pl-c1">this</span>.<span class="pl-en">isSnippet</span>(d)<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>(d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">matchedResource</span>())<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">is_empty</span>},<span class="pl-en">isInline</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isTextNode</span>()<span class="pl-k">||!</span><span class="pl-smi">d</span>.<span class="pl-c1">name</span>()<span class="pl-k">||</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tagName<span class="pl-pds">&quot;</span></span>).<span class="pl-en">isInlineLevel</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span>())},<span class="pl-en">isBlock</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isSnippet</span>(d)<span class="pl-k">||!</span><span class="pl-c1">this</span>.<span class="pl-en">isInline</span>(d)},<span class="pl-en">isSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>).<span class="pl-en">is</span>(<span class="pl-smi">d</span>.<span class="pl-en">matchedResource</span>(),<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">hasTagsInContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">matchesTag</span>(<span class="pl-smi">d</span>.<span class="pl-c1">content</span>)},</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-en">hasBlockChildren</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">hasTagsInContent</span>(e)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">isBlock</span>(e)<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">any</span>(<span class="pl-smi">e</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isBlock</span>(d)},<span class="pl-c1">this</span>)},<span class="pl-en">insertChildContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">h</span>,<span class="pl-smi">i</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({keepVariable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,appendIfNoChild<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>},b<span class="pl-k">||</span>{}),c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">replaceVariables</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> l<span class="pl-k">=</span>d;f<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>child<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">padString</span>(i,<span class="pl-smi">a</span>.<span class="pl-en">getLinePaddingFromPosition</span>(h,<span class="pl-smi">e</span>.<span class="pl-c1">start</span>)),c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-smi">keepVariable</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">+=</span>d));<span class="pl-k">return</span> l});<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">appendIfNoChild</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">+=</span>i);<span class="pl-k">return</span> h}}});</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>base64<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span>{<span class="pl-en">encode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span>[],h,i,b,c,a,g,f<span class="pl-k">=</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;f<span class="pl-k">&lt;</span>j;)c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">charCodeAt</span>(f<span class="pl-k">++</span>),a<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">charCodeAt</span>(f<span class="pl-k">++</span>),g<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">charCodeAt</span>(f<span class="pl-k">++</span>),h<span class="pl-k">=</span>c<span class="pl-k">&amp;</span><span class="pl-c1">255</span>,i<span class="pl-k">=</span>a<span class="pl-k">&amp;</span><span class="pl-c1">255</span>,b<span class="pl-k">=</span>g<span class="pl-k">&amp;</span><span class="pl-c1">255</span>,c<span class="pl-k">=</span>h<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>,h<span class="pl-k">=</span>(h<span class="pl-k">&amp;</span><span class="pl-c1">3</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">4</span><span class="pl-k">|</span>i<span class="pl-k">&gt;&gt;</span><span class="pl-c1">4</span>,i<span class="pl-k">=</span>(i<span class="pl-k">&amp;</span><span class="pl-c1">15</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">2</span><span class="pl-k">|</span>b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">6</span>,b<span class="pl-k">&amp;=</span><span class="pl-c1">63</span>,<span class="pl-c1">isNaN</span>(a)<span class="pl-k">?</span>i<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">64</span><span class="pl-k">:</span><span class="pl-c1">isNaN</span>(g)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">64</span>),<span class="pl-smi">d</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">charAt</span>(c)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">charAt</span>(h)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">charAt</span>(i)<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">charAt</span>(b));<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},<span class="pl-en">decode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> d,h,i,b,c,a<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>[],j<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">return</span> e;e<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">do</span> d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(a<span class="pl-k">++</span>)),h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(a<span class="pl-k">++</span>)),b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(a<span class="pl-k">++</span>)),c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">e</span>.<span class="pl-c1">charAt</span>(a<span class="pl-k">++</span>)),</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span>d<span class="pl-k">&lt;&lt;</span><span class="pl-c1">18</span><span class="pl-k">|</span>h<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>b<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>c,d<span class="pl-k">=</span>i<span class="pl-k">&gt;&gt;</span><span class="pl-c1">16</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>,h<span class="pl-k">=</span>i<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">&amp;</span><span class="pl-c1">255</span>,i<span class="pl-k">&amp;=</span><span class="pl-c1">255</span>,b<span class="pl-k">==</span><span class="pl-c1">64</span><span class="pl-k">?</span>f[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(d)<span class="pl-k">:</span>c<span class="pl-k">==</span><span class="pl-c1">64</span><span class="pl-k">?</span>f[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(d,h)<span class="pl-k">:</span>f[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(d,h,i);<span class="pl-k">while</span>(a<span class="pl-k">&lt;</span>j);<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}}});</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>{},j;<span class="pl-k">return</span>{<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">matches</span>(a))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">close</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">matches</span>(a))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>close<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">matches</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>p<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h;<span class="pl-k">if</span>(<span class="pl-k">!</span>(i <span class="pl-k">in</span> d)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(h)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">slice</span>(h);d[i]<span class="pl-k">=</span>(j<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">match</span>(c))<span class="pl-k">?</span>{name<span class="pl-k">:</span>j[<span class="pl-c1">1</span>],selfClose<span class="pl-k">:</span><span class="pl-k">!!</span>j[<span class="pl-c1">3</span>],range<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(h,j[<span class="pl-c1">0</span>]),type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>open<span class="pl-pds">&quot;</span></span>}<span class="pl-k">:</span>(j<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">match</span>(a))<span class="pl-k">?</span>{name<span class="pl-k">:</span>j[<span class="pl-c1">1</span>],range<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(h,j[<span class="pl-c1">0</span>]),type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>close<span class="pl-pds">&quot;</span></span>}<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> d[i]},<span class="pl-en">text</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> b}}}function i(a,</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line">b,c){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(b,b<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">==</span>c}function b(a,b){for(var c=[],e=null,h=b.text(),m=a.range.end,o=h.length;m&lt;o;m++){if(i(h,m,&quot;&lt;\!--&quot;))for(e=m;e&lt;o;e++)if(i(h,e,&quot;--\&gt;&quot;)){m=e+3;break}if(e=b.matches(m))if(e.type==&quot;open&quot;&amp;&amp;!e.selfClose)c.push(e.name);else if(e.type==&quot;close&quot;){if(!c.length)return e.name==a.name?e:null;if(d.last(c)==e.name)c.pop();else{for(var p=!1;c.length&amp;&amp;!p;)c.pop()==e.name&amp;&amp;(p=!0);if(!c.length&amp;&amp;!p)return e.name==a.name?e:null}}}}var c=/^&lt;([\w\:\-]+)((?:\s+[\w\-:]+(?:\s*=\s*(?:(?:&quot;[^&quot;]*&quot;)|(?:&#39;[^&#39;]*&#39;)|[^&gt;\s]+))?)*)\s*(\/?)&gt;/,</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-cce">\/</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\:\-</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">[<span class="pl-k">^</span>&gt;]</span><span class="pl-k">*</span>&gt;<span class="pl-pds">/</span></span>;<span class="pl-k">return</span>{<span class="pl-en">find</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">=</span><span class="pl-en">h</span>(a),n<span class="pl-k">=</span><span class="pl-c1">null</span>,m<span class="pl-k">=</span><span class="pl-c1">null</span>,o<span class="pl-k">=</span>c;o<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;o<span class="pl-k">--</span>)<span class="pl-k">if</span>(n<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">open</span>(o))<span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-smi">selfClose</span>){<span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-en">cmp</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>lt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gt<span class="pl-pds">&quot;</span></span>))<span class="pl-k">break</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(m<span class="pl-k">=</span><span class="pl-en">b</span>(n,l)){<span class="pl-k">if</span>(<span class="pl-smi">j</span>.<span class="pl-en">create2</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>,<span class="pl-smi">m</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>).<span class="pl-c1">contains</span>(c))<span class="pl-k">break</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-c1">contains</span>(c))<span class="pl-k">break</span>;n<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">i</span>(a,o,<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">for</span>(<span class="pl-k">var</span> p<span class="pl-k">=</span>o<span class="pl-k">-</span><span class="pl-c1">1</span>;p<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;p<span class="pl-k">--</span>)<span class="pl-k">if</span>(<span class="pl-en">i</span>(a,p,<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">break</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-en">i</span>(a,p,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--<span class="pl-pds">&quot;</span></span>)){o<span class="pl-k">=</span>p;<span class="pl-k">break</span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">i</span>(a,o,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--<span class="pl-pds">&quot;</span></span>)){p<span class="pl-k">=</span>o<span class="pl-k">+</span><span class="pl-c1">4</span>;<span class="pl-k">for</span>(n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;p<span class="pl-k">&lt;</span>n;p<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-en">i</span>(a,p,<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>)){p<span class="pl-k">+=</span><span class="pl-c1">3</span>;<span class="pl-k">break</span>}n<span class="pl-k">=</span>{range<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(o,</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(p)<span class="pl-k">?</span>p<span class="pl-k">-</span>o<span class="pl-k">:</span>p[<span class="pl-c1">0</span>]),type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>comment<span class="pl-pds">&quot;</span></span>};<span class="pl-k">break</span>}<span class="pl-k">if</span>(n)<span class="pl-k">return</span> p<span class="pl-k">=</span>o<span class="pl-k">=</span><span class="pl-c1">null</span>,m<span class="pl-k">?</span>(o<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">create2</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>,<span class="pl-smi">m</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>),p<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">create2</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>,<span class="pl-smi">m</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>))<span class="pl-k">:</span>o<span class="pl-k">=</span>p<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">create2</span>(<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>,<span class="pl-smi">n</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>),<span class="pl-smi">n</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>comment<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-c1">substring</span>(a),<span class="pl-smi">p</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-cce">\!</span>--<span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>,<span class="pl-smi">p</span>.<span class="pl-smi">end</span><span class="pl-k">-=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>--<span class="pl-cce">\&gt;</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">length</span>),{open<span class="pl-k">:</span>n,close<span class="pl-k">:</span>m,type<span class="pl-k">:</span><span class="pl-smi">n</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>comment<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>comment<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>,innerRange<span class="pl-k">:</span>p,<span class="pl-en">innerContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">innerRange</span>.<span class="pl-c1">substring</span>(a)},outerRange<span class="pl-k">:</span>o,<span class="pl-en">outerContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">substring</span>(a)},</td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">range<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-smi">p</span>.<span class="pl-c1">length</span>()<span class="pl-k">||!</span><span class="pl-smi">p</span>.<span class="pl-en">cmp</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>lte<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>gte<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span>o<span class="pl-k">:</span>p,<span class="pl-en">content</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">range</span>.<span class="pl-c1">substring</span>(a)},source<span class="pl-k">:</span>a}},<span class="pl-en">tag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">find</span>(a,b);<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> c}}});</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">100</span>,i<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span>{replaceCarets<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">escape</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b},<span class="pl-en">tabstop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">token</span>},<span class="pl-en">variable</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">token</span>}};<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addOutputProcessor</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span>{<span class="pl-en">tabstop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">a</span>.<span class="pl-smi">group</span>);<span class="pl-k">if</span>(b<span class="pl-k">==</span><span class="pl-c1">0</span>)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>${0}<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>b);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">placeholder</span><span class="pl-k">?</span>(b<span class="pl-k">+=</span>i,a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">processText</span>(<span class="pl-smi">a</span>.<span class="pl-smi">placeholder</span>,h),<span class="pl-s"><span class="pl-pds">&quot;</span>${<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>${<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(b<span class="pl-k">+</span>i)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>}},b<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">processText</span>(b,h),b<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">replaceVariables</span>(b,<span class="pl-smi">f</span>.<span class="pl-en">variablesResolver</span>(a));</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">+=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> b});<span class="pl-k">return</span>{<span class="pl-en">extract</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span>{carets<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},j<span class="pl-k">=</span>[],a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({},b,a,{<span class="pl-en">tabstop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">token</span>,c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">placeholder</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">j</span>.<span class="pl-c1">push</span>({start<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,end<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,group<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>carets<span class="pl-pds">&quot;</span></span>,value<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>placeholder<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a)f[<span class="pl-smi">a</span>.<span class="pl-smi">group</span>]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">placeholder</span>;<span class="pl-smi">a</span>.<span class="pl-smi">group</span> <span class="pl-k">in</span> f<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>f[<span class="pl-smi">a</span>.<span class="pl-smi">group</span>]);<span class="pl-smi">j</span>.<span class="pl-c1">push</span>({start<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,end<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,group<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>,value<span class="pl-k">:</span>c})}<span class="pl-k">return</span> b}});<span class="pl-smi">a</span>.<span class="pl-smi">replaceCarets</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">replace</span>(<span class="pl-c1">RegExp</span>(<span class="pl-smi">g</span>.<span class="pl-en">escapeForRegexp</span>(<span class="pl-smi">g</span>.<span class="pl-en">getCaretPlaceholder</span>()),<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>${0:cursor}<span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">processText</span>(c,a),h<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">stringBuilder</span>(),i<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(j,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">h</span>.<span class="pl-c1">append</span>(<span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(i,<span class="pl-smi">a</span>.<span class="pl-c1">start</span>));<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>,d<span class="pl-k">=</span>f[<span class="pl-smi">a</span>.<span class="pl-smi">group</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">h</span>.<span class="pl-c1">append</span>(d);i<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>;<span class="pl-k">return</span>{group<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">group</span>,start<span class="pl-k">:</span>b,end<span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>}});<span class="pl-smi">h</span>.<span class="pl-c1">append</span>(<span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(i));<span class="pl-k">return</span>{text<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-c1">toString</span>(),tabstops<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">sortBy</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>)}},<span class="pl-en">processText</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({},b,a),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">stringBuilder</span>(),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(c),j,h;j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">next</span>();)<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">f</span>.<span class="pl-en">eol</span>())<span class="pl-smi">g</span>.<span class="pl-c1">append</span>(<span class="pl-smi">a</span>.<span class="pl-en">escape</span>(<span class="pl-smi">f</span>.<span class="pl-c1">next</span>()));<span class="pl-k">else</span>{h<span class="pl-k">=</span>j;<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>))h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">tabstop</span>({start<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,group<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">current</span>().<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>),token<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">current</span>()});<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\{</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>_<span class="pl-cce">\-</span>][<span class="pl-c1">\w</span><span class="pl-cce">\-</span>]</span><span class="pl-k">*</span>)<span class="pl-cce">\}</span><span class="pl-pds">/</span></span>))h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">variable</span>({start<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,name<span class="pl-k">:</span>j[<span class="pl-c1">1</span>],token<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">current</span>()});<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\{</span>(<span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)(:<span class="pl-c1">.</span><span class="pl-k">+?</span>)<span class="pl-k">?</span><span class="pl-cce">\}</span><span class="pl-pds">/</span></span>,<span class="pl-k">!</span><span class="pl-c1">1</span>)){<span class="pl-smi">f</span>.<span class="pl-en">skipToPair</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);h<span class="pl-k">=</span>{start<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,group<span class="pl-k">:</span>j[<span class="pl-c1">1</span>],token<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">current</span>()};<span class="pl-k">if</span>(j<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">token</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">h</span>.<span class="pl-smi">group</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">2</span>,<span class="pl-smi">h</span>.<span class="pl-smi">token</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-smi">h</span>.<span class="pl-smi">placeholder</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">1</span>);h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">tabstop</span>(h)}<span class="pl-smi">g</span>.<span class="pl-c1">append</span>(h)}<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-c1">toString</span>()},<span class="pl-en">upgrade</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span>{<span class="pl-en">tabstop</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(<span class="pl-smi">b</span>.<span class="pl-smi">group</span>);</td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">&gt;</span>g<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>c);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">placeholder</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>${<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c<span class="pl-k">+</span>a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">placeholder</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>${<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(c<span class="pl-k">+</span>a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>}};<span class="pl-smi">d</span>.<span class="pl-en">each</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>start<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>end<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>content<span class="pl-pds">&quot;</span></span>],<span class="pl-k">function</span>(<span class="pl-smi">a</span>){b[a]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">processText</span>(b[a],f)},<span class="pl-c1">this</span>);<span class="pl-k">return</span> g},<span class="pl-en">variablesResolver</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span>{},g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">f</span>,<span class="pl-smi">j</span>){<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>child<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> f;<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getCaretPlaceholder</span>();<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">attribute</span>(j);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(i)<span class="pl-k">&amp;&amp;</span>i<span class="pl-k">!==</span>f)<span class="pl-k">return</span> i;<span class="pl-k">if</span>(i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">getVariable</span>(j))<span class="pl-k">return</span> i;a[j]<span class="pl-k">||</span>(a[j]<span class="pl-k">=</span>h<span class="pl-k">++</span>);<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>${<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[j]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>j<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>}},<span class="pl-en">resetTabstopIndex</span><span class="pl-k">:</span><span class="pl-k">function</span>(){i<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">=</span><span class="pl-c1">100</span>}}});</td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>{},i<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-c1">null</span>,c<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span>{<span class="pl-en">define</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>{},e[a]<span class="pl-k">=</span>{value<span class="pl-k">:</span>b,description<span class="pl-k">:</span>c});<span class="pl-smi">d</span>.<span class="pl-en">each</span>(e,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){i[b]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isObject</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-c1">keys</span>(a).<span class="pl-c1">length</span><span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">?</span>a<span class="pl-k">:</span>{value<span class="pl-k">:</span>a}})},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>a;<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>{},c[a]<span class="pl-k">=</span>b);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(b <span class="pl-k">in</span> i))<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&#39;</span>Property &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot; is not defined. You should define it first with `define` method of current module<span class="pl-pds">&#39;</span></span>;<span class="pl-k">if</span>(a<span class="pl-k">!==</span>i[b].<span class="pl-c1">value</span>){<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> i[b].<span class="pl-c1">value</span>){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">a;<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(c)<span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">toLowerCase</span>(),a<span class="pl-k">=</span>c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>yes<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-k">!!</span>c;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-c1">10</span>)<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:a<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}h[b]<span class="pl-k">=</span>a}<span class="pl-k">else</span> b <span class="pl-k">in</span> h<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> h[b]})},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a <span class="pl-k">in</span> h)<span class="pl-k">return</span> h[a];<span class="pl-k">if</span>(a <span class="pl-k">in</span> i)<span class="pl-k">return</span> i[a].<span class="pl-c1">value</span>},<span class="pl-en">getArray</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">||</span>a<span class="pl-k">===</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">trim</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span>a},<span class="pl-en">getDict</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{};<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-en">getArray</span>(a),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);b[a[<span class="pl-c1">0</span>]]<span class="pl-k">=</span>a[<span class="pl-c1">1</span>]});<span class="pl-k">return</span> b},</td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line"><span class="pl-en">description</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a <span class="pl-k">in</span> i<span class="pl-k">?</span>i[a].<span class="pl-c1">description</span><span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">||</span>(a<span class="pl-k">=</span>[a]);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a <span class="pl-k">in</span> h<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> h[a];a <span class="pl-k">in</span> i<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> i[a]})},<span class="pl-en">list</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">d</span>.<span class="pl-c1">keys</span>(i).<span class="pl-c1">sort</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>{name<span class="pl-k">:</span>a,value<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a),type<span class="pl-k">:</span><span class="pl-k">typeof</span> i[a].<span class="pl-c1">value</span>,description<span class="pl-k">:</span>i[a].<span class="pl-c1">description</span>}},<span class="pl-c1">this</span>)},<span class="pl-en">load</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">each</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">set</span>(b,a)},<span class="pl-c1">this</span>)},<span class="pl-en">exportModified</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">clone</span>(h)},<span class="pl-en">reset</span><span class="pl-k">:</span><span class="pl-k">function</span>(){h<span class="pl-k">=</span>{}},<span class="pl-en">_startTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(){b<span class="pl-k">=</span>i;c<span class="pl-k">=</span>h;i<span class="pl-k">=</span>{};h<span class="pl-k">=</span>{}},<span class="pl-en">_stopTest</span><span class="pl-k">:</span><span class="pl-k">function</span>(){i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line">b;h<span class="pl-k">=</span>c}}});</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-k">!</span>b<span class="pl-k">?</span>[]<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(b)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">split</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-cce">\|</span>,]</span><span class="pl-pds">/</span>g</span>)<span class="pl-k">:</span>b}<span class="pl-k">var</span> i<span class="pl-k">=</span>{};<span class="pl-k">return</span>{<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){i[b]<span class="pl-k">=</span>c},<span class="pl-en">apply</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(a);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-en">h</span>(c),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){(c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">trim</span>(<span class="pl-smi">c</span>.<span class="pl-c1">toLowerCase</span>()))<span class="pl-k">&amp;&amp;</span>c <span class="pl-k">in</span> i<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>i[c](b,a))});<span class="pl-k">return</span> b},<span class="pl-en">composeList</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(c);b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">c</span>.<span class="pl-smi">filters</span><span class="pl-k">||</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">findItem</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">extraFilters</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-en">h</span>(<span class="pl-smi">c</span>.<span class="pl-smi">extraFilters</span>)));a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">concat</span>(<span class="pl-en">h</span>(a)));<span class="pl-k">if</span>(<span class="pl-k">!</span>b<span class="pl-k">||!</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> b},</td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line"><span class="pl-en">extractFromAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\|</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\|\-</span>]</span><span class="pl-k">+</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){c<span class="pl-k">=</span>b;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span>[b,<span class="pl-en">h</span>(c)]}}});</td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>elements<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>{data<span class="pl-k">:</span>a}}<span class="pl-k">var</span> i<span class="pl-k">=</span>{},b<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\-</span>]</span><span class="pl-k">+</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[&#39;&quot;]</span>)(<span class="pl-c1">.</span><span class="pl-k">*?</span>)<span class="pl-k">\2</span><span class="pl-pds">/</span>g</span>,c<span class="pl-k">=</span>{<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>;i[a]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(c,<span class="pl-c1">arguments</span>);<span class="pl-k">if</span>(d)<span class="pl-smi">d</span>.<span class="pl-c1">type</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> d}},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> i[a]},<span class="pl-en">create</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[].<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(<span class="pl-c1">arguments</span>,<span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">return</span> c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,b)<span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">is</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">===</span>b}};<span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>element<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>{name<span class="pl-k">:</span>a,is_empty<span class="pl-k">:</span><span class="pl-k">!!</span>f};<span class="pl-k">if</span>(c)<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-c1">attributes</span><span class="pl-k">=</span>[],<span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(c))<span class="pl-smi">e</span>.<span class="pl-c1">attributes</span><span class="pl-k">=</span>c;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(c))<span class="pl-k">for</span>(;a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">exec</span>(c);)<span class="pl-smi">e</span>.<span class="pl-c1">attributes</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>a[<span class="pl-c1">1</span>],value<span class="pl-k">:</span>a[<span class="pl-c1">3</span>]});<span class="pl-k">else</span> <span class="pl-smi">d</span>.<span class="pl-en">each</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">e</span>.<span class="pl-c1">attributes</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>b,value<span class="pl-k">:</span>a})});<span class="pl-k">return</span> e});<span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>snippet<span class="pl-pds">&quot;</span></span>,h);<span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>reference<span class="pl-pds">&quot;</span></span>,h);<span class="pl-smi">c</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>empty<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">return</span>{}});<span class="pl-k">return</span> c});</td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">function</span> <span class="pl-en">i</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-c1">options</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({offset<span class="pl-k">:</span><span class="pl-c1">0</span>},b);<span class="pl-c1">this</span>.<span class="pl-c1">source</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_children</span><span class="pl-k">=</span>[];<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span><span class="pl-k">=</span>{name<span class="pl-k">:</span><span class="pl-c1">0</span>};<span class="pl-c1">this</span>.<span class="pl-smi">initialize</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">this</span>,<span class="pl-c1">arguments</span>)}function b(a,b,c){this.parent=a;this._name=b.value;this._value=c?c.value:&quot;&quot;;this._positions={name:b.start,value:c?c.start:-1};this.initialize.apply(this,arguments)}var c=e(&quot;range&quot;).create;i.extend=h.extend;i.prototype={initialize:function(){},_updateSource:function(a,b,f){var j=c(b,d.isUndefined(f)?0:f-b),h=a.length-</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">j</span>.<span class="pl-c1">length</span>(),<span class="pl-en">i</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">each</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){b<span class="pl-k">&gt;=</span><span class="pl-smi">j</span>.<span class="pl-smi">end</span><span class="pl-k">&amp;&amp;</span>(a[c]<span class="pl-k">+=</span>h)})};<span class="pl-en">i</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">i</span>(<span class="pl-smi">a</span>.<span class="pl-smi">_positions</span>)});<span class="pl-c1">this</span>.<span class="pl-c1">source</span><span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">replaceSubstring</span>(<span class="pl-c1">this</span>.<span class="pl-c1">source</span>,a,j)},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">b</span>(a,c);<span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">push</span>(d);<span class="pl-k">return</span> d},<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(a)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">list</span>()[a]<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">name</span>()<span class="pl-k">===</span>a})<span class="pl-k">:</span>a},<span class="pl-en">getAll</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">||</span>(a<span class="pl-k">=</span>[a]);<span class="pl-k">var</span> b<span class="pl-k">=</span>[],c<span class="pl-k">=</span>[];<span class="pl-smi">d</span>.<span class="pl-en">each</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(a)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a)<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isNumber</span>(a)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-c1">push</span>(a)});<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">filter</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">include</span>(c,e)<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">name</span>())})},<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">if</span>(e)<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-c1">value</span>(b);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(b))<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">add</span>(a,b,c)},<span class="pl-en">values</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-c1">getAll</span>(a),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">value</span>()})},<span class="pl-en">remove</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a))<span class="pl-c1">this</span>.<span class="pl-en">_updateSource</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-smi">a</span>.<span class="pl-en">fullRange</span>()),<span class="pl-c1">this</span>.<span class="pl-smi">_children</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_children</span>,a)},<span class="pl-en">list</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_children</span>},<span class="pl-en">indexOf</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a))},</td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-en">name</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">!==</span>(a<span class="pl-k">=</span><span class="pl-c1">String</span>(a)))<span class="pl-c1">this</span>.<span class="pl-en">_updateSource</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_name</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_name</span>},<span class="pl-en">nameRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span><span class="pl-k">+</span>(a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span><span class="pl-k">:</span><span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-c1">name</span>())},<span class="pl-en">range</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span><span class="pl-k">:</span><span class="pl-c1">0</span>,<span class="pl-c1">this</span>.<span class="pl-c1">toString</span>())},<span class="pl-en">itemFromPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">range</span>(b).<span class="pl-en">inside</span>(a)})},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">source</span>}};<span class="pl-smi">b</span>.<span class="pl-smi">extend</span><span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">extend</span>;<span class="pl-smi">b</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line">{<span class="pl-en">initialize</span><span class="pl-k">:</span><span class="pl-k">function</span>(){},<span class="pl-en">_pos</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">+</span>(b<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span><span class="pl-k">:</span><span class="pl-c1">0</span>)},<span class="pl-en">value</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_value</span><span class="pl-k">!==</span>(a<span class="pl-k">=</span><span class="pl-c1">String</span>(a)))<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-en">_updateSource</span>(a,<span class="pl-c1">this</span>.<span class="pl-en">valueRange</span>()),<span class="pl-c1">this</span>.<span class="pl-smi">_value</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_value</span>},<span class="pl-en">name</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">!==</span>(a<span class="pl-k">=</span><span class="pl-c1">String</span>(a)))<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-en">_updateSource</span>(a,<span class="pl-c1">this</span>.<span class="pl-en">nameRange</span>()),<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_name</span>},<span class="pl-en">namePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_pos</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span>,a)},<span class="pl-en">valuePosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">_pos</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">value</span>,</td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line">a)},<span class="pl-en">range</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-en">namePosition</span>(a),<span class="pl-c1">this</span>.<span class="pl-c1">toString</span>())},<span class="pl-en">fullRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">range</span>(a)},<span class="pl-en">nameRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-en">namePosition</span>(a),<span class="pl-c1">this</span>.<span class="pl-c1">name</span>())},<span class="pl-en">valueRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-en">valuePosition</span>(a),<span class="pl-c1">this</span>.<span class="pl-c1">value</span>())},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">name</span>()<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>()},<span class="pl-en">valueOf</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">toString</span>()}};<span class="pl-k">return</span>{EditContainer<span class="pl-k">:</span>i,EditElement<span class="pl-k">:</span>b,<span class="pl-en">createToken</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span>{start<span class="pl-k">:</span>a<span class="pl-k">||</span><span class="pl-c1">0</span>,value<span class="pl-k">:</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,type<span class="pl-k">:</span>c};<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> a}}});</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(a,b)}function i(a,b){var b=b||g|f,c=[&quot;white&quot;,&quot;line&quot;];if((b&amp;f)==f)for(;a.length&amp;&amp;d.include(c,d.last(a).type);)a.pop();if((b&amp;g)==g)for(;a.length&amp;&amp;d.include(c,a[0].type);)a.shift();return a}function b(a){var b=[&quot;white&quot;,&quot;line&quot;,&quot;:&quot;],c=[],e,j;a.nextUntil(function(){return!d.include(b,this.itemNext().type)});for(j=a.current().end;e=a.next();){if(e.type==&quot;}&quot;||e.type==&quot;;&quot;)return i(c,g|(e.type==&quot;}&quot;?f:0)),c.length?(j=c[0].start,</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(c).<span class="pl-smi">end</span>)<span class="pl-k">:</span>a<span class="pl-k">=</span>j,<span class="pl-en">h</span>(j,a<span class="pl-k">-</span>j);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(e)}<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>)<span class="pl-k">return</span> <span class="pl-en">h</span>(c[<span class="pl-c1">0</span>].<span class="pl-c1">start</span>,<span class="pl-smi">d</span>.<span class="pl-en">last</span>(c).<span class="pl-smi">end</span><span class="pl-k">-</span>c[<span class="pl-c1">0</span>].<span class="pl-c1">start</span>)}function c(a){var b=e(&quot;stringStream&quot;).create(a),c=[],f=/[\s\u00a0,]/,g=function(){b.next();c.push(h(b.start,b.current()));b.start=b.pos};b.eatSpace();for(b.start=b.pos;a=b.next();)if(a==&#39;&quot;&#39;||a==&quot;&#39;&quot;){b.next();if(!b.skipTo(a))break;g()}else if(a==&quot;(&quot;){b.backUp(1);if(!b.skipToPair(&quot;(&quot;,&quot;)&quot;))break;b.backUp(1);g()}else if(f.test(a))c.push(h(b.start,b.current().length-1)),b.eatWhile(f),b.start=b.pos;g();return d.chain(c).filter(function(a){return!!a.length()}).uniq(!1,</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()}).<span class="pl-c1">value</span>()}<span class="pl-k">var</span> a<span class="pl-k">=</span>{styleBefore<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\t</span><span class="pl-pds">&quot;</span></span>,styleSeparator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span>,offset<span class="pl-k">:</span><span class="pl-c1">0</span>},g<span class="pl-k">=</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-c1">2</span>,j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">EditContainer</span>.<span class="pl-en">extend</span>({<span class="pl-en">initialize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-en">defaults</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>,a);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tokenIterator<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssParser<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">parse</span>(c)),j,r<span class="pl-k">=</span>[],q;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">position</span>();q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">next</span>();){<span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)<span class="pl-k">break</span>;<span class="pl-smi">r</span>.<span class="pl-c1">push</span>(q)}<span class="pl-en">i</span>(r);<span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(j<span class="pl-k">=</span>r[<span class="pl-c1">0</span>].<span class="pl-c1">start</span>,r<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(r).<span class="pl-smi">end</span>)<span class="pl-k">:</span>r<span class="pl-k">=</span>j;j<span class="pl-k">=</span><span class="pl-en">h</span>(j,r<span class="pl-k">-</span>j);<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">start</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">substring</span>(c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-c1">current</span>()<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">current</span>().<span class="pl-c1">type</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Invalid CSS rule<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">contentStart</span><span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">position</span>()<span class="pl-k">+</span><span class="pl-c1">1</span>;j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">next</span>();){<span class="pl-k">if</span>(r<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>identifier<span class="pl-pds">&quot;</span></span>)a<span class="pl-k">:</span>{r<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">tokens</span>;q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">_i</span><span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span>;q<span class="pl-k">&lt;</span>u;q<span class="pl-k">++</span>){<span class="pl-k">if</span>(r[q].<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span> a}<span class="pl-k">if</span>(r[q].<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>identifier<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>r[q].<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>line<span class="pl-pds">&quot;</span></span>){r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span> a}}r<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>}r<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-en">h</span>(j),r<span class="pl-k">=</span><span class="pl-en">b</span>(g),q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">current</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">current</span>().<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">h</span>(<span class="pl-smi">g</span>.<span class="pl-c1">current</span>())<span class="pl-k">:</span><span class="pl-en">h</span>(<span class="pl-smi">r</span>.<span class="pl-smi">end</span>,<span class="pl-c1">0</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">l</span>(<span class="pl-c1">this</span>,<span class="pl-smi">f</span>.<span class="pl-en">createToken</span>(<span class="pl-smi">j</span>.<span class="pl-c1">start</span>,<span class="pl-smi">j</span>.<span class="pl-c1">substring</span>(c)),<span class="pl-smi">f</span>.<span class="pl-en">createToken</span>(<span class="pl-smi">r</span>.<span class="pl-c1">start</span>,<span class="pl-smi">r</span>.<span class="pl-c1">substring</span>(c)),<span class="pl-smi">f</span>.<span class="pl-en">createToken</span>(<span class="pl-smi">q</span>.<span class="pl-c1">start</span>,<span class="pl-smi">q</span>.<span class="pl-c1">substring</span>(c)))))}<span class="pl-c1">this</span>.<span class="pl-en">_saveStyle</span>()},<span class="pl-en">_saveStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">contentStart</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">source</span>,c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">f</span>){<span class="pl-smi">f</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(a,<span class="pl-smi">f</span>.<span class="pl-en">namePosition</span>());<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">splitByLines</span>(<span class="pl-smi">f</span>.<span class="pl-smi">styleBefore</span>);<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-smi">f</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(e);<span class="pl-smi">f</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">f</span>.<span class="pl-en">nameRange</span>().<span class="pl-smi">end</span>,<span class="pl-smi">f</span>.<span class="pl-en">valuePosition</span>());<span class="pl-smi">f</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>(<span class="pl-smi">f</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>*/<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">f</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">styleSeparator</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\/\*</span><span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-cce">\*\/</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>().<span class="pl-smi">end</span>})},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">list</span>(),g<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">contentStart</span>,j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pick</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleBefore<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>styleSeparator<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(c))c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span>f[c];<span class="pl-k">if</span>(i)g<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">fullRange</span>().<span class="pl-c1">start</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(i<span class="pl-k">=</span>f[c<span class="pl-k">-</span><span class="pl-c1">1</span>])<span class="pl-smi">i</span>.<span class="pl-en">end</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">range</span>().<span class="pl-smi">end</span>;i<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pick</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span>styleBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleSeparator<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">createToken</span>(g<span class="pl-k">+</span><span class="pl-smi">j</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">length</span>,a);b<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">createToken</span>(<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">+</span><span class="pl-smi">j</span>.<span class="pl-smi">styleSeparator</span>.<span class="pl-c1">length</span>,b);h<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">l</span>(<span class="pl-c1">this</span>,a,b,<span class="pl-smi">h</span>.<span class="pl-en">createToken</span>(<span class="pl-smi">b</span>.<span class="pl-smi">end</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>));<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(h,j);<span class="pl-c1">this</span>.<span class="pl-en">_updateSource</span>(<span class="pl-smi">h</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-c1">toString</span>(),g);<span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">splice</span>(c,<span class="pl-c1">0</span>,h);<span class="pl-k">return</span> h}}),l<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">EditElement</span>.<span class="pl-en">extend</span>({<span class="pl-en">initialize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-c1">this</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">styleBefore</span>;<span class="pl-c1">this</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">styleSeparator</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_end</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>;<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">start</span>},<span class="pl-en">valueParts</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">c</span>(<span class="pl-c1">this</span>.<span class="pl-c1">value</span>());<span class="pl-k">if</span>(a){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">valuePosition</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">shift</span>(f)})}<span class="pl-k">return</span> b},<span class="pl-en">end</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_end</span><span class="pl-k">!==</span>a)<span class="pl-c1">this</span>.<span class="pl-c1">parent</span>.<span class="pl-en">_updateSource</span>(a,<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">end</span>,<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-smi">end</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">_end</span>.<span class="pl-c1">length</span>),<span class="pl-c1">this</span>.<span class="pl-smi">_end</span><span class="pl-k">=</span>a;<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">_end</span>},<span class="pl-en">fullRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">range</span>(a);<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">-=</span><span class="pl-c1">this</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> a},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">name</span>()<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>()<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-en">end</span>()}});<span class="pl-k">return</span>{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">j</span>(a,b)},<span class="pl-en">parseFromPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">extractRule</span>(a,b,c);<span class="pl-k">return</span><span class="pl-k">!</span>c<span class="pl-k">||!</span><span class="pl-smi">c</span>.<span class="pl-en">inside</span>(b)<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(a),{offset<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>})},<span class="pl-en">extractRule</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,j;b<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;){j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b);<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>){g<span class="pl-k">=</span>b;<span class="pl-k">break</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span>c){b<span class="pl-k">++</span>;<span class="pl-k">break</span>}b<span class="pl-k">--</span>}<span class="pl-k">for</span>(;b<span class="pl-k">&lt;</span>f;){j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b);<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)g<span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>){g<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(g,b<span class="pl-k">+</span><span class="pl-c1">1</span>));<span class="pl-k">break</span>}b<span class="pl-k">++</span>}<span class="pl-k">if</span>(d){b<span class="pl-k">=</span>g<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;){j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{}/<span class="pl-cce">\\</span>&lt;&gt;<span class="pl-cce">\n\r</span><span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(j)<span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">break</span>;b<span class="pl-k">--</span>}c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>,g).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">\s\n\r</span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span>m</span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(g<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>,<span class="pl-smi">d</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>)}<span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">baseName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\-</span><span class="pl-c1">\w</span><span class="pl-k">+</span><span class="pl-cce">\-</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)},findParts<span class="pl-k">:</span>c}});</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlEditTree<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>{styleBefore<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,styleSeparator<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span>,styleQuote<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,offset<span class="pl-k">:</span><span class="pl-c1">0</span>},i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\:\-</span>]</span><span class="pl-k">+</span>)((?:<span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-c1">\-:</span>]</span><span class="pl-k">+</span>(?:<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(?:(?:&quot;<span class="pl-c1">[<span class="pl-k">^</span>&quot;]</span><span class="pl-k">*</span>&quot;)<span class="pl-k">|</span>(?:&#39;<span class="pl-c1">[<span class="pl-k">^</span>&#39;]</span><span class="pl-k">*</span>&#39;)<span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span>&gt;<span class="pl-c1">\s</span>]</span><span class="pl-k">+</span>))<span class="pl-k">?</span>)<span class="pl-k">*</span>)<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\/</span><span class="pl-k">?</span>)&gt;<span class="pl-pds">/</span>m</span>,b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">EditContainer</span>.<span class="pl-en">extend</span>({<span class="pl-en">initialize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">defaults</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>,h);<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">name</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlParser<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">parse</span>(a),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">create</span>(d).<span class="pl-c1">substring</span>(a);<span class="pl-k">switch</span>(<span class="pl-smi">d</span>.<span class="pl-c1">type</span>){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>&lt;<span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\/</span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span>))<span class="pl-c1">this</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>);</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>attribute<span class="pl-pds">&quot;</span></span>:b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>,b));b<span class="pl-k">=</span>d;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>,b,d)),b<span class="pl-k">=</span><span class="pl-c1">null</span>}},<span class="pl-c1">this</span>);b<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">push</span>(<span class="pl-k">new</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>,b));<span class="pl-c1">this</span>.<span class="pl-en">_saveStyle</span>()},<span class="pl-en">_saveStyle</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">nameRange</span>().<span class="pl-smi">end</span>,b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">source</span>;<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-c1">this</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">c</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(a,<span class="pl-smi">c</span>.<span class="pl-en">namePosition</span>());<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-en">valuePosition</span>()<span class="pl-k">!==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-smi">c</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">c</span>.<span class="pl-en">namePosition</span>()<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span>().<span class="pl-c1">length</span>,<span class="pl-smi">c</span>.<span class="pl-en">valuePosition</span>()<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">styleQuote</span>.<span class="pl-c1">length</span>);a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">range</span>().<span class="pl-smi">end</span>})},<span class="pl-en">add</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">f</span>){<span class="pl-k">var</span> j<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-en">list</span>(),h<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">nameRange</span>().<span class="pl-smi">end</span>,i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pick</span>(<span class="pl-c1">this</span>.<span class="pl-c1">options</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleSeparator<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleQuote<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(f))f<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>;<span class="pl-k">var</span> o<span class="pl-k">=</span>j[f];<span class="pl-k">if</span>(o)h<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">fullRange</span>().<span class="pl-c1">start</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(o<span class="pl-k">=</span>j[f<span class="pl-k">-</span><span class="pl-c1">1</span>])h<span class="pl-k">=</span><span class="pl-smi">o</span>.<span class="pl-en">range</span>().<span class="pl-smi">end</span>;o<span class="pl-k">&amp;&amp;</span>(m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pick</span>(o,<span class="pl-s"><span class="pl-pds">&quot;</span>styleBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleSeparator<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styleQuote<span class="pl-pds">&quot;</span></span>));b<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-smi">styleQuote</span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">styleQuote</span>;a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">c</span>(<span class="pl-c1">this</span>,<span class="pl-smi">i</span>.<span class="pl-en">createToken</span>(h<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">length</span>,a),<span class="pl-smi">i</span>.<span class="pl-en">createToken</span>(h<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">styleSeparator</span>.<span class="pl-c1">length</span>,b));<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(a,m);<span class="pl-c1">this</span>.<span class="pl-en">_updateSource</span>(<span class="pl-smi">a</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">toString</span>(),h);</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">_children</span>.<span class="pl-c1">splice</span>(f,<span class="pl-c1">0</span>,a);<span class="pl-k">return</span> a}}),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editTree<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">EditElement</span>.<span class="pl-en">extend</span>({<span class="pl-en">initialize</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">this</span>.<span class="pl-smi">styleBefore</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">styleBefore</span>;<span class="pl-c1">this</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">styleSeparator</span>;b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">styleQuote</span>;<span class="pl-k">if</span>(c)b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">value</span>,a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>),a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">||</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>)<span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-c1">this</span>.<span class="pl-smi">styleQuote</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">_value</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">_positions</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>},<span class="pl-en">fullRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">range</span>(a);<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">-=</span><span class="pl-c1">this</span>.<span class="pl-smi">styleBefore</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span> a},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">name</span>()<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">styleQuote</span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">value</span>()<span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-smi">styleQuote</span>}});<span class="pl-k">return</span>{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">b</span>(a,c)},<span class="pl-en">parseFromPosition</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">extractTag</span>(a,b,c);<span class="pl-k">return</span><span class="pl-k">!</span>c<span class="pl-k">||!</span><span class="pl-smi">c</span>.<span class="pl-en">inside</span>(b)<span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-c1">parse</span>(<span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(a),{offset<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>})},<span class="pl-en">extractTag</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,h,n<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-c1">2E3</span>,d),o<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">p</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(b,m).<span class="pl-c1">match</span>(i)))<span class="pl-k">return</span> <span class="pl-smi">n</span>.<span class="pl-en">create</span>(b,c[<span class="pl-c1">0</span>])};<span class="pl-k">for</span>(h<span class="pl-k">=</span>b;h<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;h<span class="pl-k">--</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span><span class="pl-en">p</span>(h))<span class="pl-k">break</span>;<span class="pl-k">if</span>(o<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">o</span>.<span class="pl-en">inside</span>(b)<span class="pl-k">||</span>c))<span class="pl-k">return</span> o;<span class="pl-k">if</span>(<span class="pl-k">!</span>o<span class="pl-k">&amp;&amp;</span>c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;</td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(h<span class="pl-k">=</span>b;h<span class="pl-k">&lt;</span>d;h<span class="pl-k">++</span>)<span class="pl-k">if</span>(o<span class="pl-k">=</span><span class="pl-en">p</span>(h))<span class="pl-k">return</span> o}}});</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expandAbbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>handlerList<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(),i<span class="pl-k">=</span><span class="pl-c1">null</span>,b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">toArray</span>(<span class="pl-c1">arguments</span>),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(b,a,g);f[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-smi">syntax</span>;f[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">profile</span>;<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">exec</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,f)});<span class="pl-smi">b</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation_with_tab<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">getSelection</span>(),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(f)<span class="pl-k">return</span> d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getSelectionRange</span>()),f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">padString</span>(f,j),<span class="pl-smi">c</span>.<span class="pl-en">replaceContent</span>(j<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>${0}<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>()),</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line">j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>(),<span class="pl-smi">a</span>.<span class="pl-c1">length</span>()),<span class="pl-smi">c</span>.<span class="pl-en">replaceContent</span>(f,<span class="pl-smi">j</span>.<span class="pl-c1">start</span>,<span class="pl-smi">j</span>.<span class="pl-smi">end</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>),<span class="pl-smi">c</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">j</span>.<span class="pl-c1">start</span>,<span class="pl-smi">j</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-en">run</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation<span class="pl-pds">&quot;</span></span>,c,a,d)<span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-en">replaceContent</span>(j,<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>());<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},{hidden<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getSelectionRange</span>().<span class="pl-smi">end</span>,j<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">findAbbreviation</span>(b);<span class="pl-k">return</span> j<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">emmet</span>.<span class="pl-en">expandAbbreviation</span>(j,a,d,<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">captureContext</span>(b)))<span class="pl-k">?</span>(<span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(a,f<span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>,f),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{order<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>});<span class="pl-k">return</span> i<span class="pl-k">=</span>{<span class="pl-en">addHandler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(b,a)},<span class="pl-en">removeHandler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">h</span>.<span class="pl-c1">remove</span>(b,</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line">options)},<span class="pl-en">findAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">b</span>.<span class="pl-en">getSelectionRange</span>()),d<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">b</span>.<span class="pl-en">getContent</span>());<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>())<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(d);b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCurrentLineRange</span>();<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">extractAbbreviation</span>(<span class="pl-smi">d</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>,<span class="pl-smi">a</span>.<span class="pl-c1">start</span>))}}});</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wrapWithAbbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wrap_with_abbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">h</span>,<span class="pl-smi">i</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(h,b,c),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span>i<span class="pl-k">||</span><span class="pl-smi">h</span>.<span class="pl-c1">prompt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Enter abbreviation<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>i)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-c1">String</span>(i),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">h</span>.<span class="pl-en">getSelectionRange</span>());<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>()){g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>,<span class="pl-smi">g</span>.<span class="pl-c1">start</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>g)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">narrowToNonSpace</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>,<span class="pl-smi">g</span>.<span class="pl-smi">range</span>)}a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">escapeText</span>(<span class="pl-smi">g</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>));<span class="pl-k">return</span>(i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">wrap</span>(i,<span class="pl-smi">c</span>.<span class="pl-en">unindent</span>(h,a),<span class="pl-smi">b</span>.<span class="pl-smi">syntax</span>,<span class="pl-smi">b</span>.<span class="pl-c1">profile</span>,</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">captureContext</span>(h)))<span class="pl-k">?</span>(<span class="pl-smi">h</span>.<span class="pl-en">replaceContent</span>(i,<span class="pl-smi">g</span>.<span class="pl-c1">start</span>,<span class="pl-smi">g</span>.<span class="pl-smi">end</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">return</span> d<span class="pl-k">=</span>{<span class="pl-en">wrap</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">i</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-smi">emmet</span>.<span class="pl-en">defaultSyntax</span>(),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(c,b);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>).<span class="pl-en">resetTabstopIndex</span>();d<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">extractFromAbbreviation</span>(d);<span class="pl-k">return</span>(i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">parse</span>(d[<span class="pl-c1">0</span>],{syntax<span class="pl-k">:</span>b,pastedContent<span class="pl-k">:</span>i,contextNode<span class="pl-k">:</span>a}))<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">composeList</span>(b,c,d[<span class="pl-c1">1</span>]),<span class="pl-smi">g</span>.<span class="pl-c1">apply</span>(i,b,c),<span class="pl-smi">f</span>.<span class="pl-en">replaceVariables</span>(<span class="pl-smi">i</span>.<span class="pl-c1">toString</span>()))<span class="pl-k">:</span><span class="pl-c1">null</span>}}});</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>a<span class="pl-k">-</span>(<span class="pl-smi">b</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span><span class="pl-k">||</span><span class="pl-c1">0</span>),f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">\s\n\r</span>]</span><span class="pl-pds">/</span></span>;<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-smi">b</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">range</span>().<span class="pl-smi">end</span><span class="pl-k">===</span>e<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-c1">source</span>.<span class="pl-c1">charAt</span>(e))<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">range</span>().<span class="pl-en">inside</span>(e)})}function i(b,a,d,f){for(var j=-1,h=-1;a--;)if(b.substr(a,d.length)==d){j=a;break}if(j!=-1){a=j;for(d=b.length;d&gt;=a++;)if(b.substr(a,f.length)==f){h=a+f.length;break}}return j!=-1&amp;&amp;h!=-1?e(&quot;range&quot;).create(j,h-j):null}function b(b,a,d,f){function j(b){return b.replace(RegExp(&quot;^&quot;+p.escapeForRegexp(a)+&quot;\\s*&quot;),</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){m<span class="pl-k">-=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">replace</span>(<span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>s*<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-en">escapeForRegexp</span>(d)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">outputInfo</span>(b).<span class="pl-c1">content</span>,m<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCaretPos</span>(),o<span class="pl-k">=</span><span class="pl-c1">null</span>,p<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>);(o<span class="pl-k">=</span><span class="pl-en">i</span>(n,m,a,d))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">o</span>.<span class="pl-en">overlap</span>(f)<span class="pl-k">?</span>(f<span class="pl-k">=</span>o,o<span class="pl-k">=</span><span class="pl-en">j</span>(<span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(n)))<span class="pl-k">:</span>(o<span class="pl-k">=</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(n).<span class="pl-c1">replace</span>(<span class="pl-c1">RegExp</span>(<span class="pl-smi">p</span>.<span class="pl-en">escapeForRegexp</span>(a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>s*|<span class="pl-cce">\\</span>s*<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">p</span>.<span class="pl-en">escapeForRegexp</span>(d),<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>d,m<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> o<span class="pl-k">!==</span><span class="pl-c1">null</span><span class="pl-k">?</span>(o<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-en">escapeText</span>(o),<span class="pl-smi">b</span>.<span class="pl-en">setCaretPos</span>(<span class="pl-smi">f</span>.<span class="pl-c1">start</span>),<span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">h</span>.<span class="pl-en">unindent</span>(b,o),<span class="pl-smi">f</span>.<span class="pl-c1">start</span>,<span class="pl-smi">f</span>.<span class="pl-smi">end</span>),<span class="pl-smi">b</span>.<span class="pl-en">setCaretPos</span>(m),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>toggle_comment<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">syntax</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>(),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>,d);<span class="pl-k">if</span>(f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-smi">open</span>.<span class="pl-smi">range</span>.<span class="pl-en">inside</span>(d))<span class="pl-smi">a</span>.<span class="pl-smi">syntax</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">syntax</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>){f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getSelectionRange</span>());a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>()<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>).<span class="pl-en">parseFromPosition</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>,<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>())))f<span class="pl-k">=</span>(f<span class="pl-k">=</span><span class="pl-en">h</span>(d,<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>()))<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">d</span>.<span class="pl-en">nameRange</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-c1">start</span>,<span class="pl-smi">d</span>.<span class="pl-c1">source</span>);<span class="pl-smi">f</span>.<span class="pl-c1">length</span>()<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getCurrentLineRange</span>()),<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">narrowToNonSpace</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>,</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line">f));c<span class="pl-k">=</span><span class="pl-en">b</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>/*<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>*/<span class="pl-pds">&quot;</span></span>,f)}<span class="pl-k">else</span>{a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getSelectionRange</span>());d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>()<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(<span class="pl-smi">d</span>.<span class="pl-c1">content</span>,<span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>())))a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">outerRange</span>;c<span class="pl-k">=</span><span class="pl-en">b</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>,a)}<span class="pl-k">return</span> c})});</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>b;c<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(c);<span class="pl-k">if</span>(d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">break</span>;c<span class="pl-k">--</span>}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(c,b)}<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span>e<span class="pl-k">||</span><span class="pl-c1">1</span>,b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>()<span class="pl-k">+</span>(b<span class="pl-k">||</span><span class="pl-c1">0</span>),a<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">1</span>,f<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>;b<span class="pl-k">&lt;=</span>d<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;){b<span class="pl-k">+=</span>e;<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b),l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>),n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">switch</span>(j){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">==</span>j<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>:l<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\r</span><span class="pl-pds">&quot;</span></span>:<span class="pl-smi">f</span>.<span class="pl-c1">test</span>(<span class="pl-en">c</span>(b<span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>b)}<span class="pl-k">if</span>(g<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">break</span>}<span class="pl-k">return</span> g}e<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">e</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>prev_edit_point<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">e</span>.<span class="pl-en">getCaretPos</span>(),b<span class="pl-k">=</span><span class="pl-en">d</span>(e,<span class="pl-k">-</span><span class="pl-c1">1</span>);b<span class="pl-k">==</span>i<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">d</span>(e,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">2</span>));<span class="pl-k">return</span> b<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-en">setCaretPos</span>(b),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Previous Edit Point<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">e</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>next_edit_point<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">d</span>(e,<span class="pl-c1">1</span>);<span class="pl-k">return</span> i<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span>(<span class="pl-smi">e</span>.<span class="pl-en">setCaretPos</span>(i),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>})});</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(a).<span class="pl-c1">content</span>,j<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,h,i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">create</span>(<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>),l<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">create</span>(<span class="pl-smi">a</span>.<span class="pl-en">getSelectionRange</span>());h<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">start</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-c1">1E5</span>;h<span class="pl-k">&gt;=</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>h<span class="pl-k">&lt;</span>j<span class="pl-k">&amp;&amp;</span><span class="pl-k">--</span>n<span class="pl-k">&gt;</span><span class="pl-c1">0</span>;){<span class="pl-k">if</span>(f<span class="pl-k">=</span><span class="pl-en">c</span>(g,h,b)){<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-en">equal</span>(f))<span class="pl-k">break</span>;i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">clone</span>();<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-en">d</span>(<span class="pl-smi">f</span>.<span class="pl-c1">substring</span>(g),<span class="pl-smi">f</span>.<span class="pl-c1">start</span>,<span class="pl-smi">l</span>.<span class="pl-en">clone</span>()))<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">h</span>.<span class="pl-c1">start</span>,<span class="pl-smi">h</span>.<span class="pl-smi">end</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> h<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-smi">end</span><span class="pl-k">-</span><span class="pl-c1">1</span>}h<span class="pl-k">+=</span>b<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">1</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function i(a){var b=!0;return h(a,!1,function(a,c){if(b){b=!1;var d;a:{d=c;for(var e;d&gt;=0;){if(e=f(a,d)){d=e;break a}d--}d=</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">null</span>}<span class="pl-k">return</span> d}<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-en">f</span>(a,c)},<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-en">g</span>(a,b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>)})}function b(a){return h(a,!0,f,function(a,b,c){return g(a,b,c,!0)})}function c(b,c,f){var f=f||0,g=e(&quot;range&quot;),h=[],k=-1,i=&quot;&quot;,l=&quot;&quot;,n,o;d.each(c,function(c){switch(c.type){case &quot;tag&quot;:o=b.substring(c.start,c.end);/^&lt;[\w\:\-]/.test(o)&amp;&amp;h.push(g.create({start:c.start+1,end:c.end}));break;case &quot;attribute&quot;:k=c.start;i=b.substring(c.start,c.end);break;case &quot;string&quot;:h.push(g.create(k,c.end-k)),n=g.create(c),l=n.substring(b),j(l.charAt(0))&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">n</span>.<span class="pl-c1">start</span><span class="pl-k">++</span>,<span class="pl-en">j</span>(<span class="pl-smi">l</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">l</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">n</span>.<span class="pl-smi">end</span><span class="pl-k">--</span>,<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(n),i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">concat</span>(<span class="pl-en">a</span>(<span class="pl-smi">n</span>.<span class="pl-c1">substring</span>(b),<span class="pl-smi">n</span>.<span class="pl-c1">start</span>)))}});<span class="pl-smi">d</span>.<span class="pl-en">each</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">shift</span>(f)});<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">chain</span>(h).<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>()}).<span class="pl-en">uniq</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()}).<span class="pl-c1">value</span>()}function a(a,b){var b=b||0,c=[],d=e(&quot;stringStream&quot;).create(a),f=e(&quot;range&quot;);d.eatSpace();d.start=d.pos;for(var g;g=d.next();)if(/[\s\u00a0]/.test(g))c.push(f.create(d.start+b,d.pos-d.start-1)),d.eatSpace(),d.start=d.pos;c.push(f.create(d.start+b,d.pos-</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">start</span>));<span class="pl-k">return</span> c}function g(a,b,f,g){a=c(a,e(&quot;xmlParser&quot;).parse(a),b);g&amp;&amp;a.reverse();return(b=d.find(a,function(a){return a.equal(f)}))?(g=d.indexOf(a,b),g&lt;a.length-1?a[g+1]:null):g?d.find(a,function(a){return a.start&lt;f.start}):!b&amp;&amp;(g=d.filter(a,function(a){return a.inside(f.end)}),g.length&gt;1)?g[1]:d.find(a,function(a){return a.end&gt;f.end})}function f(a,b){var c;if(a.charAt(b)==&quot;&lt;&quot;&amp;&amp;(c=a.substring(b,a.length).match(p)))return e(&quot;range&quot;).create(b,c[0])}function j(a){return a==&#39;&quot;&#39;||a==&quot;&#39;&quot;}function l(a){var b=</td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">valueRange</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),c<span class="pl-k">=</span>[<span class="pl-smi">a</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>),b],f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>();<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-en">valueParts</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">clone</span>();<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">e</span>.<span class="pl-c1">shift</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>));<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">create</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(h));<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\-</span>]</span><span class="pl-k">+</span><span class="pl-cce">\(</span><span class="pl-pds">/</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)){<span class="pl-smi">i</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">pos</span>;<span class="pl-smi">i</span>.<span class="pl-en">skipToPair</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">current</span>();<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">j</span>.<span class="pl-en">create</span>(<span class="pl-smi">e</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-c1">start</span>,l));<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">g</span>.<span class="pl-en">findParts</span>(l),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">j</span>.<span class="pl-en">create</span>(<span class="pl-smi">e</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>,<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(l)))})}});<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">chain</span>(c).<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>()}).<span class="pl-en">uniq</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()}).<span class="pl-c1">value</span>()}</td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">n</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">null</span>,e<span class="pl-k">=</span><span class="pl-c1">null</span>,g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">list</span>(),j,h;c<span class="pl-k">?</span>(<span class="pl-smi">g</span>.<span class="pl-c1">reverse</span>(),<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-c1">start</span><span class="pl-k">&lt;=</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>},<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>})<span class="pl-k">:</span>(<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-smi">end</span><span class="pl-k">&gt;=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span>},<span class="pl-en">h</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">&gt;</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>});<span class="pl-k">for</span>(;f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(g,j);){a<span class="pl-k">=</span><span class="pl-en">l</span>(f);c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">reverse</span>();<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">equal</span>(b)})){<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(a,e),e<span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>){e<span class="pl-k">=</span>a[e<span class="pl-k">+</span><span class="pl-c1">1</span>];<span class="pl-k">break</span>}}<span class="pl-k">else</span>{e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">filter</span>(a,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">inside</span>(<span class="pl-smi">b</span>.<span class="pl-smi">end</span>)});<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>){e<span class="pl-k">=</span>e[<span class="pl-c1">1</span>];<span class="pl-k">break</span>}<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(a,h))<span class="pl-k">break</span>}e<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-c1">start</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-smi">end</span><span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> e}function m(a,b,c){a=e(&quot;cssEditTree&quot;).parse(a,{offset:b});b=a.nameRange(!0);return c.end&lt;b.end?b:n(a,c,!1)}function o(a,b,c){b=e(&quot;cssEditTree&quot;).parse(a,{offset:b});a=n(b,c,!0);return!a&amp;&amp;(b=b.nameRange(!0),c.start&gt;b.start)?b:a}var p=/^&lt;([\w\:\-]+)((?:\s+[\w\-:]+(?:\s*=\s*(?:(?:&quot;[^&quot;]*&quot;)|(?:&#39;[^&#39;]*&#39;)|[^&gt;\s]+))?)*)\s*(\/?)&gt;/,r=e(&quot;actions&quot;);r.add(&quot;select_next_item&quot;,function(a){return a.getSyntax()==&quot;css&quot;?h(a,!1,e(&quot;cssEditTree&quot;).extractRule,m):i(a)});r.add(&quot;select_previous_item&quot;,</td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">getSyntax</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-en">h</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">extractRule</span>,o)<span class="pl-k">:</span><span class="pl-en">b</span>(a)})});</td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">String</span>((a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>out<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()),d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">c</span>.<span class="pl-en">getSelectionRange</span>()),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">content</span>;b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(f)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>())<span class="pl-k">if</span>(a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>)<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>tag<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">close</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(<span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>))<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">narrowToNonSpace</span>(d,<span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>);<span class="pl-k">if</span>((b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">find</span>(d,<span class="pl-smi">j</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(f)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>.<span class="pl-en">equal</span>(f))<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>.<span class="pl-en">equal</span>(<span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(<span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">equal</span>(<span class="pl-smi">b</span>.<span class="pl-smi">range</span>))<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>((b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">find</span>(d,<span class="pl-smi">f</span>.<span class="pl-c1">start</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(f)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>.<span class="pl-en">equal</span>(f))<span class="pl-smi">b</span>.<span class="pl-smi">range</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>}<span class="pl-k">else</span> b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">find</span>(d,<span class="pl-smi">f</span>.<span class="pl-c1">start</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-en">equal</span>(f))<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>match_pair<span class="pl-pds">&quot;</span></span>,d,{hidden<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>match_pair_inward<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">d</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>)},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML/Match Pair Tag (inward)<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>match_pair_outward<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">d</span>(b,</td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>out<span class="pl-pds">&quot;</span></span>)},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML/Match Pair Tag (outward)<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>matching_pair<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">b</span>.<span class="pl-en">getContent</span>()),d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(d)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">++</span>;<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">tag</span>(a,d))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">close</span><span class="pl-k">?</span>(<span class="pl-smi">a</span>.<span class="pl-smi">open</span>.<span class="pl-smi">range</span>.<span class="pl-en">inside</span>(d)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">setCaretPos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">close</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">setCaretPos</span>(<span class="pl-smi">a</span>.<span class="pl-smi">open</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML/Go To Matching Tag Pair<span class="pl-pds">&quot;</span></span>})});</td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>remove_tag<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(d),b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(<span class="pl-smi">i</span>.<span class="pl-c1">content</span>,<span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>());<span class="pl-k">if</span>(b){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">close</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">narrowToNonSpace</span>(<span class="pl-smi">i</span>.<span class="pl-c1">content</span>,<span class="pl-smi">b</span>.<span class="pl-smi">innerRange</span>),a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">findNewlineBounds</span>(<span class="pl-smi">i</span>.<span class="pl-c1">content</span>,<span class="pl-smi">c</span>.<span class="pl-c1">start</span>),a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getLinePadding</span>(<span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">i</span>.<span class="pl-c1">content</span>)),i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">i</span>.<span class="pl-c1">content</span>),i<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">unindentString</span>(i,a);<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">h</span>.<span class="pl-en">getCaretPlaceholder</span>()<span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-en">escapeText</span>(i),<span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-smi">outerRange</span>.<span class="pl-smi">end</span>)}<span class="pl-k">else</span> <span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">h</span>.<span class="pl-en">getCaretPlaceholder</span>(),</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-smi">range</span>.<span class="pl-smi">end</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML/Remove Tag<span class="pl-pds">&quot;</span></span>})});</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>split_join_tag<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>,<span class="pl-smi">h</span>){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(d,<span class="pl-c1">null</span>,h),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(<span class="pl-smi">b</span>.<span class="pl-c1">profile</span>);<span class="pl-k">if</span>(i<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">tag</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>,<span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>())){<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-smi">close</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">selfClosing</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span> /<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">open</span>.<span class="pl-smi">range</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">i</span>.<span class="pl-c1">source</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span>&gt;<span class="pl-k">$</span><span class="pl-pds">/</span></span>,c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span>);c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">escapeText</span>(c);<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(c,<span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span>,<span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-smi">end</span>)}<span class="pl-k">else</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getNewline</span>(),</td>
      </tr>
      <tr>
        <td id="L171" class="blob-num js-line-number" data-line-number="171"></td>
        <td id="LC171" class="blob-code blob-code-inner js-file-line">f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>(),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">tag_nl</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">?</span>g<span class="pl-k">+</span>f<span class="pl-k">+</span>g<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">outerContent</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\/</span>&gt;<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>;g<span class="pl-k">+=</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">i</span>.<span class="pl-smi">open</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>;g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">escapeText</span>(g);<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(g,<span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-c1">start</span>,<span class="pl-smi">i</span>.<span class="pl-smi">outerRange</span>.<span class="pl-smi">end</span>)}<span class="pl-smi">d</span>.<span class="pl-en">setCaretPos</span>(a);i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> i},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>HTML/Split<span class="pl-cce">\\</span>Join Tag Declaration<span class="pl-pds">&quot;</span></span>})});</td>
      </tr>
      <tr>
        <td id="L172" class="blob-num js-line-number" data-line-number="172"></td>
        <td id="LC172" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>reflectCSSValue<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c),c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">parseFromPosition</span>(<span class="pl-smi">d</span>.<span class="pl-c1">content</span>,c))<span class="pl-k">if</span>(d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">itemFromPosition</span>(c,<span class="pl-k">!</span><span class="pl-c1">0</span>)){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">source</span>,j<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span>,c<span class="pl-k">=</span>c<span class="pl-k">-</span>j<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-en">range</span>().<span class="pl-c1">start</span>;<span class="pl-smi">b</span>.<span class="pl-c1">exec</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>,[d]);<span class="pl-k">if</span>(f<span class="pl-k">!==</span><span class="pl-smi">a</span>.<span class="pl-c1">source</span>)<span class="pl-k">return</span>{data<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">source</span>,start<span class="pl-k">:</span>j,end<span class="pl-k">:</span>j<span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,caret<span class="pl-k">:</span>j<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">range</span>().<span class="pl-c1">start</span><span class="pl-k">+</span>c}}}function i(b){var b=e(&quot;cssEditTree&quot;).baseName(b),a;if(b==&quot;opacity&quot;||b==&quot;filter&quot;)return/^(?:\-\w+\-)?(?:opacity|filter)$/;else if(a=b.match(/^border-radius-(top|bottom)(left|right)/))return RegExp(&quot;^(?:\\-\\w+\\-)?(?:&quot;+</td>
      </tr>
      <tr>
        <td id="L173" class="blob-num js-line-number" data-line-number="173"></td>
        <td id="LC173" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>|border-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-radius)$<span class="pl-pds">&quot;</span></span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>border-(top<span class="pl-k">|</span>bottom)-(left<span class="pl-k">|</span>right)-radius<span class="pl-pds">/</span></span>))<span class="pl-k">return</span> <span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>^(?:<span class="pl-cce">\\</span>-<span class="pl-cce">\\</span>w+<span class="pl-cce">\\</span>-)?(?:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>|border-radius-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a[<span class="pl-c1">1</span>]<span class="pl-k">+</span>a[<span class="pl-c1">2</span>]<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)$<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>^(?:<span class="pl-cce">\\</span>-<span class="pl-cce">\\</span>w+<span class="pl-cce">\\</span>-)?<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>handlerList<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>();<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>reflect_css_value<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">getSyntax</span>()<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">compoundUpdate</span>(b,<span class="pl-en">h</span>(b))},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>CSS/Reflect Value<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">b</span>.<span class="pl-c1">add</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-smi">b</span>.<span class="pl-c1">name</span>());<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parent</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">test</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span>())){<span class="pl-k">var</span> f;<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">name</span>(),</td>
      </tr>
      <tr>
        <td id="L174" class="blob-num js-line-number" data-line-number="174"></td>
        <td id="LC174" class="blob-code blob-code-inner js-file-line">h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>(),i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">name</span>();f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">value</span>();<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>),o<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">baseName</span>(j),i<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-en">baseName</span>(i);f<span class="pl-k">=</span>j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>opacity=<span class="pl-c1">[<span class="pl-k">^</span>)]</span><span class="pl-k">*</span><span class="pl-pds">/</span>i</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>opacity=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">Math</span>.<span class="pl-c1">floor</span>(<span class="pl-c1">parseFloat</span>(h)<span class="pl-k">*</span><span class="pl-c1">100</span>))<span class="pl-k">:</span>j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(j<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span>opacity=(<span class="pl-c1">[<span class="pl-k">^</span>)]</span><span class="pl-k">*</span>)<span class="pl-pds">/</span>i</span>))<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">prettifyNumber</span>(<span class="pl-c1">parseInt</span>(j[<span class="pl-c1">1</span>])<span class="pl-k">/</span><span class="pl-c1">100</span>)<span class="pl-k">:</span>f<span class="pl-k">:</span>h;<span class="pl-smi">d</span>.<span class="pl-c1">value</span>(f)}})},{order<span class="pl-k">:</span><span class="pl-k">-</span><span class="pl-c1">1</span>});<span class="pl-k">return</span>{<span class="pl-en">addHandler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-smi">b</span>.<span class="pl-c1">add</span>(c,a)},<span class="pl-en">removeHandler</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">b</span>.<span class="pl-c1">remove</span>(c,options)}}});</td>
      </tr>
      <tr>
        <td id="L175" class="blob-num js-line-number" data-line-number="175"></td>
        <td id="LC175" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>evaluate_math_expression<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">d</span>.<span class="pl-en">getContent</span>()),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">d</span>.<span class="pl-en">getSelectionRange</span>());<span class="pl-smi">c</span>.<span class="pl-c1">length</span>()<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">findExpressionBounds</span>(d,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">i</span>.<span class="pl-en">isNumeric</span>(a)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>.+-*/<span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span>.<span class="pl-c1">indexOf</span>(a)<span class="pl-k">!=</span><span class="pl-k">-</span><span class="pl-c1">1</span>}));<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>()){h<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(b);h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[<span class="pl-c1">\d</span><span class="pl-cce">\.\-</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\\</span>(<span class="pl-c1">[<span class="pl-c1">\d</span><span class="pl-cce">\.\-</span>]</span><span class="pl-k">+</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Math.round($1/$2)<span class="pl-pds">&quot;</span></span>);<span class="pl-k">try</span>{<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">prettifyNumber</span>((<span class="pl-k">new</span> <span class="pl-en">Function</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>return <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h))());<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(a,<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,<span class="pl-smi">c</span>.<span class="pl-smi">end</span>);<span class="pl-smi">d</span>.<span class="pl-en">setCaretPos</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>);</td>
      </tr>
      <tr>
        <td id="L176" class="blob-num js-line-number" data-line-number="176"></td>
        <td id="LC176" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">catch</span>(g){}}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Numbers/Evaluate Math Expression<span class="pl-pds">&quot;</span></span>})});</td>
      </tr>
      <tr>
        <td id="L177" class="blob-num js-line-number" data-line-number="177"></td>
        <td id="LC177" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">findExpressionBounds</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">g</span>.<span class="pl-en">isNumeric</span>(a)<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-en">isNumeric</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>))<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>j<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>j<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>f<span class="pl-k">?</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">if</span>(h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">h</span>.<span class="pl-c1">length</span>()){<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">String</span>(<span class="pl-smi">b</span>.<span class="pl-en">getContent</span>())),m<span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(n);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isNaN</span>(m)){m<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">prettifyNumber</span>(m<span class="pl-k">+</span>a);<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\-</span><span class="pl-k">?</span>)0<span class="pl-k">+</span><span class="pl-c1">[<span class="pl-c1">1-9</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(n)){<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-c1">RegExp</span>.<span class="pl-smi">$1</span><span class="pl-k">&amp;&amp;</span>(o<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>));m<span class="pl-k">=</span><span class="pl-smi">m</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);m[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">zeroPadString</span>(m[<span class="pl-c1">0</span>],<span class="pl-en">i</span>(n));m<span class="pl-k">=</span>o<span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)}<span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(m,<span class="pl-smi">h</span>.<span class="pl-c1">start</span>,<span class="pl-smi">h</span>.<span class="pl-smi">end</span>);</td>
      </tr>
      <tr>
        <td id="L178" class="blob-num js-line-number" data-line-number="178"></td>
        <td id="LC178" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">h</span>.<span class="pl-c1">start</span>,<span class="pl-smi">h</span>.<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">length</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}function i(b){b=b.replace(/^\-/,&quot;&quot;);return~b.indexOf(&quot;.&quot;)?b.split(&quot;.&quot;)[0].length:b.length}var b=e(&quot;actions&quot;);d.each([1,-1,10,-10,0.1,-0.1],function(c){var a=c&gt;0?&quot;increment&quot;:&quot;decrement&quot;;b.add(a+&quot;_number_by_&quot;+String(Math.abs(c)).replace(&quot;.&quot;,&quot;&quot;).substring(0,2),function(a){return h(a,c)},{label:&quot;Numbers/&quot;+a.charAt(0).toUpperCase()+a.substring(1)+&quot; number by &quot;+Math.abs(c)})})});</td>
      </tr>
      <tr>
        <td id="L179" class="blob-num js-line-number" data-line-number="179"></td>
        <td id="LC179" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">i</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.closeBraceIndentation<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Indentation before closing brace of CSS rule. Some users prefere indented closing brace of CSS rule for better readability. This preference<span class="pl-cce">\u2019</span>s value will be automatically inserted before closing brace when user adds newline in newly created CSS rule (e.g. when <span class="pl-cce">\u201c</span>Insert formatted linebreak<span class="pl-cce">\u201d</span> action will be performed in CSS file). If you<span class="pl-cce">\u2019</span>re such user, you may want to write put a value like &lt;code&gt;<span class="pl-cce">\\</span>n<span class="pl-cce">\\</span>t&lt;/code&gt; in this preference.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L180" class="blob-num js-line-number" data-line-number="180"></td>
        <td id="LC180" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insert_formatted_line_break_only<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(b),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCaretPos</span>(),j<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getNewline</span>();<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-en">include</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xsl<span class="pl-pds">&quot;</span></span>],<span class="pl-smi">g</span>.<span class="pl-smi">syntax</span>)){<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>),(g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>).<span class="pl-en">tag</span>(<span class="pl-smi">g</span>.<span class="pl-c1">content</span>,f))<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">g</span>.<span class="pl-smi">innerRange</span>.<span class="pl-c1">length</span>())<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(j<span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-en">getCaretPlaceholder</span>()<span class="pl-k">+</span>j,f),<span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">syntax</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">content</span>,f<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-c1">charAt</span>(f<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.closeBraceIndentation<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">charAt</span>(f)<span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L181" class="blob-num js-line-number" data-line-number="181"></td>
        <td id="LC181" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>n)<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span>f,o<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,p;m<span class="pl-k">&lt;</span>o;m<span class="pl-k">++</span>){p<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">charAt</span>(m);<span class="pl-k">if</span>(p<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)<span class="pl-k">break</span>;<span class="pl-k">if</span>(p<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>){h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;n<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}n<span class="pl-k">||</span>(h<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">=</span>j<span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-en">getCaretPlaceholder</span>()<span class="pl-k">+</span>h;<span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(c,f);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},{hidden<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insert_formatted_line_break<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">h</span>.<span class="pl-en">run</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>insert_formatted_line_break_only<span class="pl-pds">&quot;</span></span>,b)){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getCurrentLinePadding</span>(b),d<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">b</span>.<span class="pl-en">getContent</span>()),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCaretPos</span>(),j<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getNewline</span>(),i<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,n<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">getCurrentLineRange</span>().<span class="pl-smi">end</span><span class="pl-k">+</span><span class="pl-c1">1</span>,m;n<span class="pl-k">&lt;</span>j;n<span class="pl-k">++</span>)<span class="pl-k">if</span>(m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">charAt</span>(n),m<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L182" class="blob-num js-line-number" data-line-number="182"></td>
        <td id="LC182" class="blob-code blob-code-inner js-file-line">m<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\t</span><span class="pl-pds">&quot;</span></span>)i<span class="pl-k">+=</span>m;<span class="pl-k">else</span> <span class="pl-k">break</span>;<span class="pl-smi">i</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(c<span class="pl-k">+</span>i,f,f,<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">replaceContent</span>(c,f)}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>},{hidden<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>})});</td>
      </tr>
      <tr>
        <td id="L183" class="blob-num js-line-number" data-line-number="183"></td>
        <td id="LC183" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>merge_lines<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>htmlMatcher<span class="pl-pds">&quot;</span></span>),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(d),c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-smi">d</span>.<span class="pl-en">getSelectionRange</span>());<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">length</span>()<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-c1">find</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>,<span class="pl-smi">d</span>.<span class="pl-en">getCaretPos</span>())))c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-smi">outerRange</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>()){b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">content</span>);b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">splitByLines</span>(b);<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-c1">1</span>;h<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;h<span class="pl-k">++</span>)b[h]<span class="pl-k">=</span>b[h].<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">{2,}</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>);h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">escapeText</span>(b);<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(b,<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,<span class="pl-smi">c</span>.<span class="pl-smi">end</span>);<span class="pl-smi">d</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">+</span>h);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>})});</td>
      </tr>
      <tr>
        <td id="L184" class="blob-num js-line-number" data-line-number="184"></td>
        <td id="LC184" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-k">function</span> <span class="pl-en">d</span>(<span class="pl-smi">d</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(c)<span class="pl-k">==</span><span class="pl-smi">d</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(c,<span class="pl-smi">d</span>.<span class="pl-c1">length</span>)<span class="pl-k">==</span>d}function h(d,b,c){var a=e(&quot;file&quot;),g=e(&quot;actionUtils&quot;),f=d.getFilePath();if(f===null)throw&quot;You should save your file before using this action&quot;;var j=a.locateFile(f,b);if(j===null)throw&quot;Can&#39;t find &quot;+b+&quot; file&quot;;a.read(j,function(f,h){if(f)throw&quot;Unable to read &quot;+j+&quot;: &quot;+f;var m=e(&quot;base64&quot;).encode(String(h));if(!m)throw&quot;Can&#39;t encode file content to base64&quot;;m=&quot;data:&quot;+(g.mimeTypes[String(a.getExt(j))]||</td>
      </tr>
      <tr>
        <td id="L185" class="blob-num js-line-number" data-line-number="185"></td>
        <td id="LC185" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>application/octet-stream<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;base64,<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m;<span class="pl-smi">d</span>.<span class="pl-en">replaceContent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$0<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>m,c,c<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>)});<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>encode_decode_data_url<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">i</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">i</span>.<span class="pl-c1">getSelection</span>()),c<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">i</span>.<span class="pl-en">getContent</span>());c<span class="pl-k">--</span> <span class="pl-k">&gt;=</span><span class="pl-c1">0</span>;)<span class="pl-k">if</span>(<span class="pl-en">d</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>src=<span class="pl-pds">&quot;</span></span>,a,c)){<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(c).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(src=(<span class="pl-c1">[&quot;&#39;]</span>)<span class="pl-k">?</span>)(<span class="pl-c1">[<span class="pl-k">^</span>&#39;&quot;&lt;&gt;<span class="pl-c1">\s</span>]</span><span class="pl-k">+</span>)<span class="pl-k">\1</span><span class="pl-k">?</span><span class="pl-pds">/</span></span>))b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],c<span class="pl-k">+=</span>a[<span class="pl-c1">1</span>].<span class="pl-c1">length</span>;<span class="pl-k">break</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">d</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>url(<span class="pl-pds">&quot;</span></span>,a,c)){<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(c).<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(url<span class="pl-cce">\(</span>(<span class="pl-c1">[&#39;&quot;]</span>)<span class="pl-k">?</span>)(<span class="pl-c1">[<span class="pl-k">^</span>&#39;&quot;<span class="pl-cce">\)</span><span class="pl-c1">\s</span>]</span><span class="pl-k">+</span>)<span class="pl-k">\1</span><span class="pl-k">?</span><span class="pl-pds">/</span></span>))b<span class="pl-k">=</span>a[<span class="pl-c1">3</span>],c<span class="pl-k">+=</span>a[<span class="pl-c1">1</span>].<span class="pl-c1">length</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(b)<span class="pl-k">if</span>(<span class="pl-en">d</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data:<span class="pl-pds">&quot;</span></span>,b))<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-c1">String</span>(<span class="pl-smi">i</span>.<span class="pl-c1">prompt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Enter path to file (absolute or relative)<span class="pl-pds">&quot;</span></span>))){<span class="pl-k">var</span> g<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L186" class="blob-num js-line-number" data-line-number="186"></td>
        <td id="LC186" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>file<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">createPath</span>(<span class="pl-smi">i</span>.<span class="pl-en">getFilePath</span>(),a);<span class="pl-k">if</span>(<span class="pl-k">!</span>f)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t save file<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">g</span>.<span class="pl-en">save</span>(f,<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>base64<span class="pl-pds">&quot;</span></span>).<span class="pl-en">decode</span>(<span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>data<span class="pl-cce">\:</span><span class="pl-c1">.</span><span class="pl-k">+?</span>;<span class="pl-c1">.</span><span class="pl-k">+?</span>,<span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)));<span class="pl-smi">i</span>.<span class="pl-en">replaceContent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>$0<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a,c,c<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>);i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">else</span> i<span class="pl-k">=</span><span class="pl-en">h</span>(i,b,c);<span class="pl-k">else</span> i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> i},{label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Encode<span class="pl-cce">\\</span>Decode data:URL image<span class="pl-pds">&quot;</span></span>})});</td>
      </tr>
      <tr>
        <td id="L187" class="blob-num js-line-number" data-line-number="187"></td>
        <td id="LC187" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">getCaretPos</span>(),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(c),f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xmlEditTree<span class="pl-pds">&quot;</span></span>).<span class="pl-en">parseFromPosition</span>(<span class="pl-smi">g</span>.<span class="pl-c1">content</span>,a,<span class="pl-k">!</span><span class="pl-c1">0</span>);f<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">f</span>.<span class="pl-c1">name</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>img<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(c,<span class="pl-smi">f</span>.<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>src<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">f</span>.<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span>);<span class="pl-smi">f</span>.<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span>,<span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">compoundUpdate</span>(c,<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(g,{data<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">toString</span>(),caret<span class="pl-k">:</span>a}))}})}function i(c){var a=c.getCaretPos(),g=e(&quot;editorUtils&quot;).outputInfo(c),f=e(&quot;cssEditTree&quot;).parseFromPosition(g.content,</td>
      </tr>
      <tr>
        <td id="L188" class="blob-num js-line-number" data-line-number="188"></td>
        <td id="LC188" class="blob-code blob-code-inner js-file-line">a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(f){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">itemFromPosition</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>),j;g<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>url<span class="pl-cce">\(</span>(<span class="pl-c1">[&quot;&#39;]</span><span class="pl-k">?</span>)(<span class="pl-c1">.</span><span class="pl-k">+?</span>)<span class="pl-k">\1</span><span class="pl-cce">\)</span><span class="pl-pds">/</span>i</span>.<span class="pl-c1">exec</span>(<span class="pl-smi">g</span>.<span class="pl-c1">value</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span><span class="pl-en">b</span>(c,j[<span class="pl-c1">2</span>],<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b){<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">f</span>.<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">width</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">f</span>.<span class="pl-c1">value</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>height<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">b</span>.<span class="pl-c1">height</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>width<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">compoundUpdate</span>(c,<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(j,{data<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-c1">toString</span>(),caret<span class="pl-k">:</span>a}))}})}}function b(b,a,d){var f=e(&quot;actionUtils&quot;);if(a){if(/^data:/.test(a))return b=e(&quot;base64&quot;).decode(a.replace(/^data\:.+?;.+?,/,&quot;&quot;)),d(f.getImageSize(b));var j=e(&quot;file&quot;),h=j.locateFile(b.getFilePath(),</td>
      </tr>
      <tr>
        <td id="L189" class="blob-num js-line-number" data-line-number="189"></td>
        <td id="LC189" class="blob-code blob-code-inner js-file-line">a);<span class="pl-k">if</span>(h<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t find <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> file<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">j</span>.<span class="pl-en">read</span>(h,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(a)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Unable to read <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a;<span class="pl-en">d</span>(<span class="pl-smi">f</span>.<span class="pl-en">getImageSize</span>(<span class="pl-c1">String</span>(b)))})}}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>update_image_size<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">d</span>.<span class="pl-en">include</span>([<span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>less<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scss<span class="pl-pds">&quot;</span></span>],<span class="pl-c1">String</span>(<span class="pl-smi">b</span>.<span class="pl-en">getSyntax</span>()))<span class="pl-k">?</span><span class="pl-en">i</span>(b)<span class="pl-k">:</span><span class="pl-en">h</span>(b);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>})});</td>
      </tr>
      <tr>
        <td id="L190" class="blob-num js-line-number" data-line-number="190"></td>
        <td id="LC190" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssResolver<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">return</span> a<span class="pl-k">&amp;&amp;</span>a<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>b<span class="pl-k">&gt;</span><span class="pl-c1">47</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&lt;</span><span class="pl-c1">58</span>}function i(a){a=e(&quot;utils&quot;).trim(a);if(~a.indexOf(&quot;/*&quot;)||/[\n\r]/.test(a))return!1;if(!/^[a-z0-9\-]+\s*\:/i.test(a))return!1;a=e(&quot;tabStops&quot;).processText(a,{replaceCarets:!0,tabstop:function(){return&quot;value&quot;}});return a.split(&quot;:&quot;).length==2}function b(a){a.charAt(0)==&quot;-&quot;&amp;&amp;!/^\-[\.\d]/.test(a)&amp;&amp;(a=a.replace(/^\-+/,&quot;&quot;));if(a.charAt(0)==&quot;#&quot;){var b=a.replace(/^#+/,&quot;&quot;)||&quot;0&quot;;if(b.toLowerCase()==&quot;t&quot;)a=</td>
      </tr>
      <tr>
        <td id="L191" class="blob-num js-line-number" data-line-number="191"></td>
        <td id="LC191" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>transparent<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-smi">repeatString</span>,a<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">switch</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span>:a<span class="pl-k">=</span><span class="pl-en">d</span>(b,<span class="pl-c1">6</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span>:a<span class="pl-k">=</span><span class="pl-en">d</span>(b,<span class="pl-c1">3</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">2</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">2</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">5</span>:a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-c1">6</span>)}<span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.color.short<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),b[<span class="pl-c1">0</span>]<span class="pl-k">==</span>b[<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">2</span>]<span class="pl-k">==</span>b[<span class="pl-c1">3</span>]<span class="pl-k">&amp;&amp;</span>b[<span class="pl-c1">4</span>]<span class="pl-k">==</span>b[<span class="pl-c1">5</span>]<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b[<span class="pl-c1">2</span>]<span class="pl-k">+</span>b[<span class="pl-c1">4</span>]));<span class="pl-k">switch</span>(<span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.color.case<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>upper<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toUpperCase</span>();<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>lower<span class="pl-pds">&quot;</span></span>:a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>()}a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a}}<span class="pl-k">else</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L192" class="blob-num js-line-number" data-line-number="192"></td>
        <td id="LC192" class="blob-code blob-code-inner js-file-line"><span class="pl-en">c</span>(a);<span class="pl-k">return</span> a}function c(a){var b=q.getDict(&quot;css.keywordAliases&quot;);return a in b?b[a]:a}function a(a){return d.include(q.getArray(&quot;css.keywords&quot;),c(a))}function g(a,b){var c=r[b];c||(c=d.find(r,function(a){return a.prefix==b}));return c&amp;&amp;c.supports(a)}function f(a,b){var c=[];d.each(r,function(b,d){g(a,d)&amp;&amp;c.push(d)});!c.length&amp;&amp;!b&amp;&amp;d.each(r,function(a,b){a.obsolete||c.push(b)});return c}function j(a,b){d.isString(b)&amp;&amp;(b={prefix:b});r[a]=d.extend({},p,b)}function l(a,b){if(b){var c=q.get(b+&quot;.&quot;+a);</td>
      </tr>
      <tr>
        <td id="L193" class="blob-num js-line-number" data-line-number="193"></td>
        <td id="LC193" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(c))<span class="pl-k">return</span> c}<span class="pl-k">return</span> <span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)}function n(a,b,c){if(!d.isString(a))a=a.data;if(!i(a))return a;b&amp;&amp;(~a.indexOf(&quot;;&quot;)?a=a.split(&quot;;&quot;).join(&quot; !important;&quot;):a+=&quot; !important&quot;);b=a.indexOf(&quot;:&quot;);a=a.substring(0,b).replace(/\s+$/,&quot;&quot;)+l(&quot;valueSeparator&quot;,c)+e(&quot;utils&quot;).trim(a.substring(b+1));return a.replace(/\s*;\s*$/,l(&quot;propertyEnd&quot;,c))}function m(a){var b=q.getArray(a);d.each(q.getArray(a+&quot;Addon&quot;),function(a){a.charAt(0)==&quot;-&quot;?b=d.without(b,a.substr(1)):(a.charAt(0)==&quot;+&quot;&amp;&amp;(a=a.substr(1)),</td>
      </tr>
      <tr>
        <td id="L194" class="blob-num js-line-number" data-line-number="194"></td>
        <td id="LC194" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a))});<span class="pl-k">return</span> b}<span class="pl-k">var</span> o<span class="pl-k">=</span><span class="pl-c1">null</span>,p<span class="pl-k">=</span>{prefix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>emmet<span class="pl-pds">&quot;</span></span>,obsolete<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">transformName</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">prefix</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a},<span class="pl-en">properties</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">m</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">prefix</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Properties<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>[]},<span class="pl-en">supports</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">include</span>(<span class="pl-c1">this</span>.<span class="pl-en">properties</span>(),a)}},r<span class="pl-k">=</span>{},q<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.valueSeparator<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>: <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Defines a symbol that should be placed between CSS property and value when expanding CSS abbreviations.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.propertyEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Defines a symbol that should be placed at the end of CSS property  when expanding CSS abbreviations.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L195" class="blob-num js-line-number" data-line-number="195"></td>
        <td id="LC195" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stylus.valueSeparator<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Defines a symbol that should be placed between CSS property and value when expanding CSS abbreviations in Stylus dialect.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stylus.propertyEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Defines a symbol that should be placed at the end of CSS property  when expanding CSS abbreviations in Stylus dialect.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sass.propertyEnd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Defines a symbol that should be placed at the end of CSS property  when expanding CSS abbreviations in SASS dialect.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.autoInsertVendorPrefixes<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L196" class="blob-num js-line-number" data-line-number="196"></td>
        <td id="LC196" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Automatically generate vendor-prefixed copies of expanded CSS property. By default, Emmet will generate vendor-prefixed properties only when you put dash before abbreviation (e.g. &lt;code&gt;-bxsh&lt;/code&gt;). With this option enabled, you don<span class="pl-cce">\u2019</span>t need dashes before abbreviations: Emmet will produce vendor-prefixed properties for you.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">template</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of CSS properties that may have &lt;code&gt;&lt;%= vendor %&gt;&lt;/code&gt; vendor prefix. This list is used to generate a list of prefixed properties when expanding &lt;code&gt;-property&lt;/code&gt; abbreviations. Empty list means that all possible CSS values may have &lt;code&gt;&lt;%= vendor %&gt;&lt;/code&gt; prefix.<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L197" class="blob-num js-line-number" data-line-number="197"></td>
        <td id="LC197" class="blob-code blob-code-inner js-file-line">s=d.template(&quot;A comma-separated list of &lt;em&gt;additional&lt;/em&gt; CSS properties for &lt;code&gt;css.&lt;%= vendor %&gt;Preperties&lt;/code&gt; preference. You should use this list if you want to add or remove a few CSS properties to original set. To add a new property, simply write its name, to remove it, precede property with hyphen.&lt;br&gt;For example, to add &lt;em&gt;foo&lt;/em&gt; property and remove &lt;em&gt;border-radius&lt;/em&gt; one, the preference value will look like this: &lt;code&gt;foo, -border-radius&lt;/code&gt;.&quot;);d.each({webkit:&quot;animation, animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, appearance, backface-visibility, background-clip, background-composite, background-origin, background-size, border-fit, border-horizontal-spacing, border-image, border-vertical-spacing, box-align, box-direction, box-flex, box-flex-group, box-lines, box-ordinal-group, box-orient, box-pack, box-reflect, box-shadow, color-correction, column-break-after, column-break-before, column-break-inside, column-count, column-gap, column-rule-color, column-rule-style, column-rule-width, column-span, column-width, dashboard-region, font-smoothing, highlight, hyphenate-character, hyphenate-limit-after, hyphenate-limit-before, hyphens, line-box-contain, line-break, line-clamp, locale, margin-before-collapse, margin-after-collapse, marquee-direction, marquee-increment, marquee-repetition, marquee-style, mask-attachment, mask-box-image, mask-box-image-outset, mask-box-image-repeat, mask-box-image-slice, mask-box-image-source, mask-box-image-width, mask-clip, mask-composite, mask-image, mask-origin, mask-position, mask-repeat, mask-size, nbsp-mode, perspective, perspective-origin, rtl-ordering, text-combine, text-decorations-in-effect, text-emphasis-color, text-emphasis-position, text-emphasis-style, text-fill-color, text-orientation, text-security, text-stroke-color, text-stroke-width, transform, transition, transform-origin, transform-style, transition-delay, transition-duration, transition-property, transition-timing-function, user-drag, user-modify, user-select, writing-mode, svg-shadow, box-sizing, border-radius&quot;,</td>
      </tr>
      <tr>
        <td id="L198" class="blob-num js-line-number" data-line-number="198"></td>
        <td id="LC198" class="blob-code blob-code-inner js-file-line">moz:&quot;animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, appearance, backface-visibility, background-inline-policy, binding, border-bottom-colors, border-image, border-left-colors, border-right-colors, border-top-colors, box-align, box-direction, box-flex, box-ordinal-group, box-orient, box-pack, box-shadow, box-sizing, column-count, column-gap, column-rule-color, column-rule-style, column-rule-width, column-width, float-edge, font-feature-settings, font-language-override, force-broken-image-icon, hyphens, image-region, orient, outline-radius-bottomleft, outline-radius-bottomright, outline-radius-topleft, outline-radius-topright, perspective, perspective-origin, stack-sizing, tab-size, text-blink, text-decoration-color, text-decoration-line, text-decoration-style, text-size-adjust, transform, transform-origin, transform-style, transition, transition-delay, transition-duration, transition-property, transition-timing-function, user-focus, user-input, user-modify, user-select, window-shadow, background-clip, border-radius&quot;,</td>
      </tr>
      <tr>
        <td id="L199" class="blob-num js-line-number" data-line-number="199"></td>
        <td id="LC199" class="blob-code blob-code-inner js-file-line">ms:&quot;accelerator, backface-visibility, background-position-x, background-position-y, behavior, block-progression, box-align, box-direction, box-flex, box-line-progression, box-lines, box-ordinal-group, box-orient, box-pack, content-zoom-boundary, content-zoom-boundary-max, content-zoom-boundary-min, content-zoom-chaining, content-zoom-snap, content-zoom-snap-points, content-zoom-snap-type, content-zooming, filter, flow-from, flow-into, font-feature-settings, grid-column, grid-column-align, grid-column-span, grid-columns, grid-layer, grid-row, grid-row-align, grid-row-span, grid-rows, high-contrast-adjust, hyphenate-limit-chars, hyphenate-limit-lines, hyphenate-limit-zone, hyphens, ime-mode, interpolation-mode, layout-flow, layout-grid, layout-grid-char, layout-grid-line, layout-grid-mode, layout-grid-type, line-break, overflow-style, perspective, perspective-origin, perspective-origin-x, perspective-origin-y, scroll-boundary, scroll-boundary-bottom, scroll-boundary-left, scroll-boundary-right, scroll-boundary-top, scroll-chaining, scroll-rails, scroll-snap-points-x, scroll-snap-points-y, scroll-snap-type, scroll-snap-x, scroll-snap-y, scrollbar-arrow-color, scrollbar-base-color, scrollbar-darkshadow-color, scrollbar-face-color, scrollbar-highlight-color, scrollbar-shadow-color, scrollbar-track-color, text-align-last, text-autospace, text-justify, text-kashida-space, text-overflow, text-size-adjust, text-underline-position, touch-action, transform, transform-origin, transform-origin-x, transform-origin-y, transform-origin-z, transform-style, transition, transition-delay, transition-duration, transition-property, transition-timing-function, user-select, word-break, word-wrap, wrap-flow, wrap-margin, wrap-through, writing-mode&quot;,</td>
      </tr>
      <tr>
        <td id="L200" class="blob-num js-line-number" data-line-number="200"></td>
        <td id="LC200" class="blob-code blob-code-inner js-file-line">o<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dashboard-region, animation, animation-delay, animation-direction, animation-duration, animation-fill-mode, animation-iteration-count, animation-name, animation-play-state, animation-timing-function, border-image, link, link-source, object-fit, object-position, tab-size, table-baseline, transform, transform-origin, transition, transition-delay, transition-duration, transition-property, transition-timing-function, accesskey, input-format, input-required, marquee-dir, marquee-loop, marquee-speed, marquee-style<span class="pl-pds">&quot;</span></span>},</td>
      </tr>
      <tr>
        <td id="L201" class="blob-num js-line-number" data-line-number="201"></td>
        <td id="LC201" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>Properties<span class="pl-pds">&quot;</span></span>,a,<span class="pl-en">u</span>({vendor<span class="pl-k">:</span>b}));<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>PropertiesAddon<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">s</span>({vendor<span class="pl-k">:</span>b}))});<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.unitlessProperties<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z-index, line-height, opacity, font-weight, zoom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>The list of properties whose values <span class="pl-cce">\u200b\u200b</span>must not contain units.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.intUnit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>px<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Default unit for integer values<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.floatUnit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>em<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Default unit for float values<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.keywords<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>auto, inherit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of valid keywords that can be used in CSS abbreviations.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L202" class="blob-num js-line-number" data-line-number="202"></td>
        <td id="LC202" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.keywordAliases<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>a:auto, i:inherit, s:solid, da:dashed, do:dotted, t:transparent<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of keyword aliases, used in CSS abbreviation. Each alias should be defined as &lt;code&gt;alias:keyword_name&lt;/code&gt;.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.unitAliases<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>e:em, p:%, x:ex, r:rem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of unit aliases, used in CSS abbreviation. Each alias should be defined as &lt;code&gt;alias:unit_value&lt;/code&gt;.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.color.short<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Should color values like &lt;code&gt;#ffffff&lt;/code&gt; be shortened to &lt;code&gt;#fff&lt;/code&gt; after abbreviation with color was expanded.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L203" class="blob-num js-line-number" data-line-number="203"></td>
        <td id="LC203" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.color.case<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>keep<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Letter case of color values generated by abbreviations with color (like &lt;code&gt;c#0&lt;/code&gt;). Possible values are &lt;code&gt;upper&lt;/code&gt;, &lt;code&gt;lower&lt;/code&gt; and &lt;code&gt;keep&lt;/code&gt;.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearch<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Enable fuzzy search among CSS snippet names. When enabled, every &lt;em&gt;unknown&lt;/em&gt; snippet will be scored against available snippet names (not values or CSS properties!). The match with best score will be used to resolve snippet value. For example, with this preference enabled, the following abbreviations are equal: &lt;code&gt;ov:h&lt;/code&gt; == &lt;code&gt;ov-h&lt;/code&gt; == &lt;code&gt;o-h&lt;/code&gt; == &lt;code&gt;oh&lt;/code&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L204" class="blob-num js-line-number" data-line-number="204"></td>
        <td id="LC204" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearchMinScore<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0.3</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>The minium score (from 0 to 1) that fuzzy-matched abbreviation should achive. Lower values may produce many false-positive matches, higher values may reduce possible matches.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">q</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.alignVendor<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>If set to &lt;code&gt;true&lt;/code&gt;, all generated vendor-prefixed properties will be aligned by real property name.<span class="pl-pds">&quot;</span></span>);<span class="pl-en">j</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>,{prefix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>webkit<span class="pl-pds">&quot;</span></span>});<span class="pl-en">j</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>m<span class="pl-pds">&quot;</span></span>,{prefix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>moz<span class="pl-pds">&quot;</span></span>});<span class="pl-en">j</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>,{prefix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ms<span class="pl-pds">&quot;</span></span>});<span class="pl-en">j</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>o<span class="pl-pds">&quot;</span></span>,{prefix<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>o<span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> v<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>less<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sass<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scss<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stylus<span class="pl-pds">&quot;</span></span>];<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addResolver</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L205" class="blob-num js-line-number" data-line-number="205"></td>
        <td id="LC205" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">include</span>(v,b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">isElement</span>()<span class="pl-k">?</span><span class="pl-smi">o</span>.<span class="pl-en">expandToSnippet</span>(<span class="pl-smi">a</span>.<span class="pl-smi">abbreviation</span>,b)<span class="pl-k">:</span><span class="pl-c1">null</span>});<span class="pl-k">var</span> w<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expandAbbreviation<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">w</span>.<span class="pl-en">addHandler</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(v,b))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getSelectionRange</span>().<span class="pl-smi">end</span>,f<span class="pl-k">=</span><span class="pl-smi">w</span>.<span class="pl-en">findAbbreviation</span>(a);<span class="pl-k">return</span> f<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">emmet</span>.<span class="pl-en">expandAbbreviation</span>(f,b,c))<span class="pl-k">?</span>(f<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span>,c<span class="pl-k">=</span>e,<span class="pl-smi">a</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">charAt</span>(e)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>c<span class="pl-k">++</span>,<span class="pl-smi">a</span>.<span class="pl-en">replaceContent</span>(b,f,c),<span class="pl-k">!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});<span class="pl-k">return</span> o<span class="pl-k">=</span>{addPrefix<span class="pl-k">:</span>j,supportsPrefix<span class="pl-k">:</span>g,<span class="pl-en">prefixed</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">g</span>(a,b)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">:</span>a},<span class="pl-en">listPrefixes</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(r,</td>
      </tr>
      <tr>
        <td id="L206" class="blob-num js-line-number" data-line-number="206"></td>
        <td id="LC206" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">prefix</span>})},<span class="pl-en">getPrefix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> r[a]},<span class="pl-en">removePrefix</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a <span class="pl-k">in</span> r<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> r[a]},<span class="pl-en">extractPrefixes</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span>{property<span class="pl-k">:</span>a,prefixes<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>,d,e<span class="pl-k">=</span>[];b<span class="pl-k">&lt;</span>c;){d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charAt</span>(b);<span class="pl-k">if</span>(d<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>){b<span class="pl-k">++</span>;<span class="pl-k">break</span>}<span class="pl-k">if</span>(d <span class="pl-k">in</span> r)<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(d);<span class="pl-k">else</span>{<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>}b<span class="pl-k">++</span>}<span class="pl-k">if</span>(b<span class="pl-k">==</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)b<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">return</span>{property<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(b),prefixes<span class="pl-k">:</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>e<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>}},<span class="pl-en">findValuesInAbbreviation</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>,j<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g;d<span class="pl-k">&lt;</span>f;){g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(d);<span class="pl-k">if</span>(<span class="pl-en">h</span>(g)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L207" class="blob-num js-line-number" data-line-number="207"></td>
        <td id="LC207" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(d<span class="pl-k">+</span><span class="pl-c1">1</span>))){j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(d);<span class="pl-k">break</span>}d<span class="pl-k">++</span>}g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">j</span>.<span class="pl-c1">length</span>);d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(f<span class="pl-k">=</span>[];<span class="pl-k">~</span><span class="pl-smi">g</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">d</span>.<span class="pl-en">findSnippet</span>(c,g);){g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">pop</span>();<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">a</span>(i))<span class="pl-k">break</span>;<span class="pl-smi">f</span>.<span class="pl-c1">unshift</span>(i);g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>j},<span class="pl-en">parseValues</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(c),j<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-c1">null</span>;g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">next</span>();){<span class="pl-k">if</span>(g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>t<span class="pl-k">|</span><span class="pl-c1">[<span class="pl-c1">0-9a-f</span>]</span><span class="pl-k">+</span><span class="pl-pds">/</span>i</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">else</span> <span class="pl-k">if</span>(g<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-en">a</span>(<span class="pl-smi">d</span>.<span class="pl-en">last</span>(j))<span class="pl-k">||</span><span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">h</span>(<span class="pl-smi">c</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">-</span><span class="pl-c1">1</span>)))<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>;<span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\-</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span>(<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">+</span>)<span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">a-z</span>%<span class="pl-cce">\.</span>]</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>)}<span class="pl-k">else</span> <span class="pl-smi">f</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span>(<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-c1">0-9</span>]</span><span class="pl-k">*</span>)<span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">a-z</span>%]</span><span class="pl-k">*</span><span class="pl-pds">/</span></span>,</td>
      </tr>
      <tr>
        <td id="L208" class="blob-num js-line-number" data-line-number="208"></td>
        <td id="LC208" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">j</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">current</span>());<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>}<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">d</span>.<span class="pl-c1">compact</span>(j),b)},<span class="pl-en">extractValues</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">findValuesInAbbreviation</span>(a);<span class="pl-k">return</span><span class="pl-k">!</span>b<span class="pl-k">?</span>{property<span class="pl-k">:</span>a,values<span class="pl-k">:</span><span class="pl-c1">null</span>}<span class="pl-k">:</span>{property<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>-<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),values<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">parseValues</span>(b)}},<span class="pl-en">normalizeValue</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>(),c<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">getArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.unitlessProperties<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\-</span><span class="pl-k">?</span><span class="pl-c1">[<span class="pl-c1">0-9</span><span class="pl-cce">\.</span>]</span><span class="pl-k">+</span>)(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">f</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(c,b)))<span class="pl-k">return</span> f;e<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-en">getDict</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.unitAliases<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">+=</span>e <span class="pl-k">in</span> a<span class="pl-k">?</span>a[e]<span class="pl-k">:</span></td>
      </tr>
      <tr>
        <td id="L209" class="blob-num js-line-number" data-line-number="209"></td>
        <td id="LC209" class="blob-code blob-code-inner js-file-line">e)<span class="pl-k">:</span>f<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-k">~</span><span class="pl-smi">f</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>css.floatUnit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>css.intUnit<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> f})},<span class="pl-en">expand</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>c<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>,j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.autoInsertVendorPrefixes<span class="pl-pds">&quot;</span></span>),h;<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">.</span><span class="pl-k">+</span>)<span class="pl-cce">\!</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(a))a<span class="pl-k">=</span><span class="pl-c1">RegExp</span>.<span class="pl-smi">$1</span>;<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">findSnippet</span>(c,a);<span class="pl-k">if</span>(l<span class="pl-k">&amp;&amp;!</span>g)<span class="pl-k">return</span> <span class="pl-en">n</span>(l,h,c);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">extractPrefixes</span>(a),o<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">extractValues</span>(<span class="pl-smi">a</span>.<span class="pl-smi">property</span>),a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>(a,o);l<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">values</span><span class="pl-k">=</span><span class="pl-c1">null</span><span class="pl-k">:</span>l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">findSnippet</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">property</span>);<span class="pl-k">!</span>l<span class="pl-k">&amp;&amp;</span><span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearch<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">fuzzyFindSnippet</span>(c,<span class="pl-smi">a</span>.<span class="pl-smi">property</span>,<span class="pl-c1">parseFloat</span>(<span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearchMinScore<span class="pl-pds">&quot;</span></span>))));</td>
      </tr>
      <tr>
        <td id="L210" class="blob-num js-line-number" data-line-number="210"></td>
        <td id="LC210" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(l){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(l))l<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-c1">data</span>}<span class="pl-k">else</span> l<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">property</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:${1};<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">i</span>(l))<span class="pl-k">return</span> l;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">splitSnippet</span>(l),p<span class="pl-k">=</span>[];<span class="pl-k">!</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">values</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">a</span>.<span class="pl-smi">values</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">normalizeValue</span>(a,<span class="pl-smi">m</span>.<span class="pl-c1">name</span>)},<span class="pl-c1">this</span>).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">m</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-smi">m</span>.<span class="pl-c1">value</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">prefixes</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">prefixes</span><span class="pl-k">&amp;&amp;</span>g<span class="pl-k">?</span><span class="pl-en">f</span>(<span class="pl-smi">m</span>.<span class="pl-c1">name</span>,g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">prefixes</span><span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>all<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">prefixes</span>,v<span class="pl-k">=</span>[],w;<span class="pl-smi">d</span>.<span class="pl-en">each</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){a <span class="pl-k">in</span> r<span class="pl-k">&amp;&amp;</span>(w<span class="pl-k">=</span>r[a].<span class="pl-en">transformName</span>(<span class="pl-smi">m</span>.<span class="pl-c1">name</span>),<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(w),<span class="pl-smi">p</span>.<span class="pl-c1">push</span>(<span class="pl-en">n</span>(w<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">value</span>,h,c)))});<span class="pl-smi">p</span>.<span class="pl-c1">push</span>(<span class="pl-en">n</span>(<span class="pl-smi">m</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-c1">value</span>,h,c));<span class="pl-smi">v</span>.<span class="pl-c1">push</span>(<span class="pl-smi">m</span>.<span class="pl-c1">name</span>);<span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.alignVendor<span class="pl-pds">&quot;</span></span>))<span class="pl-k">var</span> s<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L211" class="blob-num js-line-number" data-line-number="211"></td>
        <td id="LC211" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getStringsPads</span>(v),p<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(p,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> s[b]<span class="pl-k">+</span>a});<span class="pl-k">return</span> p},<span class="pl-en">expandToSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">expand</span>(a,<span class="pl-c1">null</span>,b);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(c)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(c)<span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">data</span><span class="pl-k">:</span><span class="pl-c1">String</span>(c)},<span class="pl-en">splitSnippet</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">trim</span>(a);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">return</span>{name<span class="pl-k">:</span>a,value<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>${1};<span class="pl-pds">&quot;</span></span>};a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>{name<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">trim</span>(<span class="pl-smi">a</span>.<span class="pl-c1">shift</span>()),value<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-en">trim</span>(<span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>)).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\$\{</span>0<span class="pl-cce">\}</span><span class="pl-k">|</span><span class="pl-cce">\$</span>0)(<span class="pl-c1">\s</span><span class="pl-k">*</span>;<span class="pl-k">?</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>${1}$2<span class="pl-pds">&quot;</span></span>)}},getSyntaxPreference<span class="pl-k">:</span>l,transformSnippet<span class="pl-k">:</span>n}});</td>
      </tr>
      <tr>
        <td id="L212" class="blob-num js-line-number" data-line-number="212"></td>
        <td id="LC212" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssGradient<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(a).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)}function i(a){var a=h(a),b=null,a=a.replace(/^(\w+\(.+?\))\s*/,function(a,c){b=c;return&quot;&quot;});b||(a=a.split(&quot; &quot;),b=a[0],a=a[1]||&quot;&quot;);var c={color:b};a&amp;&amp;a.replace(/^(\-?[\d\.]+)([a-z%]+)?$/,function(a,b,d){c.position=b;~b.indexOf(&quot;.&quot;)?d=&quot;&quot;:d||(d=&quot;%&quot;);if(d)c.unit=d});return c}function b(a){var b=0;d.each(a,function(c,f){if(!f)return c.position=c.position||0;if(f==a.length-1&amp;&amp;!(&quot;position&quot;in c))c.position=</td>
      </tr>
      <tr>
        <td id="L213" class="blob-num js-line-number" data-line-number="213"></td>
        <td id="LC213" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> c){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[b].<span class="pl-smi">position</span><span class="pl-k">||</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span>(<span class="pl-smi">c</span>.<span class="pl-smi">position</span><span class="pl-k">-</span>e)<span class="pl-k">/</span>(f<span class="pl-k">-</span>b);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-c1">slice</span>(b,f),<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">=</span>e<span class="pl-k">+</span>j<span class="pl-k">*</span>b});b<span class="pl-k">=</span>f}})}function c(a){var b=parseFloat(a);if(!d.isNaN(b))switch(b%360){case 0:return&quot;left&quot;;case 90:return&quot;bottom&quot;;case 180:return&quot;right&quot;;case 240:return&quot;top&quot;}return a}function a(a){a=c(a);if(q.test(a))throw&quot;The direction is an angle that can\u2019t be converted.&quot;;var b=function(b){return~a.indexOf(b)?&quot;100%&quot;:&quot;0&quot;};return b(&quot;right&quot;)+&quot; &quot;+b(&quot;bottom&quot;)+&quot;, &quot;+b(&quot;left&quot;)+&quot; &quot;+b(&quot;top&quot;)}function g(a){var b=</td>
      </tr>
      <tr>
        <td id="L214" class="blob-num js-line-number" data-line-number="214"></td>
        <td id="LC214" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">s</span>.<span class="pl-en">getArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.prefixes<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a})<span class="pl-k">:</span>[];<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(a);<span class="pl-k">return</span> b}function f(a,b){var c=[],f=e(&quot;cssResolver&quot;);s.get(&quot;css.gradient.fallback&quot;)&amp;&amp;~b.toLowerCase().indexOf(&quot;background&quot;)&amp;&amp;c.push({name:&quot;background-color&quot;,value:&quot;${1:&quot;+a.colorStops[0].color+&quot;}&quot;});d.each(s.getArray(&quot;css.gradient.prefixes&quot;),function(d){var e=f.prefixed(b,d);if(d==&quot;webkit&quot;&amp;&amp;s.get(&quot;css.gradient.oldWebkit&quot;))try{c.push({name:e,value:p.oldWebkitLinearGradient(a)})}catch(j){}c.push({name:e,value:p.toString(a,</td>
      </tr>
      <tr>
        <td id="L215" class="blob-num js-line-number" data-line-number="215"></td>
        <td id="LC215" class="blob-code blob-code-inner js-file-line">d)})});<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-c1">sort</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">name</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>.<span class="pl-c1">length</span>})}function j(a,b,c){var j=a.parent,h=e(&quot;utils&quot;),i=e(&quot;preferences&quot;).get(&quot;css.alignVendor&quot;),l=a.styleSeparator,o=a.styleBefore;d.each(j.getAll(g(a.name())),function(b){if(b!=a&amp;&amp;/gradient/i.test(b.value())){if(b.styleSeparator.length&lt;l.length)l=b.styleSeparator;if(b.styleBefore.length&lt;o.length)o=b.styleBefore;j.remove(b)}});if(i){if(o!=a.styleBefore){var m=a.fullRange();j._updateSource(o,m.start,m.start+a.styleBefore.length);a.styleBefore=</td>
      </tr>
      <tr>
        <td id="L216" class="blob-num js-line-number" data-line-number="216"></td>
        <td id="LC216" class="blob-code blob-code-inner js-file-line">o}<span class="pl-k">if</span>(l<span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-smi">styleSeparator</span>)<span class="pl-smi">j</span>.<span class="pl-en">_updateSource</span>(l,<span class="pl-smi">a</span>.<span class="pl-en">nameRange</span>().<span class="pl-smi">end</span>,<span class="pl-smi">a</span>.<span class="pl-en">valueRange</span>().<span class="pl-c1">start</span>),<span class="pl-smi">a</span>.<span class="pl-smi">styleSeparator</span><span class="pl-k">=</span>l}<span class="pl-k">var</span> n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>();c<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>range<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">value</span>()));<span class="pl-smi">a</span>.<span class="pl-c1">value</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-en">replaceSubstring</span>(n,a,c)}(<span class="pl-smi">p</span>.<span class="pl-c1">toString</span>(b))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>${2}<span class="pl-pds">&quot;</span></span>);b<span class="pl-k">=</span><span class="pl-en">f</span>(b,<span class="pl-smi">a</span>.<span class="pl-c1">name</span>());<span class="pl-k">if</span>(i){i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pluck</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>value<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">pluck</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>name<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">i</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-c1">value</span>());<span class="pl-smi">m</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>());<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getStringsPads</span>(<span class="pl-smi">d</span>.<span class="pl-en">map</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>))})),q<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">getStringsPads</span>(m);<span class="pl-smi">a</span>.<span class="pl-c1">name</span>(<span class="pl-smi">d</span>.<span class="pl-en">last</span>(q)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>());<span class="pl-smi">d</span>.<span class="pl-en">each</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>q[b]<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;</td>
      </tr>
      <tr>
        <td id="L217" class="blob-num js-line-number" data-line-number="217"></td>
        <td id="LC217" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>r[b]<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>});<span class="pl-smi">a</span>.<span class="pl-c1">value</span>(<span class="pl-smi">d</span>.<span class="pl-en">last</span>(r)<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>())}<span class="pl-smi">d</span>.<span class="pl-en">each</span>(b,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-smi">j</span>.<span class="pl-c1">add</span>(<span class="pl-smi">b</span>.<span class="pl-c1">name</span>,<span class="pl-smi">b</span>.<span class="pl-c1">value</span>,<span class="pl-smi">j</span>.<span class="pl-c1">indexOf</span>(a))})}function l(a){var b=a.value(),c=null;return(a=d.find(a.valueParts(),function(a){return c=p.parse(a.substring(b))}))&amp;&amp;c?{gradient:c,valueRange:a}:null}function n(a,b){var c=s.get(&quot;css.gradient.defaultProperty&quot;);if(!c)return!1;var j=String(a.getContent()),g=e(&quot;range&quot;).create(a.getCurrentLineRange()),h=g.substring(j).replace(/^\s+/,function(a){g.start+=a.length;return&quot;&quot;}).replace(/\s+$/,function(a){g.end-=</td>
      </tr>
      <tr>
        <td id="L218" class="blob-num js-line-number" data-line-number="218"></td>
        <td id="LC218" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}),j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssResolver<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(h<span class="pl-k">=</span><span class="pl-smi">p</span>.<span class="pl-c1">parse</span>(h)){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-en">f</span>(h,c);<span class="pl-smi">i</span>.<span class="pl-c1">push</span>({name<span class="pl-k">:</span>c,value<span class="pl-k">:</span><span class="pl-smi">p</span>.<span class="pl-c1">toString</span>(h)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>${2}<span class="pl-pds">&quot;</span></span>});<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">getSyntaxPreference</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>valueSeparator<span class="pl-pds">&quot;</span></span>,b),o<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">getSyntaxPreference</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>propertyEnd<span class="pl-pds">&quot;</span></span>,b);<span class="pl-k">if</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.alignVendor<span class="pl-pds">&quot;</span></span>)){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getStringsPads</span>(<span class="pl-smi">d</span>.<span class="pl-en">map</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">value</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">value</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>))}));<span class="pl-smi">d</span>.<span class="pl-en">each</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">a</span>.<span class="pl-c1">value</span><span class="pl-k">=</span>m[b]<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>})}i<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(i,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">+</span>l<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span><span class="pl-k">+</span>o});<span class="pl-smi">a</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">i</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">g</span>.<span class="pl-c1">start</span>,<span class="pl-smi">g</span>.<span class="pl-smi">end</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}</td>
      </tr>
      <tr>
        <td id="L219" class="blob-num js-line-number" data-line-number="219"></td>
        <td id="LC219" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">m</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">null</span>,f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssEditTree<span class="pl-pds">&quot;</span></span>).<span class="pl-en">parseFromPosition</span>(a,b,<span class="pl-k">!</span><span class="pl-c1">0</span>);f<span class="pl-k">&amp;&amp;</span>((c<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">itemFromPosition</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>))<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-smi">f</span>.<span class="pl-en">list</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">range</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-smi">end</span><span class="pl-k">==</span>b})));<span class="pl-k">return</span>{rule<span class="pl-k">:</span>f,property<span class="pl-k">:</span>c}}<span class="pl-k">var</span> o<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>top<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>to bottom<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>0deg<span class="pl-pds">&quot;</span></span>],p<span class="pl-k">=</span><span class="pl-c1">null</span>,r<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>less<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sass<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>scss<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>stylus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>styl<span class="pl-pds">&quot;</span></span>],q<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\d</span><span class="pl-k">+</span>deg<span class="pl-pds">/</span>i</span>,u<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>top<span class="pl-k">|</span>bottom<span class="pl-k">|</span>left<span class="pl-k">|</span>right<span class="pl-pds">/</span>i</span>,s<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.prefixes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>webkit, moz, o<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of vendor-prefixes for which values should be generated.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.oldWebkit<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L220" class="blob-num js-line-number" data-line-number="220"></td>
        <td id="LC220" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Generate gradient definition for old Webkit implementations<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.omitDefaultDirection<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Do not output default direction definition in generated gradients.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.defaultProperty<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>background-image<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>When gradient expanded outside CSS value context, it will produce properties with this name.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">s</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.fallback<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>With this option enabled, CSS gradient generator will produce &lt;code&gt;background-color&lt;/code&gt; property with gradient first color as fallback for old browsers.<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L221" class="blob-num js-line-number" data-line-number="221"></td>
        <td id="LC221" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>expandAbbreviation<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addHandler</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editorUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">outputInfo</span>(a,b,c);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(r,<span class="pl-smi">c</span>.<span class="pl-smi">syntax</span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">getCaretPos</span>(),g<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">content</span>,c<span class="pl-k">=</span><span class="pl-en">m</span>(g,f);<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-smi">property</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">c</span>.<span class="pl-smi">property</span>);<span class="pl-k">if</span>(h){<span class="pl-k">var</span> i<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">rule</span>.<span class="pl-c1">options</span>.<span class="pl-smi">offset</span><span class="pl-k">||</span><span class="pl-c1">0</span>,o<span class="pl-k">=</span>i<span class="pl-k">+</span><span class="pl-smi">c</span>.<span class="pl-smi">rule</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">length</span>;<span class="pl-k">if</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\n\r</span>]</span><span class="pl-pds">/</span></span>.<span class="pl-c1">test</span>(<span class="pl-smi">c</span>.<span class="pl-smi">property</span>.<span class="pl-c1">value</span>())){<span class="pl-k">var</span> p<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">property</span>.<span class="pl-en">valueRange</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>).<span class="pl-c1">start</span><span class="pl-k">+</span><span class="pl-smi">h</span>.<span class="pl-smi">valueRange</span>.<span class="pl-smi">end</span>,g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">replaceSubstring</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>,p),f<span class="pl-k">=</span><span class="pl-en">m</span>(g,f);<span class="pl-smi">f</span>.<span class="pl-smi">property</span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-en">l</span>(<span class="pl-smi">f</span>.<span class="pl-smi">property</span>),c<span class="pl-k">=</span>f)}<span class="pl-smi">c</span>.<span class="pl-smi">property</span>.<span class="pl-en">end</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">property</span>.<span class="pl-c1">name</span>(),g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L222" class="blob-num js-line-number" data-line-number="222"></td>
        <td id="LC222" class="blob-code blob-code-inner js-file-line">p<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>),q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">findSnippet</span>(b,f);<span class="pl-k">!</span>q<span class="pl-k">&amp;&amp;</span><span class="pl-smi">p</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearch<span class="pl-pds">&quot;</span></span>)<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-en">fuzzyFindSnippet</span>(b,f,<span class="pl-c1">parseFloat</span>(<span class="pl-smi">p</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.fuzzySearchMinScore<span class="pl-pds">&quot;</span></span>))));<span class="pl-k">if</span>(q){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-en">isString</span>(q))q<span class="pl-k">=</span><span class="pl-smi">q</span>.<span class="pl-c1">data</span>;b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>cssResolver<span class="pl-pds">&quot;</span></span>).<span class="pl-en">splitSnippet</span>(q).<span class="pl-c1">name</span>}<span class="pl-k">else</span> b<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">property</span>.<span class="pl-c1">name</span>(b);<span class="pl-en">j</span>(<span class="pl-smi">c</span>.<span class="pl-smi">property</span>,<span class="pl-smi">h</span>.<span class="pl-smi">gradient</span>,<span class="pl-smi">h</span>.<span class="pl-smi">valueRange</span>);<span class="pl-smi">a</span>.<span class="pl-en">replaceContent</span>(<span class="pl-smi">c</span>.<span class="pl-smi">rule</span>.<span class="pl-c1">toString</span>(),i,o,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}}<span class="pl-k">return</span> <span class="pl-en">n</span>(a,b)});<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>reflectCSSValue<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addHandler</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-en">l</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">value</span>(),<span class="pl-en">j</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">replaceSubstring</span>(f,a,</td>
      </tr>
      <tr>
        <td id="L223" class="blob-num js-line-number" data-line-number="223"></td>
        <td id="LC223" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">c</span>.<span class="pl-smi">valueRange</span>)};<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">getAll</span>(<span class="pl-en">g</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>())),<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(b<span class="pl-k">!==</span>a){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>().<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-cce">\-</span>(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\-</span>)<span class="pl-k">?</span>linear<span class="pl-cce">\-</span>gradient<span class="pl-pds">/</span></span>);d<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>(<span class="pl-en">j</span>(<span class="pl-smi">p</span>.<span class="pl-c1">toString</span>(<span class="pl-smi">c</span>.<span class="pl-smi">gradient</span>,d[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)))<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>().<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">*</span><span class="pl-cce">\-</span>webkit<span class="pl-cce">\-</span>gradient<span class="pl-pds">/</span></span>)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">value</span>(<span class="pl-en">j</span>(<span class="pl-smi">p</span>.<span class="pl-en">oldWebkitLinearGradient</span>(<span class="pl-smi">c</span>.<span class="pl-smi">gradient</span>)))}});<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>});<span class="pl-k">return</span> p<span class="pl-k">=</span>{<span class="pl-en">parse</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(a).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-c1">[<span class="pl-c1">\w</span><span class="pl-cce">\-</span>]</span><span class="pl-k">+</span>)<span class="pl-cce">\(</span>(<span class="pl-c1">.</span><span class="pl-k">+?</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">f</span>){c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-cce">\-</span><span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">+</span><span class="pl-cce">\-</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear-gradient<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>lg<span class="pl-pds">&quot;</span></span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span>o[<span class="pl-c1">0</span>],f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>stringStream<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(f)),</td>
      </tr>
      <tr>
        <td id="L224" class="blob-num js-line-number" data-line-number="224"></td>
        <td id="LC224" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">=</span>[],j;j<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">next</span>();)<span class="pl-smi">f</span>.<span class="pl-en">peek</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">current</span>()),<span class="pl-smi">f</span>.<span class="pl-c1">next</span>(),<span class="pl-smi">f</span>.<span class="pl-en">eatSpace</span>(),<span class="pl-smi">f</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">pos</span>)<span class="pl-k">:</span>j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">skipTo</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-smi">f</span>.<span class="pl-c1">current</span>());c<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">compact</span>(<span class="pl-smi">d</span>.<span class="pl-en">map</span>(c,h));<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">length</span>){<span class="pl-k">if</span>(<span class="pl-smi">q</span>.<span class="pl-c1">test</span>(c[<span class="pl-c1">0</span>])<span class="pl-k">||</span><span class="pl-smi">u</span>.<span class="pl-c1">test</span>(c[<span class="pl-c1">0</span>]))a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">shift</span>();b<span class="pl-k">=</span>{type<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>,direction<span class="pl-k">:</span>a,colorStops<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(c,i)}}<span class="pl-k">else</span> b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}<span class="pl-k">return</span> a});<span class="pl-k">return</span> b},<span class="pl-en">oldWebkitLinearGradient</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">parse</span>(c));<span class="pl-k">if</span>(<span class="pl-k">!</span>c)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">c</span>.<span class="pl-smi">colorStops</span>,<span class="pl-smi">d</span>.<span class="pl-smi">clone</span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a)<span class="pl-k">if</span>(<span class="pl-k">~</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">unit</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L225" class="blob-num js-line-number" data-line-number="225"></td>
        <td id="LC225" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>)<span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">=</span><span class="pl-c1">parseFloat</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span>)<span class="pl-k">/</span>(<span class="pl-smi">a</span>.<span class="pl-smi">unit</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-c1">100</span><span class="pl-k">:</span><span class="pl-c1">1</span>);<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Can&#39;t convert color stop &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">unit</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>;});<span class="pl-en">b</span>(f);f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(f,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">&amp;&amp;!</span>b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>from(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">==</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>to(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color-stop(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>.<span class="pl-en">toFixed</span>(<span class="pl-c1">2</span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\.</span><span class="pl-k">?</span>0<span class="pl-k">+</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>});<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-gradient(linear, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">a</span>(<span class="pl-smi">c</span>.<span class="pl-smi">direction</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>},<span class="pl-en">toString</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-c1">type</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear<span class="pl-pds">&quot;</span></span>){<span class="pl-k">var</span> c<span class="pl-k">=</span>(b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>linear-gradient<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">a</span>.<span class="pl-smi">colorStops</span>,</td>
      </tr>
      <tr>
        <td id="L226" class="blob-num js-line-number" data-line-number="226"></td>
        <td id="LC226" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">color</span><span class="pl-k">+</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>position<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> a<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">+</span>(<span class="pl-smi">a</span>.<span class="pl-smi">unit</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)});<span class="pl-smi">a</span>.<span class="pl-smi">direction</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">s</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>css.gradient.omitDefaultDirection<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||!</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(o,<span class="pl-smi">a</span>.<span class="pl-smi">direction</span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-c1">unshift</span>(<span class="pl-smi">a</span>.<span class="pl-smi">direction</span>);<span class="pl-k">return</span> c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">f</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>}}}});<span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>handlerList<span class="pl-pds">&quot;</span></span>).<span class="pl-en">create</span>(),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">extend</span>(i,{<span class="pl-en">addGenerator</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(b)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">RegExp</span>(b));<span class="pl-smi">h</span>.<span class="pl-c1">add</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;<span class="pl-k">return</span>(e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">exec</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>()))<span class="pl-k">?</span><span class="pl-en">c</span>(e,a,d)<span class="pl-k">:</span><span class="pl-c1">null</span>},a)}});<span class="pl-smi">i</span>.<span class="pl-en">addResolver</span>(<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">exec</span>(<span class="pl-c1">null</span>,<span class="pl-smi">d</span>.<span class="pl-en">toArray</span>(<span class="pl-c1">arguments</span>))})});</td>
      </tr>
      <tr>
        <td id="L227" class="blob-num js-line-number" data-line-number="227"></td>
        <td id="LC227" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tagName<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>{empty<span class="pl-k">:</span>[],blockLevel<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>address,applet,blockquote,button,center,dd,del,dir,div,dl,dt,fieldset,form,frameset,hr,iframe,ins,isindex,li,link,map,menu,noframes,noscript,object,ol,p,pre,script,table,tbody,td,tfoot,th,thead,tr,ul,h1,h2,h3,h4,h5,h6<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),inlineLevel<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>a,abbr,acronym,applet,b,basefont,bdo,big,br,button,cite,code,del,dfn,em,font,i,iframe,img,input,ins,kbd,label,map,object,q,s,samp,select,small,span,strike,strong,sub,sup,textarea,tt,u,var<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)},</td>
      </tr>
      <tr>
        <td id="L228" class="blob-num js-line-number" data-line-number="228"></td>
        <td id="LC228" class="blob-code blob-code-inner js-file-line">i<span class="pl-k">=</span>{p<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span>,ul<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>,ol<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>li<span class="pl-pds">&quot;</span></span>,table<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>,tr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>td<span class="pl-pds">&quot;</span></span>,tbody<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>,thead<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>,tfoot<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tr<span class="pl-pds">&quot;</span></span>,colgroup<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>col<span class="pl-pds">&quot;</span></span>,select<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>,optgroup<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>,audio<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>source<span class="pl-pds">&quot;</span></span>,video<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>source<span class="pl-pds">&quot;</span></span>,object<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>param<span class="pl-pds">&quot;</span></span>,map<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>area<span class="pl-pds">&quot;</span></span>};<span class="pl-k">return</span>{<span class="pl-en">resolve</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">=</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span> b <span class="pl-k">in</span> i<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">getMapping</span>(b)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">isInlineLevel</span>(b)<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>span<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>div<span class="pl-pds">&quot;</span></span>},<span class="pl-en">getMapping</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> i[<span class="pl-smi">b</span>.<span class="pl-c1">toLowerCase</span>()]},<span class="pl-en">isInlineLevel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isTypeOf</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>inlineLevel<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">isBlockLevel</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isTypeOf</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>blockLevel<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">isEmptyElement</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">isTypeOf</span>(b,</td>
      </tr>
      <tr>
        <td id="L229" class="blob-num js-line-number" data-line-number="229"></td>
        <td id="LC229" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>empty<span class="pl-pds">&quot;</span></span>)},<span class="pl-en">isTypeOf</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">include</span>(h[c],b)},<span class="pl-en">addMapping</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){i[b]<span class="pl-k">=</span>c},<span class="pl-en">removeMapping</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b <span class="pl-k">in</span> i<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> i[b]},<span class="pl-en">addElementToCollection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){h[c]<span class="pl-k">||</span>(h[c]<span class="pl-k">=</span>[]);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCollection</span>(c);<span class="pl-smi">d</span>.<span class="pl-en">include</span>(a,b)<span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-c1">push</span>(b)},<span class="pl-en">removeElementFromCollection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){c <span class="pl-k">in</span> h<span class="pl-k">&amp;&amp;</span>(h[c]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">without</span>(<span class="pl-c1">this</span>.<span class="pl-en">getCollection</span>(c),b))},<span class="pl-en">getCollection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> h[b]}}});</td>
      </tr>
      <tr>
        <td id="L230" class="blob-num js-line-number" data-line-number="230"></td>
        <td id="LC230" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(){<span class="pl-k">return</span>{element<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bem.elementSeparator<span class="pl-pds">&quot;</span></span>),modifier<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bem.modifierSeparator<span class="pl-pds">&quot;</span></span>)}}function i(a){if(e(&quot;abbreviationUtils&quot;).isSnippet(a))return a;a.__bem={block:&quot;&quot;,element:&quot;&quot;,modifier:&quot;&quot;};var f=b(a.attribute(&quot;class&quot;)).split(&quot; &quot;),g=/^[a-z]\-/i;a.__bem.block=d.find(f,function(a){return g.test(a)});if(!a.__bem.block)g=/^[a-z]/i,a.__bem.block=d.find(f,function(a){return g.test(a)})||&quot;&quot;;(f=d.chain(f).map(function(b){var d;d=c(b,a,&quot;element&quot;);d=c(d,a,&quot;modifier&quot;);var f=</td>
      </tr>
      <tr>
        <td id="L231" class="blob-num js-line-number" data-line-number="231"></td>
        <td id="LC231" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-en">h</span>();<span class="pl-k">~</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">b</span>.<span class="pl-smi">element</span>)<span class="pl-k">?</span>(f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-smi">b</span>.<span class="pl-smi">element</span>),g<span class="pl-k">=</span>f[<span class="pl-c1">1</span>].<span class="pl-c1">split</span>(<span class="pl-smi">b</span>.<span class="pl-smi">modifier</span>),f<span class="pl-k">=</span>f[<span class="pl-c1">0</span>],e<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">shift</span>(),g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-smi">b</span>.<span class="pl-smi">modifier</span>))<span class="pl-k">:</span><span class="pl-k">~</span><span class="pl-smi">d</span>.<span class="pl-c1">indexOf</span>(<span class="pl-smi">b</span>.<span class="pl-smi">modifier</span>)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">split</span>(<span class="pl-smi">b</span>.<span class="pl-smi">modifier</span>),f<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">shift</span>(),g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">join</span>(<span class="pl-smi">b</span>.<span class="pl-smi">modifier</span>));<span class="pl-k">if</span>(f<span class="pl-k">||</span>e<span class="pl-k">||</span>g){<span class="pl-k">if</span>(<span class="pl-k">!</span>f)f<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">__bem</span>.<span class="pl-smi">block</span>;d<span class="pl-k">=</span>f;<span class="pl-k">var</span> i<span class="pl-k">=</span>[];e<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-smi">element</span><span class="pl-k">+</span>e);<span class="pl-smi">i</span>.<span class="pl-c1">push</span>(d);g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">i</span>.<span class="pl-c1">push</span>(d<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">modifier</span><span class="pl-k">+</span>g);<span class="pl-smi">a</span>.<span class="pl-smi">__bem</span>.<span class="pl-smi">block</span><span class="pl-k">=</span>f;<span class="pl-smi">a</span>.<span class="pl-smi">__bem</span>.<span class="pl-smi">element</span><span class="pl-k">=</span>e;<span class="pl-smi">a</span>.<span class="pl-smi">__bem</span>.<span class="pl-smi">modifier</span><span class="pl-k">=</span>g;b<span class="pl-k">=</span>i}<span class="pl-k">else</span> b<span class="pl-k">=</span>d;<span class="pl-k">return</span> b}).<span class="pl-en">flatten</span>().<span class="pl-en">uniq</span>().<span class="pl-c1">value</span>().<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>))<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-en">attribute</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>,f);<span class="pl-k">return</span> a}function b(a){var b=e(&quot;utils&quot;),a=(&quot; &quot;+(a||</td>
      </tr>
      <tr>
        <td id="L232" class="blob-num js-line-number" data-line-number="232"></td>
        <td id="LC232" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bem.shortElementPrefix<span class="pl-pds">&quot;</span></span>);c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">RegExp</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span>s(<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-en">escapeForRegexp</span>(c)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>+)<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>g<span class="pl-pds">&quot;</span></span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-en">repeatString</span>(<span class="pl-en">h</span>().<span class="pl-smi">element</span>,<span class="pl-smi">c</span>.<span class="pl-c1">length</span>)}));<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-en">trim</span>(a)}function c(a,b,c){var d=h(),f=RegExp(&quot;^(&quot;+d[c]+&quot;)+&quot;,&quot;g&quot;);if(f.test(a)){for(var e=0,f=a.replace(f,function(a){e=a.length/d[c].length;return&quot;&quot;}),g=b;g.parent&amp;&amp;e--;)g=g.parent;if(!g||!g.__bem)g=b;if(g&amp;&amp;g.__bem)return a=g.__bem.block,c==&quot;modifier&quot;&amp;&amp;g.__bem.element&amp;&amp;(a+=d.element+g.__bem.element),</td>
      </tr>
      <tr>
        <td id="L233" class="blob-num js-line-number" data-line-number="233"></td>
        <td id="LC233" class="blob-code blob-code-inner js-file-line">a<span class="pl-k">+</span>d[c]<span class="pl-k">+</span>f}<span class="pl-k">return</span> a}function a(b,c){b.name&amp;&amp;i(b,c);var g=e(&quot;abbreviationUtils&quot;);d.each(b.children,function(b){a(b,c);!g.isSnippet(b)&amp;&amp;b.start&amp;&amp;(f=!0)});return b}var g=e(&quot;preferences&quot;);g.define(&quot;bem.elementSeparator&quot;,&quot;__&quot;,&quot;Class name\u2019s element separator.&quot;);g.define(&quot;bem.modifierSeparator&quot;,&quot;_&quot;,&quot;Class name\u2019s modifier separator.&quot;);g.define(&quot;bem.shortElementPrefix&quot;,&quot;-&quot;,&quot;Symbol for describing short \u201cblock-element\u201d notation. Class names prefixed with this symbol will be treated as element name for parent\u2018s block name. Each symbol instance traverses one level up in parsed tree for block name lookup. Empty value will disable short notation.&quot;);</td>
      </tr>
      <tr>
        <td id="L234" class="blob-num js-line-number" data-line-number="234"></td>
        <td id="LC234" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>bem<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){f<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span><span class="pl-en">a</span>(b,c);f<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">apply</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,c));<span class="pl-k">return</span> b})});</td>
      </tr>
      <tr>
        <td id="L235" class="blob-num js-line-number" data-line-number="235"></td>
        <td id="LC235" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),j<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentTrigger<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(j<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(<span class="pl-smi">j</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span><span class="pl-smi">c</span>.<span class="pl-en">attribute</span>(<span class="pl-smi">f</span>.<span class="pl-en">trim</span>(a))}))j<span class="pl-k">=</span>{node<span class="pl-k">:</span>c,name<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span>(),padding<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">parent</span><span class="pl-k">?</span><span class="pl-smi">c</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">padding</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">attr</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">attribute</span>(a))<span class="pl-k">?</span>(b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>a<span class="pl-k">+</span>(d<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>}},a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">normalizeNewline</span>(a<span class="pl-k">?</span><span class="pl-en">a</span>(j)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">normalizeNewline</span>(g<span class="pl-k">?</span><span class="pl-en">g</span>(j)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&lt;<span class="pl-pds">/</span></span>,a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>),<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">end</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>&gt;<span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g)}function i(b,a,g){var f=e(&quot;abbreviationUtils&quot;);d.each(b.children,function(b){f.isBlock(b)&amp;&amp;</td>
      </tr>
      <tr>
        <td id="L236" class="blob-num js-line-number" data-line-number="236"></td>
        <td id="LC236" class="blob-code blob-code-inner js-file-line"><span class="pl-en">h</span>(b,a,g);<span class="pl-en">i</span>(b,a,g)});<span class="pl-k">return</span> b}<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentAfter<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&#39;</span><span class="pl-cce">\n</span>&lt;<span class="pl-cce">\!</span>-- /&lt;%= attr(&quot;id&quot;, &quot;#&quot;) %&gt;&lt;%= attr(&quot;class&quot;, &quot;.&quot;) %&gt; --<span class="pl-cce">\&gt;</span><span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A definition of comment that should be placed &lt;i&gt;after&lt;/i&gt; matched element when &lt;code&gt;comment&lt;/code&gt; filter is applied. This definition is an ERB-style template passed to &lt;code&gt;_.template()&lt;/code&gt; function (see Underscore.js docs for details). In template context, the following properties and functions are availabe:<span class="pl-cce">\n</span>&lt;ul&gt;&lt;li&gt;&lt;code&gt;attr(name, before, after)&lt;/code&gt; <span class="pl-cce">\u2013</span> a function that outputsspecified attribute value concatenated with &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; strings. If attribute doesn&#39;t exists, the empty string will be returned.&lt;/li&gt;&lt;li&gt;&lt;code&gt;node&lt;/code&gt; <span class="pl-cce">\u2013</span> current node (instance of &lt;code&gt;AbbreviationNode&lt;/code&gt;)&lt;/li&gt;&lt;li&gt;&lt;code&gt;name&lt;/code&gt; <span class="pl-cce">\u2013</span> name of current tag&lt;/li&gt;&lt;li&gt;&lt;code&gt;padding&lt;/code&gt; <span class="pl-cce">\u2013</span> current string padding, can be used for formatting&lt;/li&gt;&lt;/ul&gt;<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L237" class="blob-num js-line-number" data-line-number="237"></td>
        <td id="LC237" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentBefore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A definition of comment that should be placed &lt;i&gt;before&lt;/i&gt; matched element when &lt;code&gt;comment&lt;/code&gt; filter is applied. For more info, read description of &lt;code&gt;filter.commentAfter&lt;/code&gt; property<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">b</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentTrigger<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>id, class<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of attribute names that should exist in abbreviatoin where comment should be added. If you wish to add comment for every element, set this option to &lt;code&gt;*&lt;/code&gt;<span class="pl-pds">&quot;</span></span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>c<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L238" class="blob-num js-line-number" data-line-number="238"></td>
        <td id="LC238" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">template</span>(<span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentBefore<span class="pl-pds">&quot;</span></span>)),e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">template</span>(<span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.commentAfter<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> <span class="pl-en">i</span>(c,a,e)})});<span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span>(<span class="pl-c1">[&lt;&gt;&amp;]</span>)<span class="pl-pds">/</span>g</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">a</span>){<span class="pl-k">return</span> i[a]})}<span class="pl-k">var</span> i<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&amp;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;amp;<span class="pl-pds">&quot;</span></span>};<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>e<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-c1">start</span>);<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-smi">end</span>);<span class="pl-smi">a</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-c1">content</span>);<span class="pl-en">c</span>(a)});<span class="pl-k">return</span> a})});</td>
      </tr>
      <tr>
        <td id="L239" class="blob-num js-line-number" data-line-number="239"></td>
        <td id="LC239" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">a</span>.<span class="pl-c1">index</span>()}function i(a,c){var d=e(&quot;abbreviationUtils&quot;);return c.tag_nl===!0||d.isBlock(a)?!0:!a.parent||!c.inline_break?!1:b(a.parent,c)}function b(a,b){var c=0,h=e(&quot;abbreviationUtils&quot;);return!!d.find(a.children,function(a){a.isTextNode()||!h.isInline(a)?c=0:h.isInline(a)&amp;&amp;c++;if(c&gt;=b.inline_break)return!0})}function c(a,c){var h=e(&quot;abbreviationUtils&quot;);return!d.any(a.children,function(a){return h.isSnippet(a)?!1:!h.isInline(a)})?</td>
      </tr>
      <tr>
        <td id="L240" class="blob-num js-line-number" data-line-number="240"></td>
        <td id="LC240" class="blob-code blob-code-inner js-file-line"><span class="pl-en">b</span>(a,c)<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>format.noIndentTags<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of tag names that should not get inner indentation.<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>format.forceIndentationForTags<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>body<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>A comma-separated list of tag names that should &lt;em&gt;always&lt;/em&gt; get inner indentation.<span class="pl-pds">&quot;</span></span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>_format<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">f</span>(<span class="pl-smi">b</span>,<span class="pl-smi">l</span>,<span class="pl-smi">n</span>){<span class="pl-k">var</span> n<span class="pl-k">=</span>n<span class="pl-k">||</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">b</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">m</span>.<span class="pl-en">isSnippet</span>(b)){<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-en">h</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">l</span>.<span class="pl-smi">tag_nl</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">i</span>(b,l)<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">parent</span><span class="pl-k">||!</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">isInline</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parent</span>)))<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L241" class="blob-num js-line-number" data-line-number="241"></td>
        <td id="LC241" class="blob-code blob-code-inner js-file-line"><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getNewline</span>()<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>}<span class="pl-k">else</span>{<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> j<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),r<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>),q<span class="pl-k">=</span><span class="pl-smi">r</span>.<span class="pl-en">isUnary</span>(b),j<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-en">getNewline</span>(),u<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(<span class="pl-smi">a</span>.<span class="pl-en">getArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>format.noIndentTags<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>[],<span class="pl-smi">b</span>.<span class="pl-c1">name</span>())<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>resources<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getVariable</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>indentation<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-smi">l</span>.<span class="pl-smi">tag_nl</span><span class="pl-k">!==</span><span class="pl-k">!</span><span class="pl-c1">1</span>){<span class="pl-k">var</span> s<span class="pl-k">=</span><span class="pl-smi">l</span>.<span class="pl-smi">tag_nl</span><span class="pl-k">===</span><span class="pl-k">!</span><span class="pl-c1">0</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">l</span>.<span class="pl-smi">tag_nl_leaf</span><span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>);s<span class="pl-k">||</span>(s<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">include</span>(<span class="pl-smi">a</span>.<span class="pl-en">getArray</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>format.forceIndentationForTags<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span>[],<span class="pl-smi">b</span>.<span class="pl-c1">name</span>()));<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-en">isTextNode</span>()){<span class="pl-k">if</span>(<span class="pl-en">i</span>(b,l)){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">h</span>(b)<span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span><span class="pl-smi">r</span>.<span class="pl-en">isSnippet</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parent</span>)<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-c1">index</span>()))<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>;<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-en">hasBlockChildren</span>(b)<span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L242" class="blob-num js-line-number" data-line-number="242"></td>
        <td id="LC242" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">i</span>(<span class="pl-smi">b</span>.<span class="pl-smi">children</span>[<span class="pl-c1">0</span>],l)<span class="pl-k">||</span>s<span class="pl-k">&amp;&amp;!</span>q)<span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span>;<span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-en">hasTagsInContent</span>(b)<span class="pl-k">||</span>s<span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>q)<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span>j<span class="pl-k">+</span>u}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-en">isInline</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">parent</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">hasBlockChildren</span>(<span class="pl-smi">b</span>.<span class="pl-c1">parent</span>)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">h</span>(b))<span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">r</span>.<span class="pl-en">isInline</span>(b)<span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(b,l))<span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">=</span>j<span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span>;<span class="pl-smi">b</span>.<span class="pl-smi">padding</span><span class="pl-k">=</span>u}}}<span class="pl-en">f</span>(b,l,n<span class="pl-k">+</span><span class="pl-c1">1</span>)});<span class="pl-k">return</span> b})});</td>
      </tr>
      <tr>
        <td id="L243" class="blob-num js-line-number" data-line-number="243"></td>
        <td id="LC243" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">h</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span>[],g<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">attributeQuote</span>(),f<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">cursor</span>();<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">h</span>.<span class="pl-en">attributeList</span>(),<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">attributeName</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span>);<span class="pl-k">switch</span>(<span class="pl-smi">h</span>.<span class="pl-c1">toLowerCase</span>()){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span>f);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>class<span class="pl-pds">&quot;</span></span>:c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">trim</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span>f).<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>h<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> =&gt; <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g<span class="pl-k">+</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span>f)<span class="pl-k">+</span>g)}});<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>, <span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>}<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> c}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>haml<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>g<span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">apply</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>_format<span class="pl-pds">&quot;</span></span>,a));</td>
      </tr>
      <tr>
        <td id="L244" class="blob-num js-line-number" data-line-number="244"></td>
        <td id="LC244" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">c</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">isSnippet</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">parent</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-en">h</span>(c,a),o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">cursor</span>(),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isUnary</span>(c),p<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">self_closing_tag</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>(<span class="pl-smi">c</span>.<span class="pl-c1">name</span>());<span class="pl-smi">r</span>.<span class="pl-c1">toLowerCase</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>%div<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-smi">m</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>{<span class="pl-pds">&quot;</span></span>)<span class="pl-k">==</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-en">replaceSubstring</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,r<span class="pl-k">+</span>m<span class="pl-k">+</span>p<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span>o)}<span class="pl-en">b</span>(c,a,g<span class="pl-k">+</span><span class="pl-c1">1</span>)});<span class="pl-k">return</span> c})});</td>
      </tr>
      <tr>
        <td id="L245" class="blob-num js-line-number" data-line-number="245"></td>
        <td id="LC245" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">attributeQuote</span>(),a<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">cursor</span>();<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-smi">e</span>.<span class="pl-en">attributeList</span>(),<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-en">attributeName</span>(<span class="pl-smi">d</span>.<span class="pl-c1">name</span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span>(<span class="pl-smi">d</span>.<span class="pl-c1">value</span><span class="pl-k">||</span>a)<span class="pl-k">+</span>c}).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>g<span class="pl-k">||</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>);g<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">apply</span>(c,<span class="pl-s"><span class="pl-pds">&quot;</span>_format<span class="pl-pds">&quot;</span></span>,a));<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">c</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-en">isSnippet</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-c1">parent</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>),n<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),m<span class="pl-k">=</span><span class="pl-en">h</span>(c,a),o<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">cursor</span>(),d<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isUnary</span>(c),p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-en">isTextNode</span>()){<span class="pl-k">var</span> q<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">tagName</span>(<span class="pl-smi">c</span>.<span class="pl-c1">name</span>());</td>
      </tr>
      <tr>
        <td id="L246" class="blob-num js-line-number" data-line-number="246"></td>
        <td id="LC246" class="blob-code blob-code-inner js-file-line">d<span class="pl-k">?</span>(p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span>m<span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-en">selfClosing</span>()<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>(p<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span>m<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>q<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>)}<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-en">replaceSubstring</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span>,p,<span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">c</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">n</span>.<span class="pl-en">replaceSubstring</span>(<span class="pl-smi">c</span>.<span class="pl-smi">end</span>,r,<span class="pl-smi">c</span>.<span class="pl-smi">end</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>),<span class="pl-s"><span class="pl-pds">&quot;</span>%s<span class="pl-pds">&quot;</span></span>);<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;!</span>d<span class="pl-k">&amp;&amp;!</span><span class="pl-k">~</span><span class="pl-smi">c</span>.<span class="pl-c1">content</span>.<span class="pl-c1">indexOf</span>(o)<span class="pl-k">&amp;&amp;!</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>).<span class="pl-en">extract</span>(<span class="pl-smi">c</span>.<span class="pl-c1">content</span>).<span class="pl-smi">tabstops</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span>o)}<span class="pl-en">b</span>(c,a,g<span class="pl-k">+</span><span class="pl-c1">1</span>)});<span class="pl-k">return</span> c})});</td>
      </tr>
      <tr>
        <td id="L247" class="blob-num js-line-number" data-line-number="247"></td>
        <td id="LC247" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span><span class="pl-c1">\s</span><span class="pl-k">+</span><span class="pl-pds">/</span></span>,i<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">[<span class="pl-c1">\n\r</span>]</span><span class="pl-pds">/</span>g</span>;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>s<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">c</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">a</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">g</span>.<span class="pl-en">isSnippet</span>(a))<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>.<span class="pl-c1">replace</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>),<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>.<span class="pl-c1">replace</span>(h,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">start</span>.<span class="pl-c1">replace</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">end</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">end</span>.<span class="pl-c1">replace</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">content</span>.<span class="pl-c1">replace</span>(i,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-en">c</span>(a)});<span class="pl-k">return</span> a})});</td>
      </tr>
      <tr>
        <td id="L248" class="blob-num js-line-number" data-line-number="248"></td>
        <td id="LC248" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">e</span>,<span class="pl-smi">b</span>){<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">e</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">content</span>)<span class="pl-smi">c</span>.<span class="pl-c1">content</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">content</span>.<span class="pl-c1">replace</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-en">h</span>(c,b)});<span class="pl-k">return</span> e}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>).<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.trimRegexp<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>[<span class="pl-cce">\\</span>s|<span class="pl-cce">\\</span>u00a0]*[<span class="pl-cce">\\</span>d|#|<span class="pl-cce">\\</span>-|*|<span class="pl-cce">\\</span>u2022]+<span class="pl-cce">\\</span>.?<span class="pl-cce">\\</span>s*<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Regular expression used to remove list markers (numbers, dashes, bullets, etc.) in &lt;code&gt;t&lt;/code&gt; (trim) filter. The trim filter is useful for wrapping with abbreviation lists, pased from other documents (for example, Word documents).<span class="pl-pds">&quot;</span></span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>t<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L249" class="blob-num js-line-number" data-line-number="249"></td>
        <td id="LC249" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">RegExp</span>(<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filter.trimRegexp<span class="pl-pds">&quot;</span></span>));<span class="pl-k">return</span> <span class="pl-en">h</span>(d,b)})});<span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>xsl:variable<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xsl:with-param<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1</span>};<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>filters<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>xsl<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">c</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationUtils<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(<span class="pl-smi">c</span>.<span class="pl-smi">children</span>,<span class="pl-k">function</span>(<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-en">isSnippet</span>(c)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-c1">name</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>).<span class="pl-c1">toLowerCase</span>()<span class="pl-k">in</span> h<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">children</span>.<span class="pl-c1">length</span>)<span class="pl-smi">c</span>.<span class="pl-c1">start</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">start</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-c1">\s</span><span class="pl-k">+</span>select<span class="pl-c1">\s</span><span class="pl-k">*</span>=<span class="pl-c1">\s</span><span class="pl-k">*</span>(<span class="pl-c1">[&#39;&quot;]</span>)<span class="pl-c1">.</span><span class="pl-k">*?</span><span class="pl-k">\1</span><span class="pl-pds">/</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-en">b</span>(c)});<span class="pl-k">return</span> c})});</td>
      </tr>
      <tr>
        <td id="L250" class="blob-num js-line-number" data-line-number="250"></td>
        <td id="LC250" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lorem<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-c1">Math</span>.<span class="pl-c1">round</span>(<span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">*</span>(b<span class="pl-k">-</span>a)<span class="pl-k">+</span>a)}function i(a,b){for(var c=a.length,e=Math.min(c,b),g=[];g.length&lt;e;){var i=h(0,c-1);d.include(g,i)||g.push(i)}return d.map(g,function(b){return a[b]})}function b(a,b){a.length&amp;&amp;(a[0]=a[0].charAt(0).toUpperCase()+a[0].substring(1));return a.join(&quot; &quot;)+(b||(d.isString(&quot;?!...&quot;)?&quot;?!...&quot;.charAt(h(0,4)):&quot;?!...&quot;[h(0,4)]))}function c(a){var b=a.length,c=0,c=b&gt;3&amp;&amp;b&lt;=6?h(0,1):b&gt;6&amp;&amp;b&lt;=12?h(0,2):h(1,4);d.each(d.range(c),</td>
      </tr>
      <tr>
        <td id="L251" class="blob-num js-line-number" data-line-number="251"></td>
        <td id="LC251" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">b</span>){b<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(a[b]<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>)})}<span class="pl-k">var</span> a<span class="pl-k">=</span>{en<span class="pl-k">:</span>{common<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>lorem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ipsum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>amet<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>consectetur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>adipisicing<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>elit<span class="pl-pds">&quot;</span></span>],words<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>exercitationem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>perferendis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>perspiciatis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>laborum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eveniet<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sunt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>iure<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nobis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>officiis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>excepturi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>odio<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>consectetur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quasi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aut<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quisquam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>vel<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eligendi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>itaque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>non<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>odit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tempore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quaerat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dignissimos<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>facilis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>neque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nihil<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>expedita<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>vitae<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>vero<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ipsum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nisi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cumque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pariatur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>velit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>modi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>natus<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L252" class="blob-num js-line-number" data-line-number="252"></td>
        <td id="LC252" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>iusto<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eaque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sequi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>illo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sed<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ex<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>et<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptatibus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tempora<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>veritatis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ratione<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>assumenda<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>incidunt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nostrum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>placeat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aliquid<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fuga<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>provident<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>praesentium<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>necessitatibus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>suscipit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>adipisci<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quidem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>possimus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptas<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>debitis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sint<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>accusantium<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>unde<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sapiente<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptate<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>qui<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aspernatur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>laudantium<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>soluta<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>amet<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aliquam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>saepe<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>culpa<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>libero<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ipsa<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dicta<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>reiciendis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nesciunt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>doloribus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>autem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>impedit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>minima<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>maiores<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>repudiandae<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L253" class="blob-num js-line-number" data-line-number="253"></td>
        <td id="LC253" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ipsam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>obcaecati<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ullam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>enim<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>totam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>delectus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ducimus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptates<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolores<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>molestiae<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>harum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolorem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quia<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptatem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>molestias<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>magni<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>distinctio<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>omnis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>illum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolorum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>voluptatum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ea<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quas<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>corporis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quae<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>blanditiis<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>atque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>deserunt<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>laboriosam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>earum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>consequuntur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>hic<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cupiditate<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quibusdam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>accusamus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ut<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rerum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>error<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>minus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eius<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ab<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ad<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nemo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fugit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>officia<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>at<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>in<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>id<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quos<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>reprehenderit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>numquam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>iste<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fugiat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>sit<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L254" class="blob-num js-line-number" data-line-number="254"></td>
        <td id="LC254" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>inventore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>beatae<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>repellendus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>magnam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>recusandae<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>quod<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>explicabo<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>doloremque<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>aperiam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>consequatur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>asperiores<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>commodi<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>optio<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolor<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>labore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>temporibus<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>repellat<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>veniam<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>architecto<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>est<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>esse<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mollitia<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>nulla<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>a<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>similique<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>eos<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>alias<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dolore<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tenetur<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>deleniti<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>porro<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>facere<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>maxime<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>corrupti<span class="pl-pds">&quot;</span></span>]},ru<span class="pl-k">:</span>{common<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0430\u043b\u0435\u043a\u043e</span>-<span class="pl-cce">\u0434\u0430\u043b\u0435\u043a\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043b\u043e\u0432\u0435\u0441\u043d\u044b\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L255" class="blob-num js-line-number" data-line-number="255"></td>
        <td id="LC255" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u043e\u0440\u0430\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432</span> <span class="pl-cce">\u0441\u0442\u0440\u0430\u043d\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u043b\u0430\u0441\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0438</span> <span class="pl-cce">\u0441\u043e\u0433\u043b\u0430\u0441\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0436\u0438\u0432\u0443\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u044b\u0431\u043d\u044b\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0435\u043a\u0441\u0442\u044b</span><span class="pl-pds">&quot;</span></span>],words<span class="pl-k">:</span>[<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0434\u0430\u043b\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0442</span> <span class="pl-cce">\u0432\u0441\u0435\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u043d\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0443\u043a\u0432\u0435\u043d\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u043e\u043c\u0430\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0430</span> <span class="pl-cce">\u0431\u0435\u0440\u0435\u0433\u0443</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L256" class="blob-num js-line-number" data-line-number="256"></td>
        <td id="LC256" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0435\u043c\u0430\u043d\u0442\u0438\u043a\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u044f\u0437\u044b\u043a\u043e\u0432\u043e\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u043a\u0435\u0430\u043d\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0443\u0447\u0435\u0435\u043a</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0430\u043b\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0436\u0443\u0440\u0447\u0438\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e</span> <span class="pl-cce">\u0432\u0441\u0435\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0435\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0441\u0435\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L257" class="blob-num js-line-number" data-line-number="257"></td>
        <td id="LC257" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u0430\u0432\u0438\u043b\u0430\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u044d\u0442\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0430\u0440\u0430\u0434\u0438\u0433\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0442\u0440\u0430\u043d\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043a\u043e\u0442\u043e\u0440\u043e\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0436\u0430\u0440\u0435\u043d\u043d\u044b\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u043b\u0435\u0442\u0430\u044e\u0442</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L258" class="blob-num js-line-number" data-line-number="258"></td>
        <td id="LC258" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u044f\u043c\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u043e\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0430\u0436\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0441\u0435\u043c\u043e\u0433\u0443\u0449\u0430\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0443\u043d\u043a\u0442\u0443\u0430\u0446\u0438\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0438\u043c\u0435\u0435\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u043b\u0430\u0441\u0442\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0430\u0434</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u044b\u0431\u043d\u044b\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0435\u043a\u0441\u0442\u0430\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0435\u0434\u0443\u0449\u0438\u043c\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0435\u0437\u043e\u0440\u0444\u043e\u0433\u0440\u0430\u0444\u0438\u0447\u043d\u044b\u0439</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L259" class="blob-num js-line-number" data-line-number="259"></td>
        <td id="LC259" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0431\u0440\u0430\u0437</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0436\u0438\u0437\u043d\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0434\u043d\u0430\u0436\u0434\u044b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0434\u043d\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0430\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0442\u0440\u043e\u0447\u043a\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u044b\u0431\u043d\u043e\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0435\u043a\u0441\u0442\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0438\u043c\u0435\u043d\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>lorem<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ipsum<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0435\u0448\u0438\u043b\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u044b\u0439\u0442\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u043e\u043b\u044c\u0448\u043e\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043c\u0438\u0440</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L260" class="blob-num js-line-number" data-line-number="260"></td>
        <td id="LC260" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u0440\u0430\u043c\u043c\u0430\u0442\u0438\u043a\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0435\u043b\u0438\u043a\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u043a\u0441\u043c\u043e\u043a\u0441</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0436\u0434\u0430\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u043b\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u043f\u044f\u0442\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0438\u043a\u0438\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u043d\u0430\u043a\u0430\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u043e\u043f\u0440\u043e\u0441\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043a\u043e\u0432\u0430\u0440\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u043e\u0447\u043a\u0430\u0445</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L261" class="blob-num js-line-number" data-line-number="261"></td>
        <td id="LC261" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u043f\u044f\u0442\u043e\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0435\u043a\u0441\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0430\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0431\u0438\u0442\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0435\u0431\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u043e\u043b\u043a\u0443</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u043d</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043e\u0431\u0440\u0430\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0435\u043c\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0438\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u0433\u043b\u0430\u0432\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0443\u043a\u0432</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0434\u043f\u043e\u044f\u0441\u0430\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0438\u043d\u0438\u0446\u0438\u0430\u043b</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L262" class="blob-num js-line-number" data-line-number="262"></td>
        <td id="LC262" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u044f\u0441</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0443\u0441\u0442\u0438\u043b\u0441\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u043e\u0440\u043e\u0433\u0443</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0437\u043e\u0431\u0440\u0430\u0432\u0448\u0438\u0441\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0435\u0440\u0432\u0443\u044e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0435\u0440\u0448\u0438\u043d\u0443</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043a\u0443\u0440\u0441\u0438\u0432\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u043e\u0440</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0440\u043e\u0441\u0438\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0437\u0433\u043b\u044f\u0434</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0430\u0437\u0430\u0434</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L263" class="blob-num js-line-number" data-line-number="263"></td>
        <td id="LC263" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0438\u043b\u0443\u044d\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0435\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u043e\u0434\u043d\u043e\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u043e\u0440\u043e\u0434\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0443\u043a\u0432\u043e\u0433\u0440\u0430\u0434</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u0435\u0440\u0435\u0432\u043d\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0430\u043b\u0444\u0430\u0432\u0438\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0434\u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043e\u043a</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0435\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0435\u0440\u0435\u0443\u043b\u043a\u0430</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L264" class="blob-num js-line-number" data-line-number="264"></td>
        <td id="LC264" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0433\u0440\u0443\u0441\u0442\u043d\u044b\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0435\u0442\u043e\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u043e\u043f\u0440\u043e\u0441</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043a\u0430\u0442\u0438\u043b\u0441\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0435\u0433\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0449\u0435\u043a\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0443\u0442\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u043e\u0440\u043e\u0433\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0443\u043a\u043e\u043f\u0438\u0441\u044c</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L265" class="blob-num js-line-number" data-line-number="265"></td>
        <td id="LC265" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u043d\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u0435\u0434\u0443\u043f\u0440\u0435\u0434\u0438\u043b\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043c\u043e\u0435\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0441\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442\u0441\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0430\u0437</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0447\u0442\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043c\u0435\u043d\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u044d\u0442\u043e</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L266" class="blob-num js-line-number" data-line-number="266"></td>
        <td id="LC266" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u0438\u0441\u0442\u0430\u0432\u043a\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0439\u0441\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u044b</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043b\u0443\u0447\u0448\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u044e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0443\u044e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0442\u0440\u0430\u043d\u0443</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0441\u043b\u0443\u0448\u0430\u0432\u0448\u0438\u0441\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0443\u043a\u043e\u043f\u0438\u0441\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0430\u0448</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043b</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L267" class="blob-num js-line-number" data-line-number="267"></td>
        <td id="LC267" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0443\u0442\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0432\u0441\u043a\u043e\u0440\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0435\u043c\u0443</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0432\u0441\u0442\u0440\u0435\u0447\u0430\u043b\u0441\u044f</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043a\u043e\u0432\u0430\u0440\u043d\u044b\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043b\u044c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0435\u043a\u043b\u0430\u043c\u043d\u044b\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0435\u043a\u0441\u0442\u043e\u0432</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043d\u0430\u043f\u043e\u0438\u0432\u0448\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u044f\u0437\u044b\u043a\u043e\u043c</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L268" class="blob-num js-line-number" data-line-number="268"></td>
        <td id="LC268" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0440\u0435\u0447\u044c\u044e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0437\u0430\u043c\u0430\u043d\u0438\u0432\u0448\u0438\u0439</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0430\u0433\u0435\u043d\u0441\u0442\u0432\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043a\u043e\u0442\u043e\u0440\u043e\u0435</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043b\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043d\u043e\u0432\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u043d\u043e\u0432\u0430</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0432\u043e\u0438\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0440\u043e\u0435\u043a\u0442\u0430\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0435\u0441\u043b\u0438</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u043b\u0438</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L269" class="blob-num js-line-number" data-line-number="269"></td>
        <td id="LC269" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0436\u0438\u0432\u0435\u0442</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0442\u0430\u043c</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0434\u043e</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u0441\u0438\u0445</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u043f\u043e\u0440</span><span class="pl-pds">&quot;</span></span>]}},g<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>preferences<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">g</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lorem.defaultLang<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>en<span class="pl-pds">&quot;</span></span>);<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>abbreviationParser<span class="pl-pds">&quot;</span></span>).<span class="pl-en">addPreprocessor</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(?:lorem<span class="pl-k">|</span>lipsum)(<span class="pl-c1">[<span class="pl-c1">a-z</span>]</span><span class="pl-k">{2}</span>)<span class="pl-k">?</span>(<span class="pl-c1">\d</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span>i</span>,l;<span class="pl-smi">d</span>.<span class="pl-en">findAll</span>(<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">_name</span><span class="pl-k">&amp;&amp;</span>(l<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">_name</span>.<span class="pl-c1">match</span>(e))){<span class="pl-k">var</span> f<span class="pl-k">=</span>l[<span class="pl-c1">2</span>]<span class="pl-k">||</span><span class="pl-c1">30</span>,o<span class="pl-k">=</span>l[<span class="pl-c1">1</span>]<span class="pl-k">||</span><span class="pl-smi">g</span>.<span class="pl-c1">get</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>lorem.defaultLang<span class="pl-pds">&quot;</span></span>)<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>en<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">d</span>.<span class="pl-smi">_name</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-smi">d</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>forceNameResolving<span class="pl-pds">&quot;</span></span>,<span class="pl-smi">d</span>.<span class="pl-en">isRepeating</span>()<span class="pl-k">||</span><span class="pl-smi">d</span>.<span class="pl-en">attributeList</span>().<span class="pl-c1">length</span>);<span class="pl-smi">d</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pasteOverwrites<span class="pl-pds">&quot;</span></span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L270" class="blob-num js-line-number" data-line-number="270"></td>
        <td id="LC270" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-c1">data</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>paste<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e;e<span class="pl-k">=</span>f;<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">!</span>d;<span class="pl-k">if</span>(d<span class="pl-k">=</span>a[o]){<span class="pl-k">var</span> j<span class="pl-k">=</span>[],l<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-c1">parseInt</span>(e,<span class="pl-c1">10</span>);g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">common</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">common</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,e),<span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">5</span><span class="pl-k">&amp;&amp;</span>(g[<span class="pl-c1">4</span>]<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>),l<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,<span class="pl-smi">j</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(g,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>)));<span class="pl-k">for</span>(;l<span class="pl-k">&lt;</span>e;)g<span class="pl-k">=</span><span class="pl-en">i</span>(<span class="pl-smi">d</span>.<span class="pl-smi">words</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-en">h</span>(<span class="pl-c1">3</span>,<span class="pl-c1">12</span>)<span class="pl-k">*</span><span class="pl-en">h</span>(<span class="pl-c1">1</span>,<span class="pl-c1">5</span>),e<span class="pl-k">-</span>l)),l<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>,<span class="pl-en">c</span>(g),<span class="pl-smi">j</span>.<span class="pl-c1">push</span>(<span class="pl-en">b</span>(g));e<span class="pl-k">=</span><span class="pl-smi">j</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>)}<span class="pl-k">else</span> e<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> e})}})});<span class="pl-k">return</span>{<span class="pl-en">addLang</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-smi">d</span>.<span class="pl-en">isString</span>(c)<span class="pl-k">?</span>c<span class="pl-k">=</span>{words<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-c1">compact</span>(<span class="pl-smi">c</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>))}<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">isArray</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>{words<span class="pl-k">:</span>c});a[b]<span class="pl-k">=</span>c}}});</td>
      </tr>
      <tr>
        <td id="L271" class="blob-num js-line-number" data-line-number="271"></td>
        <td id="LC271" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-c1">exec</span>(<span class="pl-k">function</span>(<span class="pl-smi">e</span>){<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">add</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>select_line<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">getCurrentLineRange</span>();<span class="pl-smi">d</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">e</span>.<span class="pl-c1">start</span>,<span class="pl-smi">e</span>.<span class="pl-smi">end</span>);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>})});</td>
      </tr>
      <tr>
        <td id="L272" class="blob-num js-line-number" data-line-number="272"></td>
        <td id="LC272" class="blob-code blob-code-inner js-file-line">emmet.exec(function(e){e(&quot;resources&quot;).setVocabulary({variables:{lang:&quot;en&quot;,locale:&quot;en-US&quot;,charset:&quot;UTF-8&quot;,indentation:&quot;\t&quot;,newline:&quot;\n&quot;},css:{filters:&quot;html&quot;,snippets:{&quot;@i&quot;:&quot;@import url(|);&quot;,&quot;@import&quot;:&quot;@import url(|);&quot;,&quot;@m&quot;:&quot;@media ${1:screen} {\n\t|\n}&quot;,&quot;@media&quot;:&quot;@media ${1:screen} {\n\t|\n}&quot;,&quot;@f&quot;:&quot;@font-face {\n\tfont-family:|;\n\tsrc:url(|);\n}&quot;,&quot;@f+&quot;:&quot;@font-face {\n\tfont-family: &#39;${1:FontName}&#39;;\n\tsrc: url(&#39;${2:FileName}.eot&#39;);\n\tsrc: url(&#39;${2:FileName}.eot?#iefix&#39;) format(&#39;embedded-opentype&#39;),\n\t\t url(&#39;${2:FileName}.woff&#39;) format(&#39;woff&#39;),\n\t\t url(&#39;${2:FileName}.ttf&#39;) format(&#39;truetype&#39;),\n\t\t url(&#39;${2:FileName}.svg#${1:FontName}&#39;) format(&#39;svg&#39;);\n\tfont-style: ${3:normal};\n\tfont-weight: ${4:normal};\n}&quot;,&quot;@kf&quot;:&quot;@-webkit-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@-o-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@-moz-keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}\n@keyframes ${1:identifier} {\n\t${2:from} { ${3} }${6}\n\t${4:to} { ${5} }\n}&quot;,</td>
      </tr>
      <tr>
        <td id="L273" class="blob-num js-line-number" data-line-number="273"></td>
        <td id="LC273" class="blob-code blob-code-inner js-file-line">anim<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>anim-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation:${1:name} ${2:duration} ${3:timing-function} ${4:delay} ${5:iteration-count} ${6:direction} ${7:fill-mode};<span class="pl-pds">&quot;</span></span>,animdel<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-delay:${1:time};<span class="pl-pds">&quot;</span></span>,animdir<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-direction:${1:normal};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animdir:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-direction:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animdir:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-direction:reverse;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animdir:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-direction:alternate;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animdir:ar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-direction:alternate-reverse;<span class="pl-pds">&quot;</span></span>,animdur<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-duration:${1:0}s;<span class="pl-pds">&quot;</span></span>,animfm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-fill-mode:${1:both};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animfm:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-fill-mode:forwards;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L274" class="blob-num js-line-number" data-line-number="274"></td>
        <td id="LC274" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>animfm:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-fill-mode:backwards;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animfm:bt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-fill-mode:both;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animfm:bh<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-fill-mode:both;<span class="pl-pds">&quot;</span></span>,animic<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-iteration-count:${1:1};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animic:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-iteration-count:infinite;<span class="pl-pds">&quot;</span></span>,animn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-name:${1:none};<span class="pl-pds">&quot;</span></span>,animps<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-play-state:${1:running};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animps:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-play-state:paused;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animps:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-play-state:running;<span class="pl-pds">&quot;</span></span>,animtf<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:${1:linear};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animtf:e<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:ease;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animtf:ei<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:ease-in;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L275" class="blob-num js-line-number" data-line-number="275"></td>
        <td id="LC275" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>animtf:eo<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:ease-out;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animtf:eio<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:ease-in-out;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animtf:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:linear;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>animtf:cb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>animation-timing-function:cubic-bezier(${1:0.1}, ${2:0.7}, ${3:1.0}, ${3:0.1});<span class="pl-pds">&quot;</span></span>,ap<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>appearance:${none};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!important<span class="pl-pds">&quot;</span></span>,pos<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>position:${1:relative};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pos:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>position:static;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pos:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>position:absolute;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pos:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>position:relative;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pos:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>position:fixed;<span class="pl-pds">&quot;</span></span>,t<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>top:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>t:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>top:auto;<span class="pl-pds">&quot;</span></span>,r<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>r:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>right:auto;<span class="pl-pds">&quot;</span></span>,b<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L276" class="blob-num js-line-number" data-line-number="276"></td>
        <td id="LC276" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>b:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>bottom:auto;<span class="pl-pds">&quot;</span></span>,l<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>l:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>left:auto;<span class="pl-pds">&quot;</span></span>,z<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>z-index:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>z:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>z-index:auto;<span class="pl-pds">&quot;</span></span>,fl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>float:${1:left};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fl:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>float:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fl:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>float:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fl:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>float:right;<span class="pl-pds">&quot;</span></span>,cl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear:${1:both};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cl:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cl:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cl:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear:right;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cl:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clear:both;<span class="pl-pds">&quot;</span></span>,colm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>columns:|;<span class="pl-pds">&quot;</span></span>,colmc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-count:|;<span class="pl-pds">&quot;</span></span>,colmf<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-fill:|;<span class="pl-pds">&quot;</span></span>,colmg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-gap:|;<span class="pl-pds">&quot;</span></span>,colmr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-rule:|;<span class="pl-pds">&quot;</span></span>,colmrc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-rule-color:|;<span class="pl-pds">&quot;</span></span>,colmrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-rule-style:|;<span class="pl-pds">&quot;</span></span>,colmrw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-rule-width:|;<span class="pl-pds">&quot;</span></span>,colms<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-span:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L277" class="blob-num js-line-number" data-line-number="277"></td>
        <td id="LC277" class="blob-code blob-code-inner js-file-line">colmw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>column-width:|;<span class="pl-pds">&quot;</span></span>,d<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:${1:block};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:block;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:inline;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:ib<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:inline-block;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:li<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:list-item;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:ri<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:run-in;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:cp<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:compact;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:itb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:inline-table;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbcp<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-caption;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbcl<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-column;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbclg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-column-group;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbhg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-header-group;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbfg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-footer-group;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-row;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:tbrg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-row-group;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L278" class="blob-num js-line-number" data-line-number="278"></td>
        <td id="LC278" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>d:tbc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:table-cell;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:rb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:ruby;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:rbb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:ruby-base;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:rbbg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:ruby-base-group;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:rbt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:ruby-text;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>d:rbtg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>display:ruby-text-group;<span class="pl-pds">&quot;</span></span>,v<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility:${1:hidden};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>v:v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility:visible;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>v:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility:hidden;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>v:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>visibility:collapse;<span class="pl-pds">&quot;</span></span>,ov<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow:${1:hidden};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ov:v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow:visible;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ov:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow:hidden;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ov:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow:scroll;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ov:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow:auto;<span class="pl-pds">&quot;</span></span>,ovx<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x:${1:hidden};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovx:v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x:visible;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovx:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x:hidden;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L279" class="blob-num js-line-number" data-line-number="279"></td>
        <td id="LC279" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ovx:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x:scroll;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovx:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-x:auto;<span class="pl-pds">&quot;</span></span>,ovy<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y:${1:hidden};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovy:v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y:visible;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovy:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y:hidden;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovy:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y:scroll;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovy:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-y:auto;<span class="pl-pds">&quot;</span></span>,ovs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:${1:scrollbar};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovs:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovs:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:scrollbar;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovs:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:panner;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovs:m<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:move;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ovs:mq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>overflow-style:marquee;<span class="pl-pds">&quot;</span></span>,zoo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoom:1;<span class="pl-pds">&quot;</span></span>,zm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>zoom:1;<span class="pl-pds">&quot;</span></span>,cp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clip:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cp:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clip:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cp:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>clip:rect(${1:top} ${2:right} ${3:bottom} ${4:left});<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L280" class="blob-num js-line-number" data-line-number="280"></td>
        <td id="LC280" class="blob-code blob-code-inner js-file-line">bxz<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-sizing:${1:border-box};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bxz:cb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-sizing:content-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bxz:bb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-sizing:border-box;<span class="pl-pds">&quot;</span></span>,bxsh<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:color};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bxsh:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-shadow:${1:inset }${2:hoff} ${3:voff} ${4:blur} ${5:spread }rgb(${6:0}, ${7:0}, ${8:0});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bxsh:ra<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-shadow:${1:inset }${2:h} ${3:v} ${4:blur} ${5:spread }rgba(${6:0}, ${7:0}, ${8:0}, .${9:5});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bxsh:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>box-shadow:none;<span class="pl-pds">&quot;</span></span>,m<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>m:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin:auto;<span class="pl-pds">&quot;</span></span>,mt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-top:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mt:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-top:auto;<span class="pl-pds">&quot;</span></span>,mr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-right:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L281" class="blob-num js-line-number" data-line-number="281"></td>
        <td id="LC281" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>mr:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-right:auto;<span class="pl-pds">&quot;</span></span>,mb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-bottom:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mb:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-bottom:auto;<span class="pl-pds">&quot;</span></span>,ml<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-left:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ml:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>margin-left:auto;<span class="pl-pds">&quot;</span></span>,p<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>padding:|;<span class="pl-pds">&quot;</span></span>,pt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>padding-top:|;<span class="pl-pds">&quot;</span></span>,pr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>padding-right:|;<span class="pl-pds">&quot;</span></span>,pb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>padding-bottom:|;<span class="pl-pds">&quot;</span></span>,pl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>padding-left:|;<span class="pl-pds">&quot;</span></span>,w<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>w:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>width:auto;<span class="pl-pds">&quot;</span></span>,h<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>height:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>h:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>height:auto;<span class="pl-pds">&quot;</span></span>,maw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>max-width:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>maw:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>max-width:none;<span class="pl-pds">&quot;</span></span>,mah<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>max-height:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>mah:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>max-height:none;<span class="pl-pds">&quot;</span></span>,miw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>min-width:|;<span class="pl-pds">&quot;</span></span>,mih<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>min-height:|;<span class="pl-pds">&quot;</span></span>,mar<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>max-resolution:${1:res};<span class="pl-pds">&quot;</span></span>,mir<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>min-resolution:${1:res};<span class="pl-pds">&quot;</span></span>,ori<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>orientation:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L282" class="blob-num js-line-number" data-line-number="282"></td>
        <td id="LC282" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>ori:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>orientation:landscape;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ori:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>orientation:portrait;<span class="pl-pds">&quot;</span></span>,ol<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ol:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline:none;<span class="pl-pds">&quot;</span></span>,olo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline-offset:|;<span class="pl-pds">&quot;</span></span>,olw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline-width:|;<span class="pl-pds">&quot;</span></span>,ols<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline-style:|;<span class="pl-pds">&quot;</span></span>,olc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline-color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>olc:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>outline-color:invert;<span class="pl-pds">&quot;</span></span>,bd<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bd+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border:${1:1px} ${2:solid} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bd:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border:none;<span class="pl-pds">&quot;</span></span>,bdbk<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-break:${1:close};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbk:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-break:close;<span class="pl-pds">&quot;</span></span>,bdcl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-collapse:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdcl:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-collapse:collapse;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdcl:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-collapse:separate;<span class="pl-pds">&quot;</span></span>,bdc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-color:#${1:000};<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L283" class="blob-num js-line-number" data-line-number="283"></td>
        <td id="LC283" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bdc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-color:transparent;<span class="pl-pds">&quot;</span></span>,bdi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdi:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-image:none;<span class="pl-pds">&quot;</span></span>,bdti<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdti:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-image:none;<span class="pl-pds">&quot;</span></span>,bdri<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdri:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-image:none;<span class="pl-pds">&quot;</span></span>,bdbi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbi:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-image:none;<span class="pl-pds">&quot;</span></span>,bdli<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdli:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-image:none;<span class="pl-pds">&quot;</span></span>,bdci<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-corner-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdci:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-corner-image:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdci:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-corner-image:continue;<span class="pl-pds">&quot;</span></span>,bdtli<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-left-image:url(|);<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L284" class="blob-num js-line-number" data-line-number="284"></td>
        <td id="LC284" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bdtli:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-left-image:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdtli:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-left-image:continue;<span class="pl-pds">&quot;</span></span>,bdtri<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-right-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdtri:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-right-image:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdtri:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-right-image:continue;<span class="pl-pds">&quot;</span></span>,bdbri<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-right-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbri:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-right-image:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbri:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-right-image:continue;<span class="pl-pds">&quot;</span></span>,bdbli<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-left-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbli:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-left-image:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbli:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-left-image:continue;<span class="pl-pds">&quot;</span></span>,bdf<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:${1:repeat};<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L285" class="blob-num js-line-number" data-line-number="285"></td>
        <td id="LC285" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bdf:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:clip;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:repeat;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:sc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:scale;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:st<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:stretch;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:ow<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:overwrite;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:of<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:overflow;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdf:sp<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-fit:space;<span class="pl-pds">&quot;</span></span>,bdlen<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-length:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdlen:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-length:auto;<span class="pl-pds">&quot;</span></span>,bdsp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-spacing:|;<span class="pl-pds">&quot;</span></span>,bds<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:hidden;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:dt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:dotted;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:ds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:dashed;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:solid;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:db<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:double;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:dtds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:dot-dash;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L286" class="blob-num js-line-number" data-line-number="286"></td>
        <td id="LC286" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bds:dtdtds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:dot-dot-dash;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:w<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:wave;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:g<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:groove;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:ridge;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:inset;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bds:o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-style:outset;<span class="pl-pds">&quot;</span></span>,bdw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-width:|;<span class="pl-pds">&quot;</span></span>,bdtw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-width:|;<span class="pl-pds">&quot;</span></span>,bdrw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-width:|;<span class="pl-pds">&quot;</span></span>,bdbw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-width:|;<span class="pl-pds">&quot;</span></span>,bdlw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-width:|;<span class="pl-pds">&quot;</span></span>,bdt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top:|;<span class="pl-pds">&quot;</span></span>,bt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdt+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top:${1:1px} ${2:solid} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdt:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top:none;<span class="pl-pds">&quot;</span></span>,bdts<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdts:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-style:none;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L287" class="blob-num js-line-number" data-line-number="287"></td>
        <td id="LC287" class="blob-code blob-code-inner js-file-line">bdtc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdtc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-color:transparent;<span class="pl-pds">&quot;</span></span>,bdr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right:|;<span class="pl-pds">&quot;</span></span>,br<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdr+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right:${1:1px} ${2:solid} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdr:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right:none;<span class="pl-pds">&quot;</span></span>,bdrst<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdrst:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-style:none;<span class="pl-pds">&quot;</span></span>,bdrc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdrc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-right-color:transparent;<span class="pl-pds">&quot;</span></span>,bdb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom:|;<span class="pl-pds">&quot;</span></span>,bb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdb+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom:${1:1px} ${2:solid} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdb:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom:none;<span class="pl-pds">&quot;</span></span>,bdbs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-style:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L288" class="blob-num js-line-number" data-line-number="288"></td>
        <td id="LC288" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bdbs:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-style:none;<span class="pl-pds">&quot;</span></span>,bdbc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdbc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-color:transparent;<span class="pl-pds">&quot;</span></span>,bdl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left:|;<span class="pl-pds">&quot;</span></span>,bl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdl+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left:${1:1px} ${2:solid} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdl:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left:none;<span class="pl-pds">&quot;</span></span>,bdls<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdls:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-style:none;<span class="pl-pds">&quot;</span></span>,bdlc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdlc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-left-color:transparent;<span class="pl-pds">&quot;</span></span>,bdrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-radius:|;<span class="pl-pds">&quot;</span></span>,bdtrrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-right-radius:|;<span class="pl-pds">&quot;</span></span>,bdtlrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-top-left-radius:|;<span class="pl-pds">&quot;</span></span>,bdbrrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-right-radius:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L289" class="blob-num js-line-number" data-line-number="289"></td>
        <td id="LC289" class="blob-code blob-code-inner js-file-line">bdblrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>border-bottom-left-radius:|;<span class="pl-pds">&quot;</span></span>,bg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bg+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background:${1:#fff} url(${2}) ${3:0} ${4:0} ${5:no-repeat};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bg:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bg:ie<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter:progid:DXImageTransform.Microsoft.AlphaImageLoader(src=&#39;${1:x}.png&#39;,sizingMethod=&#39;${2:crop}&#39;);<span class="pl-pds">&quot;</span></span>,bgc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-color:#${1:fff};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgc:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-color:transparent;<span class="pl-pds">&quot;</span></span>,bgi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-image:url(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgi:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-image:none;<span class="pl-pds">&quot;</span></span>,bgr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgr:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:no-repeat;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgr:x<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:repeat-x;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L290" class="blob-num js-line-number" data-line-number="290"></td>
        <td id="LC290" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bgr:y<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:repeat-y;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgr:sp<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:space;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgr:rd<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-repeat:round;<span class="pl-pds">&quot;</span></span>,bga<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-attachment:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bga:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-attachment:fixed;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bga:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-attachment:scroll;<span class="pl-pds">&quot;</span></span>,bgp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-position:${1:0} ${2:0};<span class="pl-pds">&quot;</span></span>,bgpx<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-position-x:|;<span class="pl-pds">&quot;</span></span>,bgpy<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-position-y:|;<span class="pl-pds">&quot;</span></span>,bgbk<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-break:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgbk:bb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-break:bounding-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgbk:eb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-break:each-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgbk:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-break:continuous;<span class="pl-pds">&quot;</span></span>,bgcp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-clip:${1:padding-box};<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L291" class="blob-num js-line-number" data-line-number="291"></td>
        <td id="LC291" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>bgcp:bb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-clip:border-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgcp:pb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-clip:padding-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgcp:cb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-clip:content-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgcp:nc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-clip:no-clip;<span class="pl-pds">&quot;</span></span>,bgo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-origin:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgo:pb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-origin:padding-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgo:bb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-origin:border-box;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgo:cb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-origin:content-box;<span class="pl-pds">&quot;</span></span>,bgsz<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-size:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgsz:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-size:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgsz:ct<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-size:contain;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bgsz:cv<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>background-size:cover;<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color:#${1:000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>c:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color:rgb(${1:0}, ${2:0}, ${3:0});<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L292" class="blob-num js-line-number" data-line-number="292"></td>
        <td id="LC292" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>c:ra<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>color:rgba(${1:0}, ${2:0}, ${3:0}, .${4:5});<span class="pl-pds">&quot;</span></span>,cm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>/* |${child} */<span class="pl-pds">&quot;</span></span>,cnt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:&#39;|&#39;;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:oq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:open-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:noq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:no-open-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:cq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:close-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:ncq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:no-close-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:attr(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:counter(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cnt:cs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:counters(|);<span class="pl-pds">&quot;</span></span>,tbl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>table-layout:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tbl:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>table-layout:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tbl:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>table-layout:fixed;<span class="pl-pds">&quot;</span></span>,cps<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>caption-side:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cps:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>caption-side:top;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cps:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>caption-side:bottom;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L293" class="blob-num js-line-number" data-line-number="293"></td>
        <td id="LC293" class="blob-code blob-code-inner js-file-line">ec<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>empty-cells:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ec:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>empty-cells:show;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ec:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>empty-cells:hide;<span class="pl-pds">&quot;</span></span>,lis<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>lis:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style:none;<span class="pl-pds">&quot;</span></span>,lisp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-position:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>lisp:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-position:inside;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>lisp:o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-position:outside;<span class="pl-pds">&quot;</span></span>,list<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:disc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:circle;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:square;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:dc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:decimal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:dclz<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:decimal-leading-zero;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>list:lr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:lower-roman;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L294" class="blob-num js-line-number" data-line-number="294"></td>
        <td id="LC294" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>list:ur<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-type:upper-roman;<span class="pl-pds">&quot;</span></span>,lisi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-image:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>lisi:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>list-style-image:none;<span class="pl-pds">&quot;</span></span>,q<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>quotes:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>q:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>quotes:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>q:ru<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>quotes:&#39;<span class="pl-cce">\\</span>00AB&#39; &#39;<span class="pl-cce">\\</span>00BB&#39; &#39;<span class="pl-cce">\\</span>201E&#39; &#39;<span class="pl-cce">\\</span>201C&#39;;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>q:en<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>quotes:&#39;<span class="pl-cce">\\</span>201C&#39; &#39;<span class="pl-cce">\\</span>201D&#39; &#39;<span class="pl-cce">\\</span>2018&#39; &#39;<span class="pl-cce">\\</span>2019&#39;;<span class="pl-pds">&quot;</span></span>,ct<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:oq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:open-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:noq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:no-open-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:cq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:close-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:ncq<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:no-close-quote;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:attr(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:counter(|);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ct:cs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>content:counters(|);<span class="pl-pds">&quot;</span></span>,coi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>counter-increment:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L295" class="blob-num js-line-number" data-line-number="295"></td>
        <td id="LC295" class="blob-code blob-code-inner js-file-line">cor<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>counter-reset:|;<span class="pl-pds">&quot;</span></span>,va<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:${1:top};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:sup<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:super;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:top;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:tt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:text-top;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:m<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:middle;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:bl<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:baseline;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:bottom;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:tb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:text-bottom;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>va:sub<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>vertical-align:sub;<span class="pl-pds">&quot;</span></span>,ta<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align:${1:left};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align:center;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align:right;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta:j<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align:justify;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ta-lst<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align-last:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tal:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align-last:auto;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L296" class="blob-num js-line-number" data-line-number="296"></td>
        <td id="LC296" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>tal:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align-last:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tal:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align-last:center;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tal:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-align-last:right;<span class="pl-pds">&quot;</span></span>,td<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-decoration:${1:none};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>td:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-decoration:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>td:u<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-decoration:underline;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>td:o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-decoration:overline;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>td:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-decoration:line-through;<span class="pl-pds">&quot;</span></span>,te<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:ac<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:accent;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:dt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:dot;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:circle;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:ds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:disc;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:before;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>te:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-emphasis:after;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L297" class="blob-num js-line-number" data-line-number="297"></td>
        <td id="LC297" class="blob-code blob-code-inner js-file-line">th<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-height:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>th:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-height:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>th:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-height:font-size;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>th:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-height:text-size;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>th:m<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-height:max-size;<span class="pl-pds">&quot;</span></span>,ti<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-indent:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ti:-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-indent:-9999px;<span class="pl-pds">&quot;</span></span>,tj<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:iw<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:inter-word;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:ii<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:inter-ideograph;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:ic<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:inter-cluster;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:distribute;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:k<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:kashida;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tj:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-justify:tibetan;<span class="pl-pds">&quot;</span></span>,tov<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-overflow:${ellipsis};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tov:e<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-overflow:ellipsis;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L298" class="blob-num js-line-number" data-line-number="298"></td>
        <td id="LC298" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>tov:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-overflow:clip;<span class="pl-pds">&quot;</span></span>,to<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-outline:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>to+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-outline:${1:0} ${2:0} ${3:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>to:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-outline:none;<span class="pl-pds">&quot;</span></span>,tr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-replace:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tr:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-replace:none;<span class="pl-pds">&quot;</span></span>,tt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-transform:${1:uppercase};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tt:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-transform:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tt:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-transform:capitalize;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tt:u<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-transform:uppercase;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tt:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-transform:lowercase;<span class="pl-pds">&quot;</span></span>,tw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-wrap:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tw:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-wrap:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tw:no<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-wrap:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tw:u<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-wrap:unrestricted;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tw:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-wrap:suppress;<span class="pl-pds">&quot;</span></span>,tsh<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-shadow:${1:hoff} ${2:voff} ${3:blur} ${4:#000};<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L299" class="blob-num js-line-number" data-line-number="299"></td>
        <td id="LC299" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>tsh:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-shadow:${1:h} ${2:v} ${3:blur} rgb(${4:0}, ${5:0}, ${6:0});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tsh:ra<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-shadow:${1:h} ${2:v} ${3:blur} rgba(${4:0}, ${5:0}, ${6:0}, .${7:5});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tsh+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-shadow:${1:0} ${2:0} ${3:0} ${4:#000};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tsh:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>text-shadow:none;<span class="pl-pds">&quot;</span></span>,trf<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:skx<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: skewX(${1:angle});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:sky<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: skewY(${1:angle});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:sc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: scale(${1:x}, ${2:y});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:scx<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: scaleX(${1:x});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:scy<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: scaleY(${1:y});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: rotate(${1:angle});<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L300" class="blob-num js-line-number" data-line-number="300"></td>
        <td id="LC300" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>trf:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: translate(${1:x}, ${2:y});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:tx<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: translateX(${1:x});<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>trf:ty<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform: translateY(${1:y});<span class="pl-pds">&quot;</span></span>,trfo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform-origin:|;<span class="pl-pds">&quot;</span></span>,trfs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transform-style:${1:preserve-3d};<span class="pl-pds">&quot;</span></span>,trs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transition:${1:prop} ${2:time};<span class="pl-pds">&quot;</span></span>,trsde<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transition-delay:${1:time};<span class="pl-pds">&quot;</span></span>,trsdu<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transition-duration:${1:time};<span class="pl-pds">&quot;</span></span>,trsp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transition-property:${1:prop};<span class="pl-pds">&quot;</span></span>,trstf<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>transition-timing-function:${1:tfunc};<span class="pl-pds">&quot;</span></span>,lh<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>line-height:|;<span class="pl-pds">&quot;</span></span>,whs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whs:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whs:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:pre;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whs:nw<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:nowrap;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L301" class="blob-num js-line-number" data-line-number="301"></td>
        <td id="LC301" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>whs:pw<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:pre-wrap;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whs:pl<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space:pre-line;<span class="pl-pds">&quot;</span></span>,whsc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whsc:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whsc:k<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:keep-all;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whsc:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:loose;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whsc:bs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:break-strict;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>whsc:ba<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>white-space-collapse:break-all;<span class="pl-pds">&quot;</span></span>,wob<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wob:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wob:k<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:keep-all;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wob:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:loose;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wob:bs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:break-strict;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wob:ba<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-break:break-all;<span class="pl-pds">&quot;</span></span>,wos<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-spacing:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L302" class="blob-num js-line-number" data-line-number="302"></td>
        <td id="LC302" class="blob-code blob-code-inner js-file-line">wow<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wow:nm<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wow:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wow:u<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:unrestricted;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wow:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:suppress;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wow:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>word-wrap:break-word;<span class="pl-pds">&quot;</span></span>,lts<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>letter-spacing:|;<span class="pl-pds">&quot;</span></span>,f<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>f+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font:${1:1em} ${2:Arial,sans-serif};<span class="pl-pds">&quot;</span></span>,fw<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fw:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fw:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight:bold;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fw:br<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight:bolder;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fw:lr<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-weight:lighter;<span class="pl-pds">&quot;</span></span>,fs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-style:${italic};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fs:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-style:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fs:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-style:italic;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fs:o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-style:oblique;<span class="pl-pds">&quot;</span></span>,fv<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-variant:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L303" class="blob-num js-line-number" data-line-number="303"></td>
        <td id="LC303" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>fv:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-variant:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fv:sc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-variant:small-caps;<span class="pl-pds">&quot;</span></span>,fz<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-size:|;<span class="pl-pds">&quot;</span></span>,fza<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-size-adjust:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fza:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-size-adjust:none;<span class="pl-pds">&quot;</span></span>,ff<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ff:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:serif;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ff:ss<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:sans-serif;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ff:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:cursive;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ff:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:fantasy;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ff:m<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-family:monospace;<span class="pl-pds">&quot;</span></span>,fef<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-effect:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fef:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-effect:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fef:eg<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-effect:engrave;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fef:eb<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-effect:emboss;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fef:o<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-effect:outline;<span class="pl-pds">&quot;</span></span>,fem<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize:|;<span class="pl-pds">&quot;</span></span>,femp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-position:|;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L304" class="blob-num js-line-number" data-line-number="304"></td>
        <td id="LC304" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>femp:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-position:before;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>femp:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-position:after;<span class="pl-pds">&quot;</span></span>,fems<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fems:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fems:ac<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:accent;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fems:dt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:dot;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fems:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:circle;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fems:ds<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-emphasize-style:disc;<span class="pl-pds">&quot;</span></span>,fsm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-smooth:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fsm:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-smooth:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fsm:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-smooth:never;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fsm:aw<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-smooth:always;<span class="pl-pds">&quot;</span></span>,fst<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:normal;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:uc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:ultra-condensed;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L305" class="blob-num js-line-number" data-line-number="305"></td>
        <td id="LC305" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>fst:ec<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:extra-condensed;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:condensed;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:sc<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:semi-condensed;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:se<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:semi-expanded;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:e<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:expanded;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:ee<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:extra-expanded;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fst:ue<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>font-stretch:ultra-expanded;<span class="pl-pds">&quot;</span></span>,op<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>opacity:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>op:ie<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>filter:progid:DXImageTransform.Microsoft.Alpha(Opacity=100);<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>op:ms<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-ms-filter:&#39;progid:DXImageTransform.Microsoft.Alpha(Opacity=100)&#39;;<span class="pl-pds">&quot;</span></span>,rsz<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>resize:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rsz:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>resize:none;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rsz:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>resize:both;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rsz:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>resize:horizontal;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L306" class="blob-num js-line-number" data-line-number="306"></td>
        <td id="LC306" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>rsz:v<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>resize:vertical;<span class="pl-pds">&quot;</span></span>,cur<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:${pointer};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:default;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:crosshair;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:ha<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:hand;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:he<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:help;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:m<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:move;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:pointer;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cur:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>cursor:text;<span class="pl-pds">&quot;</span></span>,pgbb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-before:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbb:au<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-before:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbb:al<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-before:always;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbb:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-before:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbb:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-before:right;<span class="pl-pds">&quot;</span></span>,pgbi<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-inside:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbi:au<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-inside:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgbi:av<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-inside:avoid;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L307" class="blob-num js-line-number" data-line-number="307"></td>
        <td id="LC307" class="blob-code blob-code-inner js-file-line">pgba<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-after:|;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgba:au<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-after:auto;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgba:al<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-after:always;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgba:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-after:left;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>pgba:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>page-break-after:right;<span class="pl-pds">&quot;</span></span>,orp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>orphans:|;<span class="pl-pds">&quot;</span></span>,us<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>user-select:${none};<span class="pl-pds">&quot;</span></span>,wid<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>widows:|;<span class="pl-pds">&quot;</span></span>,wfsm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-font-smoothing:${antialiased};<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wfsm:a<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-font-smoothing:antialiased;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wfsm:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-font-smoothing:subpixel-antialiased;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wfsm:sa<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-font-smoothing:subpixel-antialiased;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wfsm:n<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>-webkit-font-smoothing:none;<span class="pl-pds">&quot;</span></span>}},html<span class="pl-k">:</span>{filters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,profile<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L308" class="blob-num js-line-number" data-line-number="308"></td>
        <td id="LC308" class="blob-code blob-code-inner js-file-line">snippets<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>!!!<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;!doctype html&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!!!4t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!!!4s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!!!xt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!!!xs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>!!!xxs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.1//EN&quot; &quot;http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd&quot;&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L309" class="blob-num js-line-number" data-line-number="309"></td>
        <td id="LC309" class="blob-code blob-code-inner js-file-line">c<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>-- |${child} --<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cc:ie6<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--[if lte IE 6]&gt;<span class="pl-cce">\n\t</span>${child}|<span class="pl-cce">\n</span>&lt;![endif]--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cc:ie<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--[if IE]&gt;<span class="pl-cce">\n\t</span>${child}|<span class="pl-cce">\n</span>&lt;![endif]--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>cc:noie<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-cce">\!</span>--[if !IE]&gt;&lt;<span class="pl-cce">\!</span>--<span class="pl-cce">\&gt;\n\t</span>${child}|<span class="pl-cce">\n</span>&lt;<span class="pl-cce">\!</span>--&lt;![endif]--<span class="pl-cce">\&gt;</span><span class="pl-pds">&quot;</span></span>},abbreviations<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html:5<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;a href=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>a:link<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;a href=&quot;http://|&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>a:mail<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;a href=&quot;mailto:|&quot;&gt;<span class="pl-pds">&#39;</span></span>,abbr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;abbr title=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,acronym<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;acronym title=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,base<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;base href=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,basefont<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;basefont/&gt;<span class="pl-pds">&quot;</span></span>,br<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;br/&gt;<span class="pl-pds">&quot;</span></span>,frame<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;frame/&gt;<span class="pl-pds">&quot;</span></span>,hr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;hr/&gt;<span class="pl-pds">&quot;</span></span>,bdo<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;bdo dir=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdo:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;bdo dir=&quot;rtl&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>bdo:l<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;bdo dir=&quot;ltr&quot;&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L310" class="blob-num js-line-number" data-line-number="310"></td>
        <td id="LC310" class="blob-code blob-code-inner js-file-line">col<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;col/&gt;<span class="pl-pds">&quot;</span></span>,link<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:css<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;stylesheet&quot; href=&quot;${1:style}.css&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:print<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;stylesheet&quot; href=&quot;${1:print}.css&quot; media=&quot;print&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:favicon<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;shortcut icon&quot; type=&quot;image/x-icon&quot; href=&quot;${1:favicon.ico}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:touch<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;${1:favicon.png}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:rss<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;alternate&quot; type=&quot;application/rss+xml&quot; title=&quot;RSS&quot; href=&quot;${1:rss.xml}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>link:atom<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;link rel=&quot;alternate&quot; type=&quot;application/atom+xml&quot; title=&quot;Atom&quot; href=&quot;${1:atom.xml}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L311" class="blob-num js-line-number" data-line-number="311"></td>
        <td id="LC311" class="blob-code blob-code-inner js-file-line">meta<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;meta/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>meta:utf<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=UTF-8&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>meta:win<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=windows-1251&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>meta:vp<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;meta name=&quot;viewport&quot; content=&quot;width=${1:device-width}, user-scalable=${2:no}, initial-scale=${3:1.0}, maximum-scale=${4:1.0}, minimum-scale=${5:1.0}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>meta:compat<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;${1:IE=7}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,style<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;style&gt;<span class="pl-pds">&quot;</span></span>,script<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;script&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>script:src<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;script src=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,img<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;img src=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L312" class="blob-num js-line-number" data-line-number="312"></td>
        <td id="LC312" class="blob-code blob-code-inner js-file-line">iframe<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;iframe src=&quot;&quot; frameborder=&quot;0&quot;&gt;<span class="pl-pds">&#39;</span></span>,embed<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;embed src=&quot;&quot; type=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,object<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;object data=&quot;&quot; type=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,param<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;param name=&quot;&quot; value=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,map<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;map name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,area<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;area shape=&quot;&quot; coords=&quot;&quot; href=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area:d<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;area shape=&quot;default&quot; href=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;area shape=&quot;circle&quot; coords=&quot;&quot; href=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;area shape=&quot;rect&quot; coords=&quot;&quot; href=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>area:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;area shape=&quot;poly&quot; coords=&quot;&quot; href=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,form<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;form action=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>form:get<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L313" class="blob-num js-line-number" data-line-number="313"></td>
        <td id="LC313" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>form:post<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;<span class="pl-pds">&#39;</span></span>,label<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;label for=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,input<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;${1:text}&quot; /&gt;<span class="pl-pds">&#39;</span></span>,inp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;${1:text}&quot; name=&quot;&quot; id=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:hidden<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input[type=hidden name]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:h<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:hidden<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:text<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:search<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=search]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:email<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=email]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:url<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=url]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:password<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=password]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:p<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:password<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:datetime<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=datetime]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:date<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=date]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:datetime-local<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=datetime-local]<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L314" class="blob-num js-line-number" data-line-number="314"></td>
        <td id="LC314" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>input:month<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=month]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:week<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=week]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:time<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=time]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:number<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=number]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:color<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=color]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:checkbox<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=checkbox]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:checkbox<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:radio<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=radio]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:radio<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:range<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=range]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:file<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>inp[type=file]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:f<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:file<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:submit<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;submit&quot; value=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:submit<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:image<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;image&quot; src=&quot;&quot; alt=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:i<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:image<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L315" class="blob-num js-line-number" data-line-number="315"></td>
        <td id="LC315" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>input:button<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;input type=&quot;button&quot; value=&quot;&quot; /&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:button<span class="pl-pds">&quot;</span></span>,isindex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;isindex/&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>input:reset<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>input:button[type=reset]<span class="pl-pds">&quot;</span></span>,select<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;select name=&quot;&quot; id=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,option<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;option value=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,textarea<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;textarea name=&quot;&quot; id=&quot;&quot; cols=&quot;${1:30}&quot; rows=&quot;${2:10}&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>menu:context<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>menu[type=context]&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>menu:c<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>menu:context<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>menu:toolbar<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>menu[type=toolbar]&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>menu:t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>menu:toolbar<span class="pl-pds">&quot;</span></span>,video<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;video src=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,audio<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;audio src=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:xml<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;<span class="pl-pds">&#39;</span></span>,keygen<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;keygen/&gt;<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L316" class="blob-num js-line-number" data-line-number="316"></td>
        <td id="LC316" class="blob-code blob-code-inner js-file-line">command<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;command/&gt;<span class="pl-pds">&quot;</span></span>,bq<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>blockquote<span class="pl-pds">&quot;</span></span>,acr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>acronym<span class="pl-pds">&quot;</span></span>,fig<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>figure<span class="pl-pds">&quot;</span></span>,figc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>figcaption<span class="pl-pds">&quot;</span></span>,ifr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>iframe<span class="pl-pds">&quot;</span></span>,emb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>embed<span class="pl-pds">&quot;</span></span>,obj<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>,src<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>source<span class="pl-pds">&quot;</span></span>,cap<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>caption<span class="pl-pds">&quot;</span></span>,colg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>colgroup<span class="pl-pds">&quot;</span></span>,fst<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fieldset<span class="pl-pds">&quot;</span></span>,btn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>button<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>btn:b<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>button[type=button]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>btn:r<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>button[type=reset]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>btn:s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>button[type=submit]<span class="pl-pds">&quot;</span></span>,optg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>optgroup<span class="pl-pds">&quot;</span></span>,opt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>option<span class="pl-pds">&quot;</span></span>,tarea<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>,leg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>legend<span class="pl-pds">&quot;</span></span>,sect<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>section<span class="pl-pds">&quot;</span></span>,art<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>article<span class="pl-pds">&quot;</span></span>,hdr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>header<span class="pl-pds">&quot;</span></span>,ftr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>footer<span class="pl-pds">&quot;</span></span>,adr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>address<span class="pl-pds">&quot;</span></span>,dlg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dialog<span class="pl-pds">&quot;</span></span>,str<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>strong<span class="pl-pds">&quot;</span></span>,prog<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>progress<span class="pl-pds">&quot;</span></span>,fset<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fieldset<span class="pl-pds">&quot;</span></span>,datag<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>datagrid<span class="pl-pds">&quot;</span></span>,datal<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>datalist<span class="pl-pds">&quot;</span></span>,kg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>keygen<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L317" class="blob-num js-line-number" data-line-number="317"></td>
        <td id="LC317" class="blob-code blob-code-inner js-file-line">out<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>output<span class="pl-pds">&quot;</span></span>,det<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>details<span class="pl-pds">&quot;</span></span>,cmd<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>command<span class="pl-pds">&quot;</span></span>,doc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html&gt;(head&gt;meta[charset=UTF-8]+title{${1:Document}})+body<span class="pl-pds">&quot;</span></span>,doc4<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>html&gt;(head&gt;meta[http-equiv=&quot;Content-Type&quot; content=&quot;text/html;charset=${charset}&quot;]+title{${1:Document}})+body<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:4t<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!4t+doc4[lang=${lang}]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:4s<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!4s+doc4[lang=${lang}]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:xt<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!xt+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${lang}]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:xs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!xs+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${lang}]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>html:xxs<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!xxs+doc4[xmlns=http://www.w3.org/1999/xhtml xml:lang=${lang}]<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L318" class="blob-num js-line-number" data-line-number="318"></td>
        <td id="LC318" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>html:5<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!+doc[lang=${lang}]<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ol+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ol&gt;li<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ul+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>ul&gt;li<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>dl+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>dl&gt;dt+dd<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>map+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>map&gt;area<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>table+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>table&gt;tr&gt;td<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>colgroup+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>colgroup&gt;col<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>colg+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>colgroup&gt;col<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>tr+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tr&gt;td<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>select+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>select&gt;option<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>optgroup+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>optgroup&gt;option<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>optg+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>optgroup&gt;option<span class="pl-pds">&quot;</span></span>}},xml<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,profile<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>,filters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>},xsl<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,profile<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>,filters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html, xsl<span class="pl-pds">&quot;</span></span>,abbreviations<span class="pl-k">:</span>{tm<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:template match=&quot;&quot; mode=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,tmatch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tm<span class="pl-pds">&quot;</span></span>,tn<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:template name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,tname<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>tn<span class="pl-pds">&quot;</span></span>,call<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:call-template name=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L319" class="blob-num js-line-number" data-line-number="319"></td>
        <td id="LC319" class="blob-code blob-code-inner js-file-line">ap<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:apply-templates select=&quot;&quot; mode=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,api<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:apply-imports/&gt;<span class="pl-pds">&quot;</span></span>,imp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:import href=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,inc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:include href=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,ch<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:choose&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xsl:when<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:when test=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,wh<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xsl:when<span class="pl-pds">&quot;</span></span>,ot<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:otherwise&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>if<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:if test=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,par<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:param name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,pare<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:param name=&quot;&quot; select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>var<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:variable name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,vare<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:variable name=&quot;&quot; select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,wp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:with-param name=&quot;&quot; select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,key<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:key name=&quot;&quot; match=&quot;&quot; use=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,elem<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:element name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,attr<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:attribute name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L320" class="blob-num js-line-number" data-line-number="320"></td>
        <td id="LC320" class="blob-code blob-code-inner js-file-line">attrs<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:attribute-set name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,cp<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:copy select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,co<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:copy-of select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,val<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:value-of select=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,each<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:for-each select=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>for<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>each<span class="pl-pds">&quot;</span></span>,tex<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:text&gt;&lt;/xsl:text&gt;<span class="pl-pds">&quot;</span></span>,com<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:comment&gt;<span class="pl-pds">&quot;</span></span>,msg<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:message terminate=&quot;no&quot;&gt;<span class="pl-pds">&#39;</span></span>,fall<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;xsl:fallback&gt;<span class="pl-pds">&quot;</span></span>,num<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:number value=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,nam<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;namespace-alias stylesheet-prefix=&quot;&quot; result-prefix=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,pres<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:preserve-space elements=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,strip<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:strip-space elements=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,proc<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:processing-instruction name=&quot;&quot;&gt;<span class="pl-pds">&#39;</span></span>,sort<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;xsl:sort select=&quot;&quot; order=&quot;&quot;/&gt;<span class="pl-pds">&#39;</span></span>,</td>
      </tr>
      <tr>
        <td id="L321" class="blob-num js-line-number" data-line-number="321"></td>
        <td id="LC321" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>choose+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xsl:choose&gt;xsl:when+xsl:otherwise<span class="pl-pds">&quot;</span></span>,xsl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!!!+xsl:stylesheet[version=1.0 xmlns:xsl=http://www.w3.org/1999/XSL/Transform]&gt;{<span class="pl-cce">\n</span>|}<span class="pl-pds">&quot;</span></span>},snippets<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>!!!<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<span class="pl-pds">&#39;</span></span>}},haml<span class="pl-k">:</span>{filters<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>haml<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,profile<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>xml<span class="pl-pds">&quot;</span></span>},scss<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>},sass<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>},less<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>},stylus<span class="pl-k">:</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>extends<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>css<span class="pl-pds">&quot;</span></span>}},<span class="pl-s"><span class="pl-pds">&quot;</span>system<span class="pl-pds">&quot;</span></span>)});</td>
      </tr>
      <tr>
        <td id="L322" class="blob-num js-line-number" data-line-number="322"></td>
        <td id="LC322" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortcut<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span>mac<span class="pl-c1">\s</span><span class="pl-k">+</span>os<span class="pl-pds">/</span>i</span>.<span class="pl-c1">test</span>(<span class="pl-c1">navigator</span>.<span class="pl-c1">userAgent</span>),d<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span>`<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>~<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>!<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>@<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>#<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">4</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>$<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">5</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>%<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">6</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>^<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&amp;<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">8</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">9</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>(<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>:<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>&gt;<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>?<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\\</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>|<span class="pl-pds">&quot;</span></span>},h<span class="pl-k">=</span>{esc<span class="pl-k">:</span><span class="pl-c1">27</span>,escape<span class="pl-k">:</span><span class="pl-c1">27</span>,tab<span class="pl-k">:</span><span class="pl-c1">9</span>,space<span class="pl-k">:</span><span class="pl-c1">32</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>return<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">13</span>,enter<span class="pl-k">:</span><span class="pl-c1">13</span>,backspace<span class="pl-k">:</span><span class="pl-c1">8</span>,scrolllock<span class="pl-k">:</span><span class="pl-c1">145</span>,scroll_lock<span class="pl-k">:</span><span class="pl-c1">145</span>,scroll<span class="pl-k">:</span><span class="pl-c1">145</span>,capslock<span class="pl-k">:</span><span class="pl-c1">20</span>,caps_lock<span class="pl-k">:</span><span class="pl-c1">20</span>,caps<span class="pl-k">:</span><span class="pl-c1">20</span>,numlock<span class="pl-k">:</span><span class="pl-c1">144</span>,num_lock<span class="pl-k">:</span><span class="pl-c1">144</span>,num<span class="pl-k">:</span><span class="pl-c1">144</span>,pause<span class="pl-k">:</span><span class="pl-c1">19</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>break<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">19</span>,insert<span class="pl-k">:</span><span class="pl-c1">45</span>,home<span class="pl-k">:</span><span class="pl-c1">36</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>delete<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">46</span>,end<span class="pl-k">:</span><span class="pl-c1">35</span>,pageup<span class="pl-k">:</span><span class="pl-c1">33</span>,page_up<span class="pl-k">:</span><span class="pl-c1">33</span>,pu<span class="pl-k">:</span><span class="pl-c1">33</span>,pagedown<span class="pl-k">:</span><span class="pl-c1">34</span>,page_down<span class="pl-k">:</span><span class="pl-c1">34</span>,</td>
      </tr>
      <tr>
        <td id="L323" class="blob-num js-line-number" data-line-number="323"></td>
        <td id="LC323" class="blob-code blob-code-inner js-file-line">pd<span class="pl-k">:</span><span class="pl-c1">34</span>,plus<span class="pl-k">:</span><span class="pl-c1">187</span>,minus<span class="pl-k">:</span><span class="pl-c1">189</span>,left<span class="pl-k">:</span><span class="pl-c1">37</span>,up<span class="pl-k">:</span><span class="pl-c1">38</span>,right<span class="pl-k">:</span><span class="pl-c1">39</span>,down<span class="pl-k">:</span><span class="pl-c1">40</span>,f1<span class="pl-k">:</span><span class="pl-c1">112</span>,f2<span class="pl-k">:</span><span class="pl-c1">113</span>,f3<span class="pl-k">:</span><span class="pl-c1">114</span>,f4<span class="pl-k">:</span><span class="pl-c1">115</span>,f5<span class="pl-k">:</span><span class="pl-c1">116</span>,f6<span class="pl-k">:</span><span class="pl-c1">117</span>,f7<span class="pl-k">:</span><span class="pl-c1">118</span>,f8<span class="pl-k">:</span><span class="pl-c1">119</span>,f9<span class="pl-k">:</span><span class="pl-c1">120</span>,f10<span class="pl-k">:</span><span class="pl-c1">121</span>,f11<span class="pl-k">:</span><span class="pl-c1">122</span>,f12<span class="pl-k">:</span><span class="pl-c1">123</span>},i<span class="pl-k">=</span>{ctrl<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2303</span><span class="pl-pds">&quot;</span></span>,control<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2303</span><span class="pl-pds">&quot;</span></span>,meta<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2318</span><span class="pl-pds">&quot;</span></span>,shift<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u21e7</span><span class="pl-pds">&quot;</span></span>,alt<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2325</span><span class="pl-pds">&quot;</span></span>,enter<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u23ce</span><span class="pl-pds">&quot;</span></span>,tab<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u21e5</span><span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2190</span><span class="pl-pds">&quot;</span></span>,right<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2192</span><span class="pl-pds">&quot;</span></span>,up<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2191</span><span class="pl-pds">&quot;</span></span>,down<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2193</span><span class="pl-pds">&quot;</span></span>},b<span class="pl-k">=</span>{meta<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl<span class="pl-pds">&quot;</span></span>,control<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl<span class="pl-pds">&quot;</span></span>,left<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2190</span><span class="pl-pds">&quot;</span></span>,right<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2192</span><span class="pl-pds">&quot;</span></span>,up<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2191</span><span class="pl-pds">&quot;</span></span>,down<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\u2193</span><span class="pl-pds">&quot;</span></span>},c<span class="pl-k">=</span>{<span class="pl-c1">SHIFT</span><span class="pl-k">:</span><span class="pl-c1">1</span>,<span class="pl-c1">CTRL</span><span class="pl-k">:</span><span class="pl-c1">2</span>,<span class="pl-c1">ALT</span><span class="pl-k">:</span><span class="pl-c1">4</span>,<span class="pl-c1">META</span><span class="pl-k">:</span><span class="pl-c1">8</span>};<span class="pl-k">return</span>{<span class="pl-en">compile</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">typeof</span> a<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>)<span class="pl-k">return</span> a;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>),</td>
      </tr>
      <tr>
        <td id="L324" class="blob-num js-line-number" data-line-number="324"></td>
        <td id="LC324" class="blob-code blob-code-inner js-file-line">d,h,i<span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;i<span class="pl-k">&lt;</span>n;i<span class="pl-k">++</span>)h<span class="pl-k">=</span>a[i],<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>meta<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>ctrl<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>ctrl<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>control<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">CTRL</span><span class="pl-k">:</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>shift<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">SHIFT</span><span class="pl-k">:</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>alt<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">ALT</span><span class="pl-k">:</span>h<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>meta<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span>b<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">META</span><span class="pl-k">:</span>d<span class="pl-k">=</span>h;<span class="pl-k">return</span>{mask<span class="pl-k">:</span>b,key<span class="pl-k">:</span>d}},<span class="pl-en">test</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,i<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">compile</span>(a);<span class="pl-smi">b</span>.<span class="pl-smi">ctrlKey</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">CTRL</span>);<span class="pl-smi">b</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">SHIFT</span>);<span class="pl-smi">b</span>.<span class="pl-smi">altKey</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">ALT</span>);<span class="pl-smi">b</span>.<span class="pl-smi">metaKey</span><span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">|=</span><span class="pl-smi">c</span>.<span class="pl-c1">META</span>);<span class="pl-k">var</span> l<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">keyCode</span><span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-smi">keyCode</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">which</span>,n<span class="pl-k">=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(l).<span class="pl-c1">toLowerCase</span>();<span class="pl-k">if</span>(e<span class="pl-k">!==</span><span class="pl-smi">i</span>.<span class="pl-smi">mask</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-smi">key</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">return</span> h[<span class="pl-smi">i</span>.<span class="pl-smi">key</span>]<span class="pl-k">==</span>l;<span class="pl-k">else</span>{l<span class="pl-k">==</span><span class="pl-c1">188</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>,<span class="pl-pds">&quot;</span></span>);l<span class="pl-k">==</span><span class="pl-c1">190</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>);l<span class="pl-k">==</span><span class="pl-c1">191</span><span class="pl-k">&amp;&amp;</span>(n<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L325" class="blob-num js-line-number" data-line-number="325"></td>
        <td id="LC325" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(n<span class="pl-k">==</span><span class="pl-smi">i</span>.<span class="pl-smi">key</span>)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">shiftKey</span><span class="pl-k">&amp;&amp;</span>d[n])<span class="pl-k">return</span> d[n]<span class="pl-k">==</span><span class="pl-smi">i</span>.<span class="pl-smi">key</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">format</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span>e<span class="pl-k">?</span>i<span class="pl-k">:</span>b,d<span class="pl-k">=</span>e<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>,a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>().<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>+<span class="pl-pds">&quot;</span></span>),h<span class="pl-k">=</span>[],l,n<span class="pl-k">=</span><span class="pl-c1">0</span>;n<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;n<span class="pl-k">++</span>)l<span class="pl-k">=</span>a[n],<span class="pl-smi">h</span>.<span class="pl-c1">push</span>(l <span class="pl-k">in</span> c<span class="pl-k">?</span>c[l]<span class="pl-k">:</span><span class="pl-smi">l</span>.<span class="pl-c1">charAt</span>().<span class="pl-c1">toUpperCase</span>()<span class="pl-k">+</span><span class="pl-smi">l</span>.<span class="pl-c1">substring</span>(<span class="pl-c1">1</span>));<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">join</span>(d)}}});</td>
      </tr>
      <tr>
        <td id="L326" class="blob-num js-line-number" data-line-number="326"></td>
        <td id="LC326" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editor<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> h<span class="pl-k">=</span><span class="pl-c1">null</span>,i<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">createElement</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">i</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>;<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">setNewline</span>(<span class="pl-smi">i</span>.<span class="pl-c1">value</span>);i<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">return</span>{<span class="pl-en">setContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){h<span class="pl-k">=</span>b},<span class="pl-en">getContext</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> h},<span class="pl-en">getSelectionRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>selectionStart<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> h)<span class="pl-k">return</span>{start<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">selectionStart</span>,end<span class="pl-k">:</span><span class="pl-smi">h</span>.<span class="pl-smi">selectionEnd</span>};<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">document</span>.<span class="pl-c1">selection</span>){<span class="pl-smi">h</span>.<span class="pl-c1">focus</span>();<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-c1">selection</span>.<span class="pl-c1">createRange</span>();<span class="pl-k">if</span>(b<span class="pl-k">===</span><span class="pl-c1">null</span>)<span class="pl-k">return</span>{start<span class="pl-k">:</span><span class="pl-c1">0</span>,end<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">length</span>};<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">createTextRange</span>(),a<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">duplicate</span>();<span class="pl-smi">c</span>.<span class="pl-en">moveToBookmark</span>(<span class="pl-smi">b</span>.<span class="pl-en">getBookmark</span>());</td>
      </tr>
      <tr>
        <td id="L327" class="blob-num js-line-number" data-line-number="327"></td>
        <td id="LC327" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-en">setEndPoint</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EndToStart<span class="pl-pds">&quot;</span></span>,c);<span class="pl-k">return</span>{start<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span>.<span class="pl-c1">length</span>,end<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">text</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-c1">text</span>.<span class="pl-c1">length</span>}}<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-c1">null</span>},<span class="pl-en">createSelection</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">typeof</span> c<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>setSelectionRange<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> h)<span class="pl-smi">h</span>.<span class="pl-c1">setSelectionRange</span>(b,c);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>createTextRange<span class="pl-pds">&quot;</span></span><span class="pl-k">in</span> h){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">h</span>.<span class="pl-en">createTextRange</span>();<span class="pl-smi">a</span>.<span class="pl-c1">collapse</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>),f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">splitByLines</span>(<span class="pl-c1">this</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">substring</span>(<span class="pl-c1">0</span>,b)).<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;c<span class="pl-k">-=</span>f<span class="pl-k">+</span><span class="pl-smi">d</span>.<span class="pl-en">splitByLines</span>(<span class="pl-c1">this</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">substring</span>(b,c)).<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;b<span class="pl-k">-=</span>f;<span class="pl-smi">a</span>.<span class="pl-en">moveStart</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>character<span class="pl-pds">&quot;</span></span>,b);<span class="pl-smi">a</span>.<span class="pl-en">moveEnd</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>character<span class="pl-pds">&quot;</span></span>,c<span class="pl-k">-</span>b);<span class="pl-smi">a</span>.<span class="pl-c1">select</span>()}},</td>
      </tr>
      <tr>
        <td id="L328" class="blob-num js-line-number" data-line-number="328"></td>
        <td id="LC328" class="blob-code blob-code-inner js-file-line"><span class="pl-en">getCurrentLineRange</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCaretPos</span>();<span class="pl-k">return</span> b<span class="pl-k">===</span><span class="pl-c1">null</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">findNewlineBounds</span>(<span class="pl-c1">this</span>.<span class="pl-en">getContent</span>(),b)},<span class="pl-en">getCaretPos</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSelectionRange</span>();<span class="pl-k">return</span> b<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">:</span><span class="pl-c1">null</span>},<span class="pl-en">setCaretPos</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-en">createSelection</span>(b)},<span class="pl-en">getCurrentLine</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getCurrentLineRange</span>();<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">start</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">end</span><span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-smi">end</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">replaceContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">a</span>,<span class="pl-smi">g</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getContent</span>(),i<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utils<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(a)<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(c)<span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-c1">length</span><span class="pl-k">:</span>c);</td>
      </tr>
      <tr>
        <td id="L329" class="blob-num js-line-number" data-line-number="329"></td>
        <td id="LC329" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">d</span>.<span class="pl-en">isUndefined</span>(c)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>);g<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">padString</span>(b,<span class="pl-smi">i</span>.<span class="pl-en">getLinePaddingFromPosition</span>(f,c)));g<span class="pl-k">=</span><span class="pl-smi">emmet</span>.<span class="pl-en">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>tabStops<span class="pl-pds">&quot;</span></span>).<span class="pl-en">extract</span>(b,{<span class="pl-en">escape</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a}});b<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">text</span>;(g<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">tabstops</span>[<span class="pl-c1">0</span>])<span class="pl-k">?</span>(<span class="pl-smi">g</span>.<span class="pl-c1">start</span><span class="pl-k">+=</span>c,<span class="pl-smi">g</span>.<span class="pl-smi">end</span><span class="pl-k">+=</span>c)<span class="pl-k">:</span>g<span class="pl-k">=</span>{start<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">+</span>c,end<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">+</span>c};<span class="pl-k">try</span>{<span class="pl-smi">h</span>.<span class="pl-c1">value</span><span class="pl-k">=</span><span class="pl-smi">i</span>.<span class="pl-en">replaceSubstring</span>(f,b,c,a),<span class="pl-c1">this</span>.<span class="pl-en">createSelection</span>(<span class="pl-smi">g</span>.<span class="pl-c1">start</span>,<span class="pl-smi">g</span>.<span class="pl-smi">end</span>)}<span class="pl-k">catch</span>(l){}},<span class="pl-en">getContent</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">h</span>.<span class="pl-c1">value</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">getSyntax</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">detectSyntax</span>(<span class="pl-c1">this</span>,<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getOption</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>syntax<span class="pl-pds">&quot;</span></span>))},<span class="pl-en">getProfileName</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>).<span class="pl-en">getOption</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>profile<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L330" class="blob-num js-line-number" data-line-number="330"></td>
        <td id="LC330" class="blob-code blob-code-inner js-file-line"><span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getSyntax</span>()<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>b<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actionUtils<span class="pl-pds">&quot;</span></span>).<span class="pl-en">detectProfile</span>(<span class="pl-c1">this</span>)},<span class="pl-en">prompt</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">return</span> <span class="pl-en">prompt</span>(b)},<span class="pl-en">getSelection</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getSelectionRange</span>();<span class="pl-k">if</span>(b)<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-en">getContent</span>().<span class="pl-c1">substring</span>(<span class="pl-smi">b</span>.<span class="pl-c1">start</span>,<span class="pl-smi">b</span>.<span class="pl-smi">end</span>)}<span class="pl-k">catch</span>(c){}<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>},<span class="pl-en">getFilePath</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">location</span>.<span class="pl-c1">href</span>}}});</td>
      </tr>
      <tr>
        <td id="L331" class="blob-num js-line-number" data-line-number="331"></td>
        <td id="LC331" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">emmet</span>.<span class="pl-en">define</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>textarea<span class="pl-pds">&quot;</span></span>,<span class="pl-k">function</span>(<span class="pl-smi">e</span>,<span class="pl-smi">d</span>){<span class="pl-k">function</span> <span class="pl-en">h</span>(<span class="pl-smi">b</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>editor<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">getContext</span>().<span class="pl-c1">className</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,g<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">\b</span>emmet<span class="pl-cce">\-</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>)<span class="pl-cce">\-</span>(<span class="pl-c1">\w</span><span class="pl-k">+</span>)<span class="pl-pds">/</span>g</span>,h<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({},a,f<span class="pl-k">||</span>{}),i;i<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">exec</span>(c);){<span class="pl-k">var</span> j<span class="pl-k">=</span>i[<span class="pl-c1">1</span>].<span class="pl-c1">toLowerCase</span>();i<span class="pl-k">=</span>i[<span class="pl-c1">2</span>].<span class="pl-c1">toLowerCase</span>();<span class="pl-k">if</span>(i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>true<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>yes<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>1<span class="pl-pds">&quot;</span></span>)i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>false<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>no<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>i<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>)i<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;h[j]<span class="pl-k">=</span>i}<span class="pl-k">return</span> h[b]}function i(a,b){g[a.toLowerCase()]={compiled:e(&quot;shortcut&quot;).compile(a),action:b}}function b(a){var a=a||window.event,b=a.target||a.srcElement,c=a.keyCode||a.which,f=e(&quot;editor&quot;),i=e(&quot;shortcut&quot;);</td>
      </tr>
      <tr>
        <td id="L332" class="blob-num js-line-number" data-line-number="332"></td>
        <td id="LC332" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeType</span><span class="pl-k">==</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">nodeName</span><span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>TEXTAREA<span class="pl-pds">&quot;</span></span>){<span class="pl-k">if</span>(<span class="pl-k">~</span><span class="pl-smi">b</span>.<span class="pl-c1">className</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no-emmet<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">f</span>.<span class="pl-en">setContext</span>(b);<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-c1">find</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">i</span>.<span class="pl-c1">test</span>(<span class="pl-smi">b</span>.<span class="pl-smi">compiled</span>,a)){b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">action</span>;<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(c<span class="pl-k">==</span><span class="pl-c1">9</span>)<span class="pl-k">if</span>(<span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>use_tab<span class="pl-pds">&quot;</span></span>))b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation_with_tab<span class="pl-pds">&quot;</span></span>;<span class="pl-k">else</span> <span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>insert_formatted_line_break<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(c<span class="pl-k">==</span><span class="pl-c1">13</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">h</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>pretty_break<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>}<span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>).<span class="pl-en">run</span>(b,f);b<span class="pl-k">=</span>a;<span class="pl-smi">b</span>.<span class="pl-smi">cancelBubble</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">returnValue</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">stopPropagation</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-c1">stopPropagation</span>(),<span class="pl-smi">b</span>.<span class="pl-c1">preventDefault</span>());<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}})}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">var</span> c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L333" class="blob-num js-line-number" data-line-number="333"></td>
        <td id="LC333" class="blob-code blob-code-inner js-file-line">{<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+E<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation<span class="pl-pds">&quot;</span></span>,Tab<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>expand_abbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+D<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>match_pair_outward<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Shift+Meta+D<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>match_pair_inward<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Shift+Meta+A<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>wrap_with_abbreviation<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Alt+Right<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>next_edit_point<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Alt+Left<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>prev_edit_point<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+L<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>select_line<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+Shift+M<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>merge_lines<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+/<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>toggle_comment<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+J<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>split_join_tag<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+K<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>remove_tag<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Shift+Meta+Y<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>evaluate_math_expression<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Up<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>increment_number_by_1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Down<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>decrement_number_by_1<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Alt+Up<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>increment_number_by_01<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L334" class="blob-num js-line-number" data-line-number="334"></td>
        <td id="LC334" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>Alt+Down<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>decrement_number_by_01<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Alt+Up<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>increment_number_by_10<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Ctrl+Alt+Down<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>decrement_number_by_10<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+.<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>select_next_item<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+,<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>select_previous_item<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>Meta+Shift+B<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>reflect_css_value<span class="pl-pds">&quot;</span></span>,Enter<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>insert_formatted_line_break<span class="pl-pds">&quot;</span></span>},a<span class="pl-k">=</span>{syntax<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>html<span class="pl-pds">&quot;</span></span>,use_tab<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,pretty_break<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},g<span class="pl-k">=</span>{},f<span class="pl-k">=</span>{},j<span class="pl-k">=</span><span class="pl-c1">document</span>;<span class="pl-smi">j</span>.<span class="pl-smi">addEventListener</span><span class="pl-k">?</span><span class="pl-smi">j</span>.<span class="pl-c1">addEventListener</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>keydown<span class="pl-pds">&quot;</span></span>,b,<span class="pl-k">!</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">attachEvent</span><span class="pl-k">?</span><span class="pl-smi">ele</span>.<span class="pl-c1">attachEvent</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>onkeydown<span class="pl-pds">&quot;</span></span>,b)<span class="pl-k">:</span><span class="pl-smi">j</span>.<span class="pl-smi">onkeydown</span><span class="pl-k">=</span>func;f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({},a,{});<span class="pl-k">typeof</span> emmetKeymap<span class="pl-k">!=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>emmetKeymap);<span class="pl-smi">d</span>.<span class="pl-en">each</span>(c,</td>
      </tr>
      <tr>
        <td id="L335" class="blob-num js-line-number" data-line-number="335"></td>
        <td id="LC335" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-en">i</span>(b,a)});<span class="pl-k">return</span>{<span class="pl-en">setOptions</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">b</span>){f<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">extend</span>({},a,b<span class="pl-k">||</span>{})},getOption<span class="pl-k">:</span>h,addShortcut<span class="pl-k">:</span>i,<span class="pl-en">unbindShortcut</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">toLowerCase</span>();a <span class="pl-k">in</span> g<span class="pl-k">&amp;&amp;</span><span class="pl-k">delete</span> g[a]},<span class="pl-en">getShortcuts</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>shortcut<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">=</span><span class="pl-en">e</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>actions<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> <span class="pl-smi">d</span>.<span class="pl-c1">compact</span>(<span class="pl-smi">d</span>.<span class="pl-en">map</span>(g,<span class="pl-k">function</span>(<span class="pl-smi">c</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> f<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">toLowerCase</span>();<span class="pl-k">return</span> f<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>tab<span class="pl-pds">&quot;</span></span><span class="pl-k">||</span>f<span class="pl-k">==</span><span class="pl-s"><span class="pl-pds">&quot;</span>enter<span class="pl-pds">&quot;</span></span><span class="pl-k">?</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">:</span>{keystroke<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-en">format</span>(e),compiled<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-smi">compiled</span>,label<span class="pl-k">:</span><span class="pl-smi">d</span>.<span class="pl-en">last</span>((<span class="pl-smi">b</span>.<span class="pl-c1">get</span>(<span class="pl-smi">c</span>.<span class="pl-c1">action</span>).<span class="pl-c1">options</span>.<span class="pl-c1">label</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-c1">action</span>).<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)),action<span class="pl-k">:</span><span class="pl-smi">c</span>.<span class="pl-c1">action</span>}}))},<span class="pl-en">getInfo</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>This textareas on this page are powered by Emmet toolkit.<span class="pl-cce">\n\n</span>Available shortcuts:<span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L336" class="blob-num js-line-number" data-line-number="336"></td>
        <td id="LC336" class="blob-code blob-code-inner js-file-line">b<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-en">map</span>(<span class="pl-c1">this</span>.<span class="pl-en">getShortcuts</span>(),<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">keystroke</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-cce">\u2014</span> <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-c1">label</span>});a<span class="pl-k">+=</span><span class="pl-smi">b</span>.<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n\n</span><span class="pl-pds">&quot;</span></span>;a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>More info on http://emmet.io/<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> a},<span class="pl-en">showInfo</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">alert</span>(<span class="pl-c1">this</span>.<span class="pl-en">getInfo</span>())},<span class="pl-en">setup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-en">setOptions</span>(a)}}});</td>
      </tr>
</table>

  <div class="BlobToolbar position-absolute js-file-line-actions dropdown js-menu-container js-select-menu d-none" aria-hidden="true">
    <button class="btn-octicon ml-0 px-2 p-0 bg-white border border-gray-dark rounded-1 dropdown-toggle js-menu-target" type="button" aria-expanded="false" aria-haspopup="true" aria-label="Inline file action toolbar" aria-controls="inline-file-actions">
      <svg class="octicon octicon-kebab-horizontal" viewBox="0 0 13 16" version="1.1" width="13" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1.5 9a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zm5 0a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3zM13 7.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/></svg>
    </button>
    <div class="dropdown-menu-content js-menu-content" id="inline-file-actions">
      <ul class="BlobToolbar-dropdown dropdown-menu dropdown-menu-se mt-2">
        <li><clipboard-copy class="dropdown-item" id="js-copy-lines" style="cursor:pointer;" data-original-text="Copy lines">Copy lines</clipboard-copy></li>
        <li><clipboard-copy class="dropdown-item" id="js-copy-permalink" style="cursor:pointer;" data-original-text="Copy permalink">Copy permalink</clipboard-copy></li>
        <li><a class="dropdown-item js-update-url-with-hash" id="js-view-git-blame" href="/emmetio/textarea/blame/a2caeeb63ec01a52a57a282bbb55a99dd4c21186/emmet.min.js">View git blame</a></li>
          <li><a class="dropdown-item" id="js-new-issue" href="/emmetio/textarea/issues/new">Open new issue</a></li>
      </ul>
    </div>
  </div>

  </div>

  </div>

  <button type="button" data-facebox="#jump-to-line" data-facebox-class="linejump" data-hotkey="l" class="d-none">Jump to Line</button>
  <div id="jump-to-line" style="display:none">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-jump-to-line-form" action="" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <input class="form-control linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" aria-label="Jump to line" autofocus>
      <button type="submit" class="btn">Go</button>
</form>  </div>


  </div>
  <div class="modal-backdrop js-touch-events"></div>
</div>

    </div>
  </div>

  </div>

      
<div class="footer container-lg px-3" role="contentinfo">
  <div class="position-relative d-flex flex-justify-between pt-6 pb-2 mt-6 f6 text-gray border-top border-gray-light ">
    <ul class="list-style-none d-flex flex-wrap ">
      <li class="mr-3">&copy; 2018 <span title="1.82044s from unicorn-3078917374-4b21g">GitHub</span>, Inc.</li>
        <li class="mr-3"><a data-ga-click="Footer, go to terms, text:terms" href="https://github.com/site/terms">Terms</a></li>
        <li class="mr-3"><a data-ga-click="Footer, go to privacy, text:privacy" href="https://github.com/site/privacy">Privacy</a></li>
        <li class="mr-3"><a href="https://help.github.com/articles/github-security/" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li class="mr-3"><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
        <li><a data-ga-click="Footer, go to help, text:help" href="https://help.github.com">Help</a></li>
    </ul>

    <a aria-label="Homepage" title="GitHub" class="footer-octicon" href="https://github.com">
      <svg height="24" class="octicon octicon-mark-github" viewBox="0 0 16 16" version="1.1" width="24" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0 0 16 8c0-4.42-3.58-8-8-8z"/></svg>
</a>
   <ul class="list-style-none d-flex flex-wrap ">
        <li class="mr-3"><a data-ga-click="Footer, go to contact, text:contact" href="https://github.com/contact">Contact GitHub</a></li>
      <li class="mr-3"><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li class="mr-3"><a href="https://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li class="mr-3"><a href="https://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li class="mr-3"><a href="https://blog.github.com" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a data-ga-click="Footer, go to about, text:about" href="https://github.com/about">About</a></li>

    </ul>
  </div>
  <div class="d-flex flex-justify-center pb-6">
    <span class="f6 text-gray-light"></span>
  </div>
</div>



  <div id="ajax-error-message" class="ajax-error-message flash flash-error">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <button type="button" class="flash-close js-ajax-error-dismiss" aria-label="Dismiss error">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
    You canât perform that action at this time.
  </div>


    <script crossorigin="anonymous" integrity="sha512-H2b2rXQmQcnMZW2c0jxXEFTC+Ti5C07rPW0m+08k7kQXiKOojgrV7IFxrbcbTvl+3nyJaBpvAhUL5rVm6tZV+g==" type="application/javascript" src="https://assets-cdn.github.com/assets/unsupported-293e8a87407203524f09825549bebca7.js"></script>
  <div class="js-stale-session-flash stale-session-flash flash flash-warn flash-banner d-none">
    <svg class="octicon octicon-alert" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>
    <span class="signed-in-tab-flash">You signed in with another tab or window. <a href="">Reload</a> to refresh your session.</span>
    <span class="signed-out-tab-flash">You signed out in another tab or window. <a href="">Reload</a> to refresh your session.</span>
  </div>
  <div class="facebox" id="facebox" style="display:none;">
  <div class="facebox-popup">
    <div class="facebox-content" role="dialog" aria-labelledby="facebox-header" aria-describedby="facebox-description">
    </div>
    <button type="button" class="facebox-close js-facebox-close" aria-label="Close modal">
      <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
    </button>
  </div>
</div>

  <div class="Popover js-hovercard-content position-absolute" style="display: none; outline: none;" tabindex="0">
  <div class="Popover-message Popover-message--bottom-left Popover-message--large Box box-shadow-large" style="width:360px;">
  </div>
</div>

<div id="hovercard-aria-description" class="sr-only">
  Press h to open a hovercard with more details.
</div>


  </body>
</html>

